<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="3302" onload="init(evt)" viewBox="0 0 1200 3302" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="3302.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >CPU Icicle Graph</text>
<text id="details" x="10.00" y="3285" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="3285" > </text>
<g id="frames">
<g >
<title>LocalCache$Segment.getLiveValue (2 samples, 0.21%)</title><rect x="788.3" y="52" width="2.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="791.30" y="62.5" ></text>
</g>
<g >
<title>SkipEmptyWorkStep.execute (2 samples, 0.21%)</title><rect x="1064.5" y="516" width="2.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="1067.47" y="526.5" ></text>
</g>
<g >
<title>GangWorker::loop() (4 samples, 0.43%)</title><rect x="645.2" y="180" width="5.0" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="648.19" y="190.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="461.9" y="164" width="2.5" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="464.91" y="174.5" ></text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (3 samples, 0.32%)</title><rect x="262.3" y="68" width="3.8" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="265.32" y="78.5" ></text>
</g>
<g >
<title>BuildCommandOnly.execute (2 samples, 0.21%)</title><rect x="744.4" y="2404" width="2.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="747.36" y="2414.5" ></text>
</g>
<g >
<title>DefaultBuildSessionContext.execute (2 samples, 0.21%)</title><rect x="97.9" y="1364" width="2.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="100.87" y="1374.5" ></text>
</g>
<g >
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (15 samples, 1.60%)</title><rect x="549.8" y="84" width="18.8" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="552.79" y="94.5" ></text>
</g>
<g >
<title>DefaultDomainObjectCollection.assertMutable (2 samples, 0.21%)</title><rect x="177.0" y="100" width="2.5" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="179.96" y="110.5" ></text>
</g>
<g >
<title>CompositeFileCollection$$Lambda$.accept (2 samples, 0.21%)</title><rect x="788.3" y="1940" width="2.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="791.30" y="1950.5" ></text>
</g>
<g >
<title>Thread::call_run() (7 samples, 0.74%)</title><rect x="323.8" y="132" width="8.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="326.83" y="142.5" ></text>
</g>
<g >
<title>Gradle infrastructure (2 samples, 0.21%)</title><rect x="97.9" y="292" width="2.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="100.87" y="302.5" ></text>
</g>
<g >
<title>VintageBuildModelController.prepareProjects (2 samples, 0.21%)</title><rect x="97.9" y="532" width="2.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="100.87" y="542.5" ></text>
</g>
<g >
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (2 samples, 0.21%)</title><rect x="826.0" y="132" width="2.5" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="828.96" y="142.5" ></text>
</g>
<g >
<title>Thread::call_run() (3 samples, 0.32%)</title><rect x="731.8" y="164" width="3.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="734.81" y="174.5" ></text>
</g>
<g >
<title>start_thread (3 samples, 0.32%)</title><rect x="289.9" y="212" width="3.8" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="292.94" y="222.5" ></text>
</g>
<g >
<title>G1CMTask::drain_local_queue(bool) [clone .part.158] (4 samples, 0.43%)</title><rect x="340.1" y="116" width="5.1" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="343.15" y="126.5" ></text>
</g>
<g >
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (31 samples, 3.30%)</title><rect x="468.2" y="116" width="38.9" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="471.19" y="126.5" >G1C..</text>
</g>
<g >
<title>OopOopIterateBoundedDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*, MemRegion) (4 samples, 0.43%)</title><rect x="340.1" y="68" width="5.1" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="343.15" y="78.5" ></text>
</g>
<g >
<title>DirectorySnapshot.lambda$accept$2 (2 samples, 0.21%)</title><rect x="788.3" y="1556" width="2.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="791.30" y="1566.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="769.5" y="196" width="2.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="772.47" y="206.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp$OfRef.accept (2 samples, 0.21%)</title><rect x="788.3" y="628" width="2.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="791.30" y="638.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="276.1" y="132" width="2.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="279.13" y="142.5" ></text>
</g>
<g >
<title>Gradle infrastructure (2 samples, 0.21%)</title><rect x="97.9" y="1236" width="2.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="100.87" y="1246.5" ></text>
</g>
<g >
<title>DefaultConfiguration.&lt;init&gt; (2 samples, 0.21%)</title><rect x="213.4" y="116" width="2.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="216.36" y="126.5" ></text>
</g>
<g >
<title>RootBuildLifecycleBuildActionExecutor.lambda$execute$0 (2 samples, 0.21%)</title><rect x="97.9" y="1092" width="2.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="100.87" y="1102.5" ></text>
</g>
<g >
<title>ImmutableActionSet.plus (2 samples, 0.21%)</title><rect x="749.4" y="132" width="2.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="752.38" y="142.5" ></text>
</g>
<g >
<title>DefaultServiceRegistry$CompositeServiceProvider.getService (2 samples, 0.21%)</title><rect x="192.0" y="116" width="2.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="195.02" y="126.5" ></text>
</g>
<g >
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (19 samples, 2.02%)</title><rect x="518.4" y="84" width="23.9" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="521.40" y="94.5" >D..</text>
</g>
<g >
<title>DefaultServiceRegistry$FactoryService.bind (2 samples, 0.21%)</title><rect x="192.0" y="52" width="2.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="195.02" y="62.5" ></text>
</g>
<g >
<title>DefaultArtifactDependencyResolver$DefaultResolveContextToComponentResolver.resolve (2 samples, 0.21%)</title><rect x="744.4" y="500" width="2.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="747.36" y="510.5" ></text>
</g>
<g >
<title>DaemonCommandExecution.proceed (2 samples, 0.21%)</title><rect x="744.4" y="2452" width="2.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="747.36" y="2462.5" ></text>
</g>
<g >
<title>GangWorker::loop() (15 samples, 1.60%)</title><rect x="995.4" y="132" width="18.9" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="998.43" y="142.5" ></text>
</g>
<g >
<title>AbstractFileCollection.getFiles (2 samples, 0.21%)</title><rect x="305.0" y="292" width="2.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="308.00" y="302.5" ></text>
</g>
<g >
<title>ConcurrentGCThread::run() (2 samples, 0.21%)</title><rect x="991.7" y="148" width="2.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="994.66" y="158.5" ></text>
</g>
<g >
<title>ThreadPoolExecutor$Worker.run (2 samples, 0.21%)</title><rect x="97.9" y="1892" width="2.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="100.87" y="1902.5" ></text>
</g>
<g >
<title>DependencyInjectingInstantiator.convertParameters (6 samples, 0.64%)</title><rect x="213.4" y="68" width="7.5" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="216.36" y="78.5" ></text>
</g>
<g >
<title>LocalCache$AccessQueue.offer (2 samples, 0.21%)</title><rect x="790.8" y="84" width="2.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="793.81" y="94.5" ></text>
</g>
<g >
<title>GangWorker::loop() (5 samples, 0.53%)</title><rect x="902.5" y="148" width="6.3" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="905.53" y="158.5" ></text>
</g>
<g >
<title>G1CMTask::drain_local_queue(bool) [clone .part.158] (8 samples, 0.85%)</title><rect x="454.4" y="68" width="10.0" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="457.38" y="78.5" ></text>
</g>
<g >
<title>StateTransitionController.inState (2 samples, 0.21%)</title><rect x="744.4" y="1476" width="2.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="747.36" y="1486.5" ></text>
</g>
<g >
<title>DefaultBuildEventsListenerRegistry$AbstractListener.run (2 samples, 0.21%)</title><rect x="69.0" y="84" width="2.5" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="72.00" y="94.5" ></text>
</g>
<g >
<title>DaemonCommandExecution.proceed (2 samples, 0.21%)</title><rect x="744.4" y="2484" width="2.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="747.36" y="2494.5" ></text>
</g>
<g >
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (9 samples, 0.96%)</title><rect x="652.7" y="132" width="11.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="655.72" y="142.5" ></text>
</g>
<g >
<title>WrapperPluginAutoApplyAction.execute (2 samples, 0.21%)</title><rect x="97.9" y="116" width="2.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="100.87" y="126.5" ></text>
</g>
<g >
<title>CaptureStateBeforeExecutionStep.lambda$execute$0 (2 samples, 0.21%)</title><rect x="207.1" y="212" width="2.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="210.09" y="222.5" ></text>
</g>
<g >
<title>TaskExecution$4.withWorkspace (2 samples, 0.21%)</title><rect x="207.1" y="388" width="2.5" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="210.09" y="398.5" ></text>
</g>
<g >
<title>AbstractOpaqueFileCollection.visitContents (2 samples, 0.21%)</title><rect x="305.0" y="164" width="2.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="308.00" y="174.5" ></text>
</g>
<g >
<title>DefaultConfigurationResolver.resolveBuildDependencies (2 samples, 0.21%)</title><rect x="744.4" y="548" width="2.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="747.36" y="558.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="101.6" y="164" width="2.5" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="104.64" y="174.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="287.4" y="132" width="2.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="290.43" y="142.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp$OfRef.evaluateSequential (2 samples, 0.21%)</title><rect x="788.3" y="1684" width="2.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="791.30" y="1694.5" ></text>
</g>
<g >
<title>DefaultWorkerLeaseService.withLocks (2 samples, 0.21%)</title><rect x="97.9" y="1284" width="2.5" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="100.87" y="1294.5" ></text>
</g>
<g >
<title>Gradle infrastructure (2 samples, 0.21%)</title><rect x="97.9" y="100" width="2.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="100.87" y="110.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="287.4" y="148" width="2.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="290.43" y="158.5" ></text>
</g>
<g >
<title>DirectorySnapshot.lambda$accept$2 (2 samples, 0.21%)</title><rect x="788.3" y="980" width="2.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="791.30" y="990.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="220.9" y="196" width="2.5" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="223.89" y="206.5" ></text>
</g>
<g >
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.21%)</title><rect x="714.2" y="180" width="2.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="717.23" y="190.5" ></text>
</g>
<g >
<title>ClassLoaderDataGraphKlassIteratorAtomic::next_klass() (2 samples, 0.21%)</title><rect x="92.9" y="52" width="2.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="95.85" y="62.5" ></text>
</g>
<g >
<title>DefaultRootBuildState.run (2 samples, 0.21%)</title><rect x="744.4" y="2036" width="2.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="747.36" y="2046.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (3 samples, 0.32%)</title><rect x="224.7" y="164" width="3.7" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="227.66" y="174.5" ></text>
</g>
<g >
<title>G1ParTask::work(unsigned int) (31 samples, 3.30%)</title><rect x="468.2" y="164" width="38.9" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="471.19" y="174.5" >G1P..</text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (5 samples, 0.53%)</title><rect x="664.0" y="68" width="6.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="667.02" y="78.5" ></text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (5 samples, 0.53%)</title><rect x="910.1" y="52" width="6.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="913.06" y="62.5" ></text>
</g>
<g >
<title>JavaPlugin.configureArchivesAndComponent (2 samples, 0.21%)</title><rect x="1166.1" y="180" width="2.6" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="1169.15" y="190.5" ></text>
</g>
<g >
<title>NativeCall::destination() const (2 samples, 0.21%)</title><rect x="818.4" y="52" width="2.5" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="821.43" y="62.5" ></text>
</g>
<g >
<title>ResolveChangesStep$$Lambda$.get (2 samples, 0.21%)</title><rect x="1064.5" y="324" width="2.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="1067.47" y="334.5" ></text>
</g>
<g >
<title>CachingDirectedGraphWalker$GraphWithEmptyEdges.getNodeValues (2 samples, 0.21%)</title><rect x="744.4" y="724" width="2.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="747.36" y="734.5" ></text>
</g>
<g >
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (6 samples, 0.64%)</title><rect x="946.5" y="116" width="7.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="949.47" y="126.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.21%)</title><rect x="1132.3" y="68" width="2.5" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="1135.26" y="78.5" ></text>
</g>
<g >
<title>EventFiringTaskExecuter$1.executeTask (2 samples, 0.21%)</title><rect x="1064.5" y="820" width="2.5" height="15.0" fill="rgb(99,244,99)" rx="2" ry="2" />
<text  x="1067.47" y="830.5" ></text>
</g>
<g >
<title>LocalCache$Segment.cleanUp (2 samples, 0.21%)</title><rect x="790.8" y="164" width="2.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="793.81" y="174.5" ></text>
</g>
<g >
<title>DefaultBuildTreeLifecycleController.doScheduleAndRunTasks (2 samples, 0.21%)</title><rect x="97.9" y="788" width="2.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="100.87" y="798.5" ></text>
</g>
<g >
<title>DefaultInputFingerprinter.fingerprintInputProperties (2 samples, 0.21%)</title><rect x="788.3" y="2740" width="2.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="791.30" y="2750.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="101.6" y="148" width="2.5" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="104.64" y="158.5" ></text>
</g>
<g >
<title>GangWorker::loop() (4 samples, 0.43%)</title><rect x="340.1" y="180" width="5.1" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="343.15" y="190.5" ></text>
</g>
<g >
<title>LocalTaskNodeExecutor.execute (2 samples, 0.21%)</title><rect x="207.1" y="660" width="2.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="210.09" y="670.5" ></text>
</g>
<g >
<title>FileTreeAdapter$1.visitFileTree (2 samples, 0.21%)</title><rect x="788.3" y="2020" width="2.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="791.30" y="2030.5" ></text>
</g>
<g >
<title>AbstractPipeline.wrapAndCopyInto (2 samples, 0.21%)</title><rect x="788.3" y="1460" width="2.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="791.30" y="1470.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="320.1" y="100" width="2.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="323.06" y="110.5" ></text>
</g>
<g >
<title>AssignWorkspaceStep.lambda$execute$0 (2 samples, 0.21%)</title><rect x="207.1" y="356" width="2.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="210.09" y="366.5" ></text>
</g>
<g >
<title>start_thread (7 samples, 0.74%)</title><rect x="248.5" y="212" width="8.8" height="15.0" fill="rgb(218,76,76)" rx="2" ry="2" />
<text  x="251.51" y="222.5" ></text>
</g>
<g >
<title>StartParamsValidatingActionExecuter.execute (2 samples, 0.21%)</title><rect x="744.4" y="2340" width="2.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="747.36" y="2350.5" ></text>
</g>
<g >
<title>AbstractPipeline.copyInto (2 samples, 0.21%)</title><rect x="788.3" y="484" width="2.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="791.30" y="494.5" ></text>
</g>
<g >
<title>start_thread (7 samples, 0.74%)</title><rect x="426.8" y="212" width="8.8" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="429.77" y="222.5" ></text>
</g>
<g >
<title>Optional.orElseGet (2 samples, 0.21%)</title><rect x="1064.5" y="340" width="2.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="1067.47" y="350.5" ></text>
</g>
<g >
<title>DefaultBuildConfigurationActionExecuter$$Lambda$.run (2 samples, 0.21%)</title><rect x="744.4" y="980" width="2.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="747.36" y="990.5" ></text>
</g>
<g >
<title>DependencyInjectingInstantiator.newInstance (2 samples, 0.21%)</title><rect x="1100.9" y="116" width="2.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="1103.87" y="126.5" ></text>
</g>
<g >
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.21%)</title><rect x="1015.5" y="84" width="2.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="1018.51" y="94.5" ></text>
</g>
<g >
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (2 samples, 0.21%)</title><rect x="593.7" y="100" width="2.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="596.72" y="110.5" ></text>
</g>
<g >
<title>Thread*) (5 samples, 0.53%)</title><rect x="910.1" y="164" width="6.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="913.06" y="174.5" ></text>
</g>
<g >
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (2 samples, 0.21%)</title><rect x="282.4" y="68" width="2.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="285.40" y="78.5" ></text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (11 samples, 1.17%)</title><rect x="438.1" y="68" width="13.8" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="441.06" y="78.5" ></text>
</g>
<g >
<title>AbstractFileCollection.visitStructure (2 samples, 0.21%)</title><rect x="788.3" y="2628" width="2.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="791.30" y="2638.5" ></text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (3 samples, 0.32%)</title><rect x="869.9" y="68" width="3.8" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="872.89" y="78.5" ></text>
</g>
<g >
<title>DefaultRootComponentMetadataBuilder.getRootComponentMetadata (2 samples, 0.21%)</title><rect x="744.4" y="388" width="2.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="747.36" y="398.5" ></text>
</g>
<g >
<title>Thread*) (5 samples, 0.53%)</title><rect x="699.2" y="180" width="6.2" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="702.17" y="190.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="262.3" y="196" width="2.5" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="265.32" y="206.5" ></text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (2 samples, 0.21%)</title><rect x="287.4" y="100" width="2.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="290.43" y="110.5" ></text>
</g>
<g >
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (2 samples, 0.21%)</title><rect x="1069.5" y="116" width="2.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1072.49" y="126.5" ></text>
</g>
<g >
<title>ArrayList$ArrayListSpliterator.forEachRemaining (2 samples, 0.21%)</title><rect x="788.3" y="468" width="2.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="791.30" y="478.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="435.6" y="196" width="2.5" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="438.55" y="206.5" ></text>
</g>
<g >
<title>ReferencePipeline$2$1.accept (2 samples, 0.21%)</title><rect x="744.4" y="164" width="2.5" height="15.0" fill="rgb(60,210,60)" rx="2" ry="2" />
<text  x="747.36" y="174.5" ></text>
</g>
<g >
<title>HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (7 samples, 0.74%)</title><rect x="723.0" y="52" width="8.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="726.02" y="62.5" ></text>
</g>
<g >
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.21%)</title><rect x="282.4" y="100" width="2.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="285.40" y="110.5" ></text>
</g>
<g >
<title>AbstractIndexedListIterator.hasNext (2 samples, 0.21%)</title><rect x="20.0" y="52" width="2.6" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="23.04" y="62.5" ></text>
</g>
<g >
<title>FileSystemSnapshotFilter$FilteringVisitor.visitEntry (2 samples, 0.21%)</title><rect x="788.3" y="180" width="2.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="791.30" y="190.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="769.5" y="228" width="2.5" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="772.47" y="238.5" ></text>
</g>
<g >
<title>CachingTaskDependencyResolveContext.getDependencies (2 samples, 0.21%)</title><rect x="744.4" y="772" width="2.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="747.36" y="782.5" ></text>
</g>
<g >
<title>TaskExecution$4.withWorkspace (2 samples, 0.21%)</title><rect x="788.3" y="2868" width="2.5" height="15.0" fill="rgb(70,219,70)" rx="2" ry="2" />
<text  x="791.30" y="2878.5" ></text>
</g>
<g >
<title>start_thread (11 samples, 1.17%)</title><rect x="438.1" y="164" width="13.8" height="15.0" fill="rgb(233,98,98)" rx="2" ry="2" />
<text  x="441.06" y="174.5" ></text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (5 samples, 0.53%)</title><rect x="287.4" y="68" width="6.3" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="290.43" y="78.5" ></text>
</g>
<g >
<title>DefaultSynchronizer.withLock (2 samples, 0.21%)</title><rect x="744.4" y="1844" width="2.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="747.36" y="1854.5" ></text>
</g>
<g >
<title>BuildTreeState.run (2 samples, 0.21%)</title><rect x="744.4" y="2116" width="2.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="747.36" y="2126.5" ></text>
</g>
<g >
<title>BuildTreeLifecycleBuildActionExecutor$$Lambda$.apply (2 samples, 0.21%)</title><rect x="744.4" y="2100" width="2.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="747.36" y="2110.5" ></text>
</g>
<g >
<title>DefaultSynchronizer.withLock (2 samples, 0.21%)</title><rect x="744.4" y="1460" width="2.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="747.36" y="1470.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (11 samples, 1.17%)</title><rect x="399.1" y="148" width="13.9" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="402.15" y="158.5" ></text>
</g>
<g >
<title>Thread.run (2 samples, 0.21%)</title><rect x="744.4" y="2820" width="2.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="747.36" y="2830.5" ></text>
</g>
<g >
<title>DefaultBuildTreeWorkPreparer$$Lambda$.accept (2 samples, 0.21%)</title><rect x="744.4" y="1284" width="2.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="747.36" y="1294.5" ></text>
</g>
<g >
<title>jbyte_disjoint_arraycopy (3 samples, 0.32%)</title><rect x="1176.2" y="52" width="3.8" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="1179.19" y="62.5" ></text>
</g>
<g >
<title>AbstractNestedRuntimeBeanNode$BeanPropertyValue$1$1.create (2 samples, 0.21%)</title><rect x="1136.0" y="68" width="2.5" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="1139.02" y="78.5" ></text>
</g>
<g >
<title>WatchForDisconnection.execute (2 samples, 0.21%)</title><rect x="744.4" y="2436" width="2.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="747.36" y="2446.5" ></text>
</g>
<g >
<title>ExecutorPolicy$CatchAndRecordFailures.onExecute (2 samples, 0.21%)</title><rect x="97.9" y="1844" width="2.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="100.87" y="1854.5" ></text>
</g>
<g >
<title>RemoveUntrackedExecutionStateStep.execute (2 samples, 0.21%)</title><rect x="1064.5" y="532" width="2.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1067.47" y="542.5" ></text>
</g>
<g >
<title>DirectorySnapshot.lambda$accept$2 (2 samples, 0.21%)</title><rect x="788.3" y="596" width="2.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="791.30" y="606.5" ></text>
</g>
<g >
<title>VintageBuildModelController$$Lambda$.run (2 samples, 0.21%)</title><rect x="97.9" y="404" width="2.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="100.87" y="414.5" ></text>
</g>
<g >
<title>AsmBackedClassGenerator$InvokeConstructorStrategy.newInstance (2 samples, 0.21%)</title><rect x="213.4" y="196" width="2.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="216.36" y="206.5" ></text>
</g>
<g >
<title>IdentifyStep.execute (2 samples, 0.21%)</title><rect x="788.3" y="2916" width="2.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="791.30" y="2926.5" ></text>
</g>
<g >
<title>G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (20 samples, 2.13%)</title><rect x="874.9" y="68" width="25.1" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="877.91" y="78.5" >G..</text>
</g>
<g >
<title>DefaultSynchronizer.withLock (2 samples, 0.21%)</title><rect x="97.9" y="676" width="2.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="100.87" y="686.5" ></text>
</g>
<g >
<title>DefaultRootComponentMetadataBuilder.lambda$buildRootComponentMetadata$0 (2 samples, 0.21%)</title><rect x="744.4" y="404" width="2.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="747.36" y="414.5" ></text>
</g>
<g >
<title>ThreadPoolExecutor.runWorker (2 samples, 0.21%)</title><rect x="97.9" y="1876" width="2.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="100.87" y="1886.5" ></text>
</g>
<g >
<title>DirectorySnapshot$$Lambda$.accept (2 samples, 0.21%)</title><rect x="788.3" y="612" width="2.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="791.30" y="622.5" ></text>
</g>
<g >
<title>Streams$StreamBuilderImpl.forEachRemaining (2 samples, 0.21%)</title><rect x="788.3" y="1236" width="2.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="791.30" y="1246.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="461.9" y="132" width="2.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="464.91" y="142.5" ></text>
</g>
<g >
<title>DefaultExecutionEngine$1.execute (2 samples, 0.21%)</title><rect x="1064.5" y="676" width="2.5" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="1067.47" y="686.5" ></text>
</g>
<g >
<title>Thread::call_run() (5 samples, 0.53%)</title><rect x="699.2" y="164" width="6.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="702.17" y="174.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (2 samples, 0.21%)</title><rect x="332.6" y="68" width="2.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="335.62" y="78.5" ></text>
</g>
<g >
<title>Thread*) (3 samples, 0.32%)</title><rect x="916.3" y="164" width="3.8" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="919.34" y="174.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="859.9" y="196" width="2.5" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="862.85" y="206.5" ></text>
</g>
<g >
<title>OtherRegionsTable::add_reference(void*, unsigned int) (3 samples, 0.32%)</title><rect x="1068.2" y="68" width="3.8" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="1071.23" y="78.5" ></text>
</g>
<g >
<title>G1ParTask::work(unsigned int) (19 samples, 2.02%)</title><rect x="518.4" y="148" width="23.9" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="521.40" y="158.5" >G..</text>
</g>
<g >
<title>ForEachOps$ForEachOp$OfRef.evaluateSequential (2 samples, 0.21%)</title><rect x="788.3" y="1492" width="2.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="791.30" y="1502.5" ></text>
</g>
<g >
<title>DefaultPlanExecutor$ExecutorWorker.lambda$run$0 (2 samples, 0.21%)</title><rect x="1064.5" y="932" width="2.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1067.47" y="942.5" ></text>
</g>
<g >
<title>SparsePRT::add_card(int, int) (3 samples, 0.32%)</title><rect x="1068.2" y="52" width="3.8" height="15.0" fill="rgb(215,215,64)" rx="2" ry="2" />
<text  x="1071.23" y="62.5" ></text>
</g>
<g >
<title>G1ParallelCleaningTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="114.2" y="68" width="2.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="117.19" y="78.5" ></text>
</g>
<g >
<title>StateTransitionController$$Lambda$.run (2 samples, 0.21%)</title><rect x="97.9" y="660" width="2.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="100.87" y="670.5" ></text>
</g>
<g >
<title>HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (2 samples, 0.21%)</title><rect x="718.0" y="68" width="2.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="721.00" y="78.5" ></text>
</g>
<g >
<title>AbstractPipeline.evaluate (2 samples, 0.21%)</title><rect x="788.3" y="1508" width="2.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="791.30" y="1518.5" ></text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (2 samples, 0.21%)</title><rect x="262.3" y="100" width="2.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="265.32" y="110.5" ></text>
</g>
<g >
<title>Thread::call_run() (5 samples, 0.53%)</title><rect x="902.5" y="164" width="6.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="905.53" y="174.5" ></text>
</g>
<g >
<title>Thread::call_run() (11 samples, 1.17%)</title><rect x="438.1" y="132" width="13.8" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="441.06" y="142.5" ></text>
</g>
<g >
<title>GangWorker::loop() (15 samples, 1.60%)</title><rect x="549.8" y="116" width="18.8" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="552.79" y="126.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp.evaluateSequential (2 samples, 0.21%)</title><rect x="788.3" y="1092" width="2.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="791.30" y="1102.5" ></text>
</g>
<g >
<title>VfsRelativePath.hasPrefix (2 samples, 0.21%)</title><rect x="1123.5" y="52" width="2.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1126.47" y="62.5" ></text>
</g>
<g >
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.43%)</title><rect x="645.2" y="148" width="5.0" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="648.19" y="158.5" ></text>
</g>
<g >
<title>BuildModelActionRunner.run (2 samples, 0.21%)</title><rect x="744.4" y="1908" width="2.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="747.36" y="1918.5" ></text>
</g>
<g >
<title>CompositeFileCollection.visitContents (2 samples, 0.21%)</title><rect x="788.3" y="2132" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="791.30" y="2142.5" ></text>
</g>
<g >
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (19 samples, 2.02%)</title><rect x="518.4" y="116" width="23.9" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="521.40" y="126.5" >G..</text>
</g>
<g >
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (3 samples, 0.32%)</title><rect x="731.8" y="68" width="3.8" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="734.81" y="78.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="101.6" y="132" width="2.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="104.64" y="142.5" ></text>
</g>
<g >
<title>HashMap.putVal (2 samples, 0.21%)</title><rect x="690.4" y="68" width="2.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="693.38" y="78.5" ></text>
</g>
<g >
<title>SkipTaskWithNoActionsExecuter.execute (2 samples, 0.21%)</title><rect x="207.1" y="548" width="2.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="210.09" y="558.5" ></text>
</g>
<g >
<title>GangWorker::loop() (3 samples, 0.32%)</title><rect x="224.7" y="180" width="3.7" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="227.66" y="190.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (2 samples, 0.21%)</title><rect x="451.9" y="68" width="2.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="454.87" y="78.5" ></text>
</g>
<g >
<title>Thread*) (11 samples, 1.17%)</title><rect x="53.9" y="180" width="13.8" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="56.94" y="190.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="287.4" y="164" width="2.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="290.43" y="174.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (7 samples, 0.74%)</title><rect x="426.8" y="148" width="8.8" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="429.77" y="158.5" ></text>
</g>
<g >
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (7 samples, 0.74%)</title><rect x="723.0" y="100" width="8.8" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="726.02" y="110.5" ></text>
</g>
<g >
<title>Hashing$MessageDigestHasher.putInt (2 samples, 0.21%)</title><rect x="808.4" y="84" width="2.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="811.38" y="94.5" ></text>
</g>
<g >
<title>DefaultBuildTreeWorkPreparer.scheduleRequestedTasks (2 samples, 0.21%)</title><rect x="97.9" y="724" width="2.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="100.87" y="734.5" ></text>
</g>
<g >
<title>DirectorySnapshot.accept (2 samples, 0.21%)</title><rect x="788.3" y="772" width="2.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="791.30" y="782.5" ></text>
</g>
<g >
<title>Optional.map (2 samples, 0.21%)</title><rect x="1064.5" y="404" width="2.5" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="1067.47" y="414.5" ></text>
</g>
<g >
<title>IdentityCacheStep.execute (2 samples, 0.21%)</title><rect x="1064.5" y="644" width="2.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1067.47" y="654.5" ></text>
</g>
<g >
<title>G1RebuildRemSetTask::work(unsigned int) (11 samples, 1.17%)</title><rect x="53.9" y="132" width="13.8" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="56.94" y="142.5" ></text>
</g>
<g >
<title>GangWorker::loop() (7 samples, 0.74%)</title><rect x="248.5" y="164" width="8.8" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="251.51" y="174.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp$OfRef.evaluateSequential (2 samples, 0.21%)</title><rect x="788.3" y="916" width="2.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="791.30" y="926.5" ></text>
</g>
<g >
<title>Thread*) (7 samples, 0.74%)</title><rect x="426.8" y="196" width="8.8" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="429.77" y="206.5" ></text>
</g>
<g >
<title>AbstractValidatingNamedDomainObjectContainer.create (2 samples, 0.21%)</title><rect x="215.9" y="180" width="2.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="218.87" y="190.5" ></text>
</g>
<g >
<title>AbstractPipeline.wrapAndCopyInto (2 samples, 0.21%)</title><rect x="744.4" y="228" width="2.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="747.36" y="238.5" ></text>
</g>
<g >
<title>ClientBuildEventGenerator.started (2 samples, 0.21%)</title><rect x="1029.3" y="84" width="2.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="1032.32" y="94.5" ></text>
</g>
<g >
<title>all (940 samples, 100%)</title><rect x="10.0" y="36" width="1180.0" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="13.00" y="46.5" ></text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (7 samples, 0.74%)</title><rect x="426.8" y="116" width="8.8" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="429.77" y="126.5" ></text>
</g>
<g >
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.21%)</title><rect x="718.0" y="116" width="2.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="721.00" y="126.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="317.6" y="116" width="2.5" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="320.55" y="126.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="991.7" y="180" width="2.5" height="15.0" fill="rgb(251,125,125)" rx="2" ry="2" />
<text  x="994.66" y="190.5" ></text>
</g>
<g >
<title>ThreadPoolExecutor$Worker.run (2 samples, 0.21%)</title><rect x="1064.5" y="1060" width="2.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1067.47" y="1070.5" ></text>
</g>
<g >
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (2 samples, 0.21%)</title><rect x="308.8" y="84" width="2.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="311.77" y="94.5" ></text>
</g>
<g >
<title>MessageDigest.update (2 samples, 0.21%)</title><rect x="808.4" y="52" width="2.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="811.38" y="62.5" ></text>
</g>
<g >
<title>DefaultFileCollectionSnapshotter$SnapshottingVisitor.visitFileTree (2 samples, 0.21%)</title><rect x="788.3" y="1844" width="2.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="791.30" y="1854.5" ></text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1RootRegionScanClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RootRegionScanClosure*, oopDesc*, Klass*) (2 samples, 0.21%)</title><rect x="942.7" y="52" width="2.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="945.70" y="62.5" ></text>
</g>
<g >
<title>start_thread (15 samples, 1.60%)</title><rect x="995.4" y="180" width="18.9" height="15.0" fill="rgb(252,126,126)" rx="2" ry="2" />
<text  x="998.43" y="190.5" ></text>
</g>
<g >
<title>AbstractFileCollection.visitStructure (2 samples, 0.21%)</title><rect x="788.3" y="2452" width="2.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="791.30" y="2462.5" ></text>
</g>
<g >
<title>DefaultFileSystemAccess.lambda$read$4 (2 samples, 0.21%)</title><rect x="788.3" y="1764" width="2.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="791.30" y="1774.5" ></text>
</g>
<g >
<title>RemoveUntrackedExecutionStateStep.execute (2 samples, 0.21%)</title><rect x="207.1" y="308" width="2.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="210.09" y="318.5" ></text>
</g>
<g >
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (27 samples, 2.87%)</title><rect x="955.3" y="84" width="33.8" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="958.26" y="94.5" >He..</text>
</g>
<g >
<title>Thread*) (5 samples, 0.53%)</title><rect x="241.0" y="212" width="6.3" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="243.98" y="222.5" ></text>
</g>
<g >
<title>EventFiringTaskExecuter$1.executeTask (2 samples, 0.21%)</title><rect x="788.3" y="3076" width="2.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="791.30" y="3086.5" ></text>
</g>
<g >
<title>AssignWorkspaceStep.execute (2 samples, 0.21%)</title><rect x="207.1" y="404" width="2.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="210.09" y="414.5" ></text>
</g>
<g >
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (36 samples, 3.83%)</title><rect x="596.2" y="52" width="45.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="599.23" y="62.5" >G1Re..</text>
</g>
<g >
<title>GangWorker::loop() (3 samples, 0.32%)</title><rect x="731.8" y="148" width="3.8" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="734.81" y="158.5" ></text>
</g>
<g >
<title>GeneratedConstructorAccessor18.newInstance (2 samples, 0.21%)</title><rect x="213.4" y="148" width="2.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="216.36" y="158.5" ></text>
</g>
<g >
<title>CachingPatternSpecFactory$CachingSpec.isSatisfiedBy (3 samples, 0.32%)</title><rect x="783.3" y="116" width="3.7" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="786.28" y="126.5" ></text>
</g>
<g >
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.21%)</title><rect x="864.9" y="148" width="2.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="867.87" y="158.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (15 samples, 1.60%)</title><rect x="874.9" y="116" width="18.8" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="877.91" y="126.5" ></text>
</g>
<g >
<title>Gradle infrastructure (2 samples, 0.21%)</title><rect x="97.9" y="68" width="2.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="100.87" y="78.5" ></text>
</g>
<g >
<title>ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (2 samples, 0.21%)</title><rect x="1038.1" y="84" width="2.5" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="1041.11" y="94.5" ></text>
</g>
<g >
<title>SkipEmptyWorkStep.fingerprintPrimaryInputs (2 samples, 0.21%)</title><rect x="788.3" y="2756" width="2.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="791.30" y="2766.5" ></text>
</g>
<g >
<title>Thread::call_run() (11 samples, 1.17%)</title><rect x="53.9" y="164" width="13.8" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="56.94" y="174.5" ></text>
</g>
<g >
<title>G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (3 samples, 0.32%)</title><rect x="336.4" y="68" width="3.7" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="339.38" y="78.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="826.0" y="212" width="2.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="828.96" y="222.5" ></text>
</g>
<g >
<title>DefaultIncludedBuildTaskGraph.withNewWorkGraph (2 samples, 0.21%)</title><rect x="744.4" y="1684" width="2.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="747.36" y="1694.5" ></text>
</g>
<g >
<title>ClientBuildEventGenerator.finished (2 samples, 0.21%)</title><rect x="97.9" y="52" width="2.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="100.87" y="62.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="650.2" y="196" width="2.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="653.21" y="206.5" ></text>
</g>
<g >
<title>Thread*) (4 samples, 0.43%)</title><rect x="86.6" y="164" width="5.0" height="15.0" fill="rgb(228,90,90)" rx="2" ry="2" />
<text  x="89.57" y="174.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="461.9" y="100" width="2.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="464.91" y="110.5" ></text>
</g>
<g >
<title>G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (13 samples, 1.38%)</title><rect x="421.7" y="84" width="16.4" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="424.74" y="94.5" ></text>
</g>
<g >
<title>DefaultMutationGuard$2.execute (2 samples, 0.21%)</title><rect x="1166.1" y="84" width="2.6" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="1169.15" y="94.5" ></text>
</g>
<g >
<title>DefaultIncludedBuildTaskGraph$DefaultBuildTreeWorkGraph$1.run (2 samples, 0.21%)</title><rect x="744.4" y="1588" width="2.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="747.36" y="1598.5" ></text>
</g>
<g >
<title>DefaultFileSystemAccess.read (2 samples, 0.21%)</title><rect x="788.3" y="1828" width="2.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="791.30" y="1838.5" ></text>
</g>
<g >
<title>Gradle infrastructure (2 samples, 0.21%)</title><rect x="1029.3" y="100" width="2.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1032.32" y="110.5" ></text>
</g>
<g >
<title>ProgressEventConsumer.findStartedParentId (2 samples, 0.21%)</title><rect x="1029.3" y="52" width="2.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="1032.32" y="62.5" ></text>
</g>
<g >
<title>GangWorker::loop() (5 samples, 0.53%)</title><rect x="241.0" y="180" width="6.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="243.98" y="190.5" ></text>
</g>
<g >
<title>AbstractNestedRuntimeBeanNode$BeanPropertyValue.call (2 samples, 0.21%)</title><rect x="1136.0" y="132" width="2.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="1139.02" y="142.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="92.9" y="84" width="2.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="95.85" y="94.5" ></text>
</g>
<g >
<title>Thread*) (4 samples, 0.43%)</title><rect x="421.7" y="180" width="5.1" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="424.74" y="190.5" ></text>
</g>
<g >
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (4 samples, 0.43%)</title><rect x="543.5" y="84" width="5.0" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="546.51" y="94.5" ></text>
</g>
<g >
<title>Thread*) (7 samples, 0.74%)</title><rect x="723.0" y="212" width="8.8" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="726.02" y="222.5" ></text>
</g>
<g >
<title>DefaultPlanExecutor$ExecutorWorker.run (2 samples, 0.21%)</title><rect x="1064.5" y="996" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1067.47" y="1006.5" ></text>
</g>
<g >
<title>Thread*) (9 samples, 0.96%)</title><rect x="652.7" y="228" width="11.3" height="15.0" fill="rgb(226,87,87)" rx="2" ry="2" />
<text  x="655.72" y="238.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="942.7" y="116" width="2.5" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="945.70" y="126.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp$OfRef.accept (2 samples, 0.21%)</title><rect x="788.3" y="1012" width="2.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="791.30" y="1022.5" ></text>
</g>
<g >
<title>ReferencePipeline$3$1.accept (2 samples, 0.21%)</title><rect x="788.3" y="1028" width="2.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="791.30" y="1038.5" ></text>
</g>
<g >
<title>G1CMTask::drain_local_queue(bool) [clone .part.158] (9 samples, 0.96%)</title><rect x="426.8" y="100" width="11.3" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="429.77" y="110.5" ></text>
</g>
<g >
<title>DefaultRootComponentMetadataBuilder.toRootComponentMetaData (2 samples, 0.21%)</title><rect x="744.4" y="468" width="2.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="747.36" y="478.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (10 samples, 1.06%)</title><rect x="228.4" y="148" width="12.6" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="231.43" y="158.5" ></text>
</g>
<g >
<title>DependencyInjectingInstantiator.doCreate (2 samples, 0.21%)</title><rect x="1021.8" y="68" width="2.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="1024.79" y="78.5" ></text>
</g>
<g >
<title>StateTransitionController.lambda$transition$7 (2 samples, 0.21%)</title><rect x="97.9" y="900" width="2.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="100.87" y="910.5" ></text>
</g>
<g >
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (36 samples, 3.83%)</title><rect x="596.2" y="68" width="45.2" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="599.23" y="78.5" >Heap..</text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (6 samples, 0.64%)</title><rect x="454.4" y="100" width="7.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="457.38" y="110.5" ></text>
</g>
<g >
<title>SATBMarkQueue::should_enqueue_buffer() (2 samples, 0.21%)</title><rect x="1053.2" y="68" width="2.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1056.17" y="78.5" ></text>
</g>
<g >
<title>BuildSessionState.run (2 samples, 0.21%)</title><rect x="97.9" y="1396" width="2.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="100.87" y="1406.5" ></text>
</g>
<g >
<title>DirectorySnapshot.accept (2 samples, 0.21%)</title><rect x="788.3" y="1732" width="2.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="791.30" y="1742.5" ></text>
</g>
<g >
<title>ResetDeprecationLogger.execute (2 samples, 0.21%)</title><rect x="744.4" y="2468" width="2.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="747.36" y="2478.5" ></text>
</g>
<g >
<title>DefaultBuildTreeLifecycleController$$Lambda$.get (2 samples, 0.21%)</title><rect x="97.9" y="804" width="2.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="100.87" y="814.5" ></text>
</g>
<g >
<title>DaemonCommandExecution.proceed (2 samples, 0.21%)</title><rect x="744.4" y="2612" width="2.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="747.36" y="2622.5" ></text>
</g>
<g >
<title>ParamsMatchingConstructorSelector.forParams (2 samples, 0.21%)</title><rect x="1021.8" y="52" width="2.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="1024.79" y="62.5" ></text>
</g>
<g >
<title>GangWorker::loop() (9 samples, 0.96%)</title><rect x="652.7" y="196" width="11.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="655.72" y="206.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp.evaluateSequential (2 samples, 0.21%)</title><rect x="788.3" y="516" width="2.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="791.30" y="526.5" ></text>
</g>
<g >
<title>Optional.orElseGet (2 samples, 0.21%)</title><rect x="1064.5" y="244" width="2.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="1067.47" y="254.5" ></text>
</g>
<g >
<title>Klass::start_of_vtable() const (9 samples, 0.96%)</title><rect x="765.7" y="52" width="11.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="768.70" y="62.5" ></text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (16 samples, 1.70%)</title><rect x="921.4" y="52" width="20.0" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="924.36" y="62.5" ></text>
</g>
<g >
<title>CompositeFileCollection.visitContents (2 samples, 0.21%)</title><rect x="16.3" y="132" width="2.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="19.28" y="142.5" ></text>
</g>
<g >
<title>StateTransitionController.lambda$inState$1 (2 samples, 0.21%)</title><rect x="744.4" y="1156" width="2.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="747.36" y="1166.5" ></text>
</g>
<g >
<title>GangWorker::loop() (15 samples, 1.60%)</title><rect x="921.4" y="116" width="18.8" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="924.36" y="126.5" ></text>
</g>
<g >
<title>ThreadPoolExecutor$Worker.run (2 samples, 0.21%)</title><rect x="69.0" y="196" width="2.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="72.00" y="206.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="765.7" y="116" width="2.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="768.70" y="126.5" ></text>
</g>
<g >
<title>FilteredFileTree$$Lambda$.accept (2 samples, 0.21%)</title><rect x="788.3" y="1972" width="2.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="791.30" y="1982.5" ></text>
</g>
<g >
<title>GangWorker::loop() (7 samples, 0.74%)</title><rect x="507.1" y="164" width="8.8" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="510.11" y="174.5" ></text>
</g>
<g >
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (19 samples, 2.02%)</title><rect x="518.4" y="68" width="23.9" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="521.40" y="78.5" >G..</text>
</g>
<g >
<title>LogToClient.doBuild (2 samples, 0.21%)</title><rect x="97.9" y="1716" width="2.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="100.87" y="1726.5" ></text>
</g>
<g >
<title>OutputFileChanges.accept (2 samples, 0.21%)</title><rect x="1064.5" y="132" width="2.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1067.47" y="142.5" ></text>
</g>
<g >
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (9 samples, 0.96%)</title><rect x="652.7" y="164" width="11.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="655.72" y="174.5" ></text>
</g>
<g >
<title>Thread::call_run() (5 samples, 0.53%)</title><rect x="664.0" y="228" width="6.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="667.02" y="238.5" ></text>
</g>
<g >
<title>Spliterators$IteratorSpliterator.forEachRemaining (2 samples, 0.21%)</title><rect x="744.4" y="196" width="2.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="747.36" y="206.5" ></text>
</g>
<g >
<title>EstablishBuildEnvironment.doBuild (2 samples, 0.21%)</title><rect x="744.4" y="2676" width="2.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="747.36" y="2686.5" ></text>
</g>
<g >
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (7 samples, 0.74%)</title><rect x="723.0" y="68" width="8.8" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="726.02" y="78.5" ></text>
</g>
<g >
<title>CompositeFileCollection.visitContents (2 samples, 0.21%)</title><rect x="788.3" y="2532" width="2.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="791.30" y="2542.5" ></text>
</g>
<g >
<title>DefaultBuildConfigurationActionExecuter.lambda$select$0 (2 samples, 0.21%)</title><rect x="744.4" y="964" width="2.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="747.36" y="974.5" ></text>
</g>
<g >
<title>LoadPreviousExecutionStateStep.execute (2 samples, 0.21%)</title><rect x="1064.5" y="564" width="2.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="1067.47" y="574.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="769.5" y="212" width="2.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="772.47" y="222.5" ></text>
</g>
<g >
<title>DefaultIncludedBuildTaskGraph$DefaultBuildTreeWorkGraph.scheduleWork (2 samples, 0.21%)</title><rect x="744.4" y="1620" width="2.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="747.36" y="1630.5" ></text>
</g>
<g >
<title>vtable stub (4 samples, 0.43%)</title><rect x="1185.0" y="52" width="5.0" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="1187.98" y="62.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (2 samples, 0.21%)</title><rect x="268.6" y="68" width="2.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="271.60" y="78.5" ></text>
</g>
<g >
<title>AsmBackedClassGenerator$InvokeConstructorStrategy.newInstance (2 samples, 0.21%)</title><rect x="1100.9" y="68" width="2.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="1103.87" y="78.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (11 samples, 1.17%)</title><rect x="399.1" y="132" width="13.9" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="402.15" y="142.5" ></text>
</g>
<g >
<title>GangWorker::loop() (3 samples, 0.32%)</title><rect x="869.9" y="116" width="3.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="872.89" y="126.5" ></text>
</g>
<g >
<title>BuildSessionLifecycleBuildActionExecuter.execute (2 samples, 0.21%)</title><rect x="744.4" y="2324" width="2.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="747.36" y="2334.5" ></text>
</g>
<g >
<title>ExecuteActionsTaskExecuter.executeIfValid (2 samples, 0.21%)</title><rect x="207.1" y="468" width="2.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="210.09" y="478.5" ></text>
</g>
<g >
<title>GangWorker::loop() (5 samples, 0.53%)</title><rect x="893.7" y="148" width="6.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="896.74" y="158.5" ></text>
</g>
<g >
<title>DefaultBuildConfigurationActionExecuter$1.proceed (2 samples, 0.21%)</title><rect x="744.4" y="916" width="2.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="747.36" y="926.5" ></text>
</g>
<g >
<title>DefaultProjectStateRegistry$ProjectStateImpl.fromMutableState (2 samples, 0.21%)</title><rect x="744.4" y="436" width="2.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="747.36" y="446.5" ></text>
</g>
<g >
<title>LoadPreviousExecutionStateStep.execute (2 samples, 0.21%)</title><rect x="788.3" y="2820" width="2.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="791.30" y="2830.5" ></text>
</g>
<g >
<title>ThreadLocal$ThreadLocalMap.cleanSomeSlots (3 samples, 0.32%)</title><rect x="1097.1" y="52" width="3.8" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="1100.11" y="62.5" ></text>
</g>
<g >
<title>DefaultRootBuildState.run (2 samples, 0.21%)</title><rect x="97.9" y="1124" width="2.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="100.87" y="1134.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="92.9" y="100" width="2.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="95.85" y="110.5" ></text>
</g>
<g >
<title>AbstractFileCollection.iterator (2 samples, 0.21%)</title><rect x="305.0" y="308" width="2.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="308.00" y="318.5" ></text>
</g>
<g >
<title>G1CMRootRegionScanTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="942.7" y="68" width="2.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="945.70" y="78.5" ></text>
</g>
<g >
<title>Thread::call_run() (5 samples, 0.53%)</title><rect x="241.0" y="196" width="6.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="243.98" y="206.5" ></text>
</g>
<g >
<title>DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long) (2 samples, 0.21%)</title><rect x="278.6" y="84" width="2.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="281.64" y="94.5" ></text>
</g>
<g >
<title>IdentityCacheStep.execute (2 samples, 0.21%)</title><rect x="207.1" y="420" width="2.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="210.09" y="430.5" ></text>
</g>
<g >
<title>AbstractPipeline.wrapAndCopyInto (2 samples, 0.21%)</title><rect x="788.3" y="692" width="2.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="791.30" y="702.5" ></text>
</g>
<g >
<title>OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceRefKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.21%)</title><rect x="862.4" y="52" width="2.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="865.36" y="62.5" ></text>
</g>
<g >
<title>start_thread (7 samples, 0.74%)</title><rect x="323.8" y="164" width="8.8" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="326.83" y="174.5" ></text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (15 samples, 1.60%)</title><rect x="995.4" y="68" width="18.9" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="998.43" y="78.5" ></text>
</g>
<g >
<title>Thread*) (43 samples, 4.57%)</title><rect x="345.2" y="180" width="53.9" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="348.17" y="190.5" >Threa..</text>
</g>
<g >
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.21%)</title><rect x="826.0" y="164" width="2.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="828.96" y="174.5" ></text>
</g>
<g >
<title>DefaultMutationGuard.isMutationAllowed (2 samples, 0.21%)</title><rect x="1097.1" y="116" width="2.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="1100.11" y="126.5" ></text>
</g>
<g >
<title>ChainingBuildActionRunner.run (2 samples, 0.21%)</title><rect x="744.4" y="1924" width="2.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="747.36" y="1934.5" ></text>
</g>
<g >
<title>HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (4 samples, 0.43%)</title><rect x="645.2" y="84" width="5.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="648.19" y="94.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (2 samples, 0.21%)</title><rect x="317.6" y="52" width="2.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="320.55" y="62.5" ></text>
</g>
<g >
<title>HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (5 samples, 0.53%)</title><rect x="664.0" y="84" width="6.3" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="667.02" y="94.5" ></text>
</g>
<g >
<title>Thread::call_run() (5 samples, 0.53%)</title><rect x="893.7" y="164" width="6.3" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="896.74" y="174.5" ></text>
</g>
<g >
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.21%)</title><rect x="864.9" y="100" width="2.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="867.87" y="110.5" ></text>
</g>
<g >
<title>LocalTaskNode.getDependencies (2 samples, 0.21%)</title><rect x="744.4" y="804" width="2.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="747.36" y="814.5" ></text>
</g>
<g >
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (15 samples, 1.60%)</title><rect x="995.4" y="84" width="18.9" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="998.43" y="94.5" ></text>
</g>
<g >
<title>G1RebuildRemSetTask::work(unsigned int) (20 samples, 2.13%)</title><rect x="568.6" y="116" width="25.1" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="571.62" y="126.5" >G..</text>
</g>
<g >
<title>UnpackingVisitor.add (2 samples, 0.21%)</title><rect x="1115.9" y="52" width="2.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="1118.94" y="62.5" ></text>
</g>
<g >
<title>HeapRegion::block_size(HeapWord const*) const (17 samples, 1.81%)</title><rect x="699.2" y="52" width="21.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="702.17" y="62.5" >H..</text>
</g>
<g >
<title>DefaultDomainObjectCollection.add (2 samples, 0.21%)</title><rect x="1166.1" y="132" width="2.6" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="1169.15" y="142.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="862.4" y="228" width="2.5" height="15.0" fill="rgb(207,60,60)" rx="2" ry="2" />
<text  x="865.36" y="238.5" ></text>
</g>
<g >
<title>LocalTaskNodeExecutor.execute (2 samples, 0.21%)</title><rect x="1064.5" y="884" width="2.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="1067.47" y="894.5" ></text>
</g>
<g >
<title>DirectorySnapshot$$Lambda$.accept (2 samples, 0.21%)</title><rect x="788.3" y="996" width="2.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="791.30" y="1006.5" ></text>
</g>
<g >
<title>AbstractClassGenerator$GeneratedClassImpl$GeneratedConstructorImpl.newInstance (2 samples, 0.21%)</title><rect x="1100.9" y="84" width="2.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1103.87" y="94.5" ></text>
</g>
<g >
<title>SetupLoggingActionExecuter.execute (2 samples, 0.21%)</title><rect x="97.9" y="1460" width="2.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="100.87" y="1470.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="718.0" y="180" width="2.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="721.00" y="190.5" ></text>
</g>
<g >
<title>DeprecationLogger.whileDisabled (2 samples, 0.21%)</title><rect x="1136.0" y="84" width="2.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="1139.02" y="94.5" ></text>
</g>
<g >
<title>IdentityCacheStep.execute (2 samples, 0.21%)</title><rect x="788.3" y="2900" width="2.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="791.30" y="2910.5" ></text>
</g>
<g >
<title>Thread::call_run() (19 samples, 2.02%)</title><rect x="518.4" y="180" width="23.9" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="521.40" y="190.5" >T..</text>
</g>
<g >
<title>DirectorySnapshot$$Lambda$.accept (2 samples, 0.21%)</title><rect x="788.3" y="804" width="2.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="791.30" y="814.5" ></text>
</g>
<g >
<title>start_thread (5 samples, 0.53%)</title><rect x="413.0" y="196" width="6.2" height="15.0" fill="rgb(213,69,69)" rx="2" ry="2" />
<text  x="415.96" y="206.5" ></text>
</g>
<g >
<title>CompiledMethod::do_unloading_parallel_postponed() (2 samples, 0.21%)</title><rect x="101.6" y="84" width="2.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="104.64" y="94.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="268.6" y="132" width="2.5" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="271.60" y="142.5" ></text>
</g>
<g >
<title>DaemonCommandExecution.proceed (2 samples, 0.21%)</title><rect x="744.4" y="2516" width="2.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="747.36" y="2526.5" ></text>
</g>
<g >
<title>DependencyInjectingInstantiator.newInstance (2 samples, 0.21%)</title><rect x="1021.8" y="84" width="2.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="1024.79" y="94.5" ></text>
</g>
<g >
<title>AbstractClassGenerator$GeneratedClassImpl$GeneratedConstructorImpl.newInstance (2 samples, 0.21%)</title><rect x="213.4" y="212" width="2.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="216.36" y="222.5" ></text>
</g>
<g >
<title>DefaultExecutionPlan.doAddNodes (2 samples, 0.21%)</title><rect x="744.4" y="836" width="2.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="747.36" y="846.5" ></text>
</g>
<g >
<title>PatternSetSnapshottingFilter.lambda$getAsSnapshotPredicate$0 (2 samples, 0.21%)</title><rect x="784.5" y="164" width="2.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="787.53" y="174.5" ></text>
</g>
<g >
<title>WeakReference.&lt;init&gt; (2 samples, 0.21%)</title><rect x="1038.1" y="68" width="2.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1041.11" y="78.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="332.6" y="100" width="2.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="335.62" y="110.5" ></text>
</g>
<g >
<title>DefaultPlanExecutor$ExecutorWorker.executeNextNode (2 samples, 0.21%)</title><rect x="788.3" y="3236" width="2.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="791.30" y="3246.5" ></text>
</g>
<g >
<title>DefaultServiceRegistry.find (2 samples, 0.21%)</title><rect x="198.3" y="52" width="2.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="201.30" y="62.5" ></text>
</g>
<g >
<title>DefaultTaskExecutionPreparer.prepareForTaskExecution (2 samples, 0.21%)</title><rect x="744.4" y="1108" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="747.36" y="1118.5" ></text>
</g>
<g >
<title>DefaultUserCodeApplicationContext.apply (2 samples, 0.21%)</title><rect x="1166.1" y="228" width="2.6" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="1169.15" y="238.5" ></text>
</g>
<g >
<title>DefaultDomainObjectCollection.doAdd (2 samples, 0.21%)</title><rect x="1166.1" y="116" width="2.6" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1169.15" y="126.5" ></text>
</g>
<g >
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.21%)</title><rect x="769.5" y="68" width="2.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="772.47" y="78.5" ></text>
</g>
<g >
<title>ThreadLocal.createMap (2 samples, 0.21%)</title><rect x="1038.1" y="116" width="2.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="1041.11" y="126.5" ></text>
</g>
<g >
<title>HashMap.newNode (2 samples, 0.21%)</title><rect x="690.4" y="52" width="2.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="693.38" y="62.5" ></text>
</g>
<g >
<title>AssignWorkspaceStep.lambda$execute$0 (2 samples, 0.21%)</title><rect x="788.3" y="2836" width="2.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="791.30" y="2846.5" ></text>
</g>
<g >
<title>G1RebuildRemSetTask::work(unsigned int) (15 samples, 1.60%)</title><rect x="995.4" y="116" width="18.9" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="998.43" y="126.5" ></text>
</g>
<g >
<title>Gradle infrastructure (2 samples, 0.21%)</title><rect x="207.1" y="692" width="2.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="210.09" y="702.5" ></text>
</g>
<g >
<title>G1ConcurrentRefineThread::run_service() (2 samples, 0.21%)</title><rect x="308.8" y="116" width="2.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="311.77" y="126.5" ></text>
</g>
<g >
<title>Thread::call_run() (7 samples, 0.74%)</title><rect x="723.0" y="196" width="8.8" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="726.02" y="206.5" ></text>
</g>
<g >
<title>PatternSetSnapshottingFilter.lambda$getAsSnapshotPredicate$0 (2 samples, 0.21%)</title><rect x="788.3" y="148" width="2.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="791.30" y="158.5" ></text>
</g>
<g >
<title>GangWorker::loop() (11 samples, 1.17%)</title><rect x="53.9" y="148" width="13.8" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="56.94" y="158.5" ></text>
</g>
<g >
<title>StateTransitionController.transition (2 samples, 0.21%)</title><rect x="97.9" y="948" width="2.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="100.87" y="958.5" ></text>
</g>
<g >
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.21%)</title><rect x="769.5" y="100" width="2.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="772.47" y="110.5" ></text>
</g>
<g >
<title>BuildSessionLifecycleBuildActionExecuter.execute (2 samples, 0.21%)</title><rect x="97.9" y="1412" width="2.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="100.87" y="1422.5" ></text>
</g>
<g >
<title>TreeMap.get (2 samples, 0.21%)</title><rect x="1109.7" y="68" width="2.5" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="1112.66" y="78.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="220.9" y="212" width="2.5" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="223.89" y="222.5" ></text>
</g>
<g >
<title>ResolveChangesStep.lambda$resolveExecutionStateChanges$5 (2 samples, 0.21%)</title><rect x="1064.5" y="212" width="2.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1067.47" y="222.5" ></text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceRefKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (2 samples, 0.21%)</title><rect x="1015.5" y="68" width="2.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="1018.51" y="78.5" ></text>
</g>
<g >
<title>SortedMapDiffUtil.diff (2 samples, 0.21%)</title><rect x="1064.5" y="116" width="2.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="1067.47" y="126.5" ></text>
</g>
<g >
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (2 samples, 0.21%)</title><rect x="862.4" y="100" width="2.5" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="865.36" y="110.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (3 samples, 0.32%)</title><rect x="869.9" y="84" width="3.8" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="872.89" y="94.5" ></text>
</g>
<g >
<title>G1ParTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="864.9" y="180" width="2.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="867.87" y="190.5" ></text>
</g>
<g >
<title>SkipEmptyWorkStep.execute (2 samples, 0.21%)</title><rect x="207.1" y="292" width="2.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="210.09" y="302.5" ></text>
</g>
<g >
<title>Thread::call_run() (6 samples, 0.64%)</title><rect x="454.4" y="148" width="7.5" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="457.38" y="158.5" ></text>
</g>
<g >
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (11 samples, 1.17%)</title><rect x="53.9" y="116" width="13.8" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="56.94" y="126.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (5 samples, 0.53%)</title><rect x="893.7" y="132" width="6.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="896.74" y="142.5" ></text>
</g>
<g >
<title>Thread::call_run() (31 samples, 3.30%)</title><rect x="468.2" y="196" width="38.9" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="471.19" y="206.5" >Thr..</text>
</g>
<g >
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.32%)</title><rect x="864.9" y="84" width="3.7" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="867.87" y="94.5" ></text>
</g>
<g >
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (31 samples, 3.30%)</title><rect x="468.2" y="148" width="38.9" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="471.19" y="158.5" >G1R..</text>
</g>
<g >
<title>Gradle infrastructure (2 samples, 0.21%)</title><rect x="207.1" y="628" width="2.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="210.09" y="638.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="718.0" y="212" width="2.5" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="721.00" y="222.5" ></text>
</g>
<g >
<title>BuildTreeLifecycleBuildActionExecutor.lambda$execute$0 (2 samples, 0.21%)</title><rect x="744.4" y="2084" width="2.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="747.36" y="2094.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="862.4" y="196" width="2.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="865.36" y="206.5" ></text>
</g>
<g >
<title>AbstractMutationGuard.assertMutationAllowed (2 samples, 0.21%)</title><rect x="1097.1" y="132" width="2.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="1100.11" y="142.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="451.9" y="132" width="2.5" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="454.87" y="142.5" ></text>
</g>
<g >
<title>HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (9 samples, 0.96%)</title><rect x="652.7" y="68" width="11.3" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="655.72" y="78.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (7 samples, 0.74%)</title><rect x="426.8" y="132" width="8.8" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="429.77" y="142.5" ></text>
</g>
<g >
<title>VintageBuildModelController.lambda$scheduleRequestedTasks$1 (2 samples, 0.21%)</title><rect x="744.4" y="1124" width="2.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="747.36" y="1134.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="769.5" y="244" width="2.5" height="15.0" fill="rgb(244,115,115)" rx="2" ry="2" />
<text  x="772.47" y="254.5" ></text>
</g>
<g >
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (5 samples, 0.53%)</title><rect x="664.0" y="132" width="6.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="667.02" y="142.5" ></text>
</g>
<g >
<title>Thread::call_run() (15 samples, 1.60%)</title><rect x="874.9" y="148" width="18.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="877.91" y="158.5" ></text>
</g>
<g >
<title>DefaultBuildLifecycleController.prepareToScheduleTasks (2 samples, 0.21%)</title><rect x="97.9" y="708" width="2.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="100.87" y="718.5" ></text>
</g>
<g >
<title>start_thread (24 samples, 2.55%)</title><rect x="828.5" y="244" width="30.1" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="831.47" y="254.5" >st..</text>
</g>
<g >
<title>DefaultExecutionEngine$1.execute (2 samples, 0.21%)</title><rect x="207.1" y="452" width="2.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="210.09" y="462.5" ></text>
</g>
<g >
<title>Gradle infrastructure (2 samples, 0.21%)</title><rect x="97.9" y="372" width="2.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="100.87" y="382.5" ></text>
</g>
<g >
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (4 samples, 0.43%)</title><rect x="543.5" y="68" width="5.0" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="546.51" y="78.5" ></text>
</g>
<g >
<title>DefaultPlanExecutor$ExecutorWorker.execute (2 samples, 0.21%)</title><rect x="207.1" y="740" width="2.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="210.09" y="750.5" ></text>
</g>
<g >
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.21%)</title><rect x="714.2" y="148" width="2.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="717.23" y="158.5" ></text>
</g>
<g >
<title>start_thread (4 samples, 0.43%)</title><rect x="86.6" y="180" width="5.0" height="15.0" fill="rgb(235,100,100)" rx="2" ry="2" />
<text  x="89.57" y="190.5" ></text>
</g>
<g >
<title>ExecutorPolicy$CatchAndRecordFailures.onExecute (2 samples, 0.21%)</title><rect x="744.4" y="2756" width="2.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="747.36" y="2766.5" ></text>
</g>
<g >
<title>DefaultConfigurationContainer.newConfiguration (2 samples, 0.21%)</title><rect x="213.4" y="276" width="2.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="216.36" y="286.5" ></text>
</g>
<g >
<title>start_thread (6 samples, 0.64%)</title><rect x="946.5" y="244" width="7.5" height="15.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text  x="949.47" y="254.5" ></text>
</g>
<g >
<title>BuildTreeLifecycleBuildActionExecutor$$Lambda$.apply (2 samples, 0.21%)</title><rect x="97.9" y="1188" width="2.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="100.87" y="1198.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="317.6" y="100" width="2.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="320.55" y="110.5" ></text>
</g>
<g >
<title>_dl_update_slotinfo (3 samples, 0.32%)</title><rect x="1131.0" y="52" width="3.8" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="1134.00" y="62.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="262.3" y="164" width="2.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="265.32" y="174.5" ></text>
</g>
<g >
<title>ChainingBuildActionRunner.run (2 samples, 0.21%)</title><rect x="97.9" y="1012" width="2.5" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="100.87" y="1022.5" ></text>
</g>
<g >
<title>Thread::call_run() (11 samples, 1.17%)</title><rect x="399.1" y="180" width="13.9" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="402.15" y="190.5" ></text>
</g>
<g >
<title>Thread*) (15 samples, 1.60%)</title><rect x="995.4" y="164" width="18.9" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="998.43" y="174.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="1015.5" y="164" width="2.5" height="15.0" fill="rgb(237,103,103)" rx="2" ry="2" />
<text  x="1018.51" y="174.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="268.6" y="84" width="2.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="271.60" y="94.5" ></text>
</g>
<g >
<title>ThreadLocal$ThreadLocalMap.&lt;init&gt; (2 samples, 0.21%)</title><rect x="1038.1" y="100" width="2.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="1041.11" y="110.5" ></text>
</g>
<g >
<title>G1ParTask::work(unsigned int) (4 samples, 0.43%)</title><rect x="645.2" y="164" width="5.0" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="648.19" y="174.5" ></text>
</g>
<g >
<title>AbstractPipeline.copyInto (2 samples, 0.21%)</title><rect x="788.3" y="1636" width="2.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="791.30" y="1646.5" ></text>
</g>
<g >
<title>ReferencePipeline$3$1.accept (2 samples, 0.21%)</title><rect x="788.3" y="1412" width="2.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="791.30" y="1422.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="435.6" y="164" width="2.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="438.55" y="174.5" ></text>
</g>
<g >
<title>DefaultWorkerLeaseService.withLocks (2 samples, 0.21%)</title><rect x="97.9" y="228" width="2.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="100.87" y="238.5" ></text>
</g>
<g >
<title>AbstractPipeline.wrapAndCopyInto (2 samples, 0.21%)</title><rect x="788.3" y="1268" width="2.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="791.30" y="1278.5" ></text>
</g>
<g >
<title>G1CMTask::make_reference_grey(oopDesc*) (31 samples, 3.30%)</title><rect x="220.9" y="68" width="38.9" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="223.89" y="78.5" >G1C..</text>
</g>
<g >
<title>DefaultPlanExecutor$ExecutorWorker.executeNextNode (2 samples, 0.21%)</title><rect x="207.1" y="756" width="2.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="210.09" y="766.5" ></text>
</g>
<g >
<title>AbstractPipeline.wrapAndCopyInto (2 samples, 0.21%)</title><rect x="788.3" y="884" width="2.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="791.30" y="894.5" ></text>
</g>
<g >
<title>G1RebuildRemSetTask::work(unsigned int) (36 samples, 3.83%)</title><rect x="596.2" y="84" width="45.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="599.23" y="94.5" >G1Re..</text>
</g>
<g >
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (15 samples, 1.60%)</title><rect x="921.4" y="84" width="18.8" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="924.36" y="94.5" ></text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (10 samples, 1.06%)</title><rect x="228.4" y="116" width="12.6" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="231.43" y="126.5" ></text>
</g>
<g >
<title>DirectorySnapshot.lambda$accept$2 (2 samples, 0.21%)</title><rect x="788.3" y="1364" width="2.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="791.30" y="1374.5" ></text>
</g>
<g >
<title>StateTransitionController$$Lambda$.create (2 samples, 0.21%)</title><rect x="744.4" y="1828" width="2.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="747.36" y="1838.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp$OfRef.accept (2 samples, 0.21%)</title><rect x="788.3" y="1588" width="2.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="791.30" y="1598.5" ></text>
</g>
<g >
<title>G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (4 samples, 0.43%)</title><rect x="223.4" y="116" width="5.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="226.40" y="126.5" ></text>
</g>
<g >
<title>Thread::call_run() (27 samples, 2.87%)</title><rect x="955.3" y="132" width="33.8" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="958.26" y="142.5" >Th..</text>
</g>
<g >
<title>ConcurrentGCThread::run() (2 samples, 0.21%)</title><rect x="308.8" y="132" width="2.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="311.77" y="142.5" ></text>
</g>
<g >
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (28 samples, 2.98%)</title><rect x="824.7" y="68" width="35.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="827.70" y="78.5" >G1..</text>
</g>
<g >
<title>DirectoryFileTree.visitStructure (2 samples, 0.21%)</title><rect x="788.3" y="2036" width="2.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="791.30" y="2046.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="332.6" y="84" width="2.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="335.62" y="94.5" ></text>
</g>
<g >
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (9 samples, 0.96%)</title><rect x="652.7" y="116" width="11.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="655.72" y="126.5" ></text>
</g>
<g >
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (7 samples, 0.74%)</title><rect x="705.4" y="100" width="8.8" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="708.45" y="110.5" ></text>
</g>
<g >
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (31 samples, 3.30%)</title><rect x="468.2" y="100" width="38.9" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="471.19" y="110.5" >Dir..</text>
</g>
<g >
<title>start_thread (11 samples, 1.17%)</title><rect x="399.1" y="212" width="13.9" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="402.15" y="222.5" ></text>
</g>
<g >
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.21%)</title><rect x="862.4" y="84" width="2.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="865.36" y="94.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (3 samples, 0.32%)</title><rect x="869.9" y="100" width="3.8" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="872.89" y="110.5" ></text>
</g>
<g >
<title>start_thread (3 samples, 0.32%)</title><rect x="916.3" y="180" width="3.8" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="919.34" y="190.5" ></text>
</g>
<g >
<title>FinalizePropertiesTaskExecuter.execute (2 samples, 0.21%)</title><rect x="788.3" y="2996" width="2.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="791.30" y="3006.5" ></text>
</g>
<g >
<title>G1ConcurrentRefineThread::run_service() (2 samples, 0.21%)</title><rect x="278.6" y="100" width="2.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="281.64" y="110.5" ></text>
</g>
<g >
<title>DefaultBuildController.populateWorkGraph (2 samples, 0.21%)</title><rect x="744.4" y="1524" width="2.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="747.36" y="1534.5" ></text>
</g>
<g >
<title>DefaultSynchronizer.withLock (2 samples, 0.21%)</title><rect x="97.9" y="500" width="2.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="100.87" y="510.5" ></text>
</g>
<g >
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (14 samples, 1.49%)</title><rect x="699.2" y="68" width="17.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="702.17" y="78.5" ></text>
</g>
<g >
<title>DaemonCommandExecution.proceed (2 samples, 0.21%)</title><rect x="744.4" y="2660" width="2.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="747.36" y="2670.5" ></text>
</g>
<g >
<title>DefaultBuildConfigurationActionExecuter.configure (2 samples, 0.21%)</title><rect x="744.4" y="948" width="2.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="747.36" y="958.5" ></text>
</g>
<g >
<title>DirectorySnapshot.accept (2 samples, 0.21%)</title><rect x="788.3" y="1348" width="2.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="791.30" y="1358.5" ></text>
</g>
<g >
<title>G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (2 samples, 0.21%)</title><rect x="419.2" y="84" width="2.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="422.23" y="94.5" ></text>
</g>
<g >
<title>G1ParScanThreadState::trim_queue_partially() (25 samples, 2.66%)</title><rect x="517.1" y="52" width="31.4" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="520.15" y="62.5" >G1..</text>
</g>
<g >
<title>Thread::call_run() (10 samples, 1.06%)</title><rect x="228.4" y="180" width="12.6" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="231.43" y="190.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (2 samples, 0.21%)</title><rect x="461.9" y="84" width="2.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="464.91" y="94.5" ></text>
</g>
<g >
<title>DefaultLocalComponentMetadataBuilder.createConfiguration (2 samples, 0.21%)</title><rect x="744.4" y="340" width="2.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="747.36" y="350.5" ></text>
</g>
<g >
<title>StateTransitionController.lambda$inState$2 (2 samples, 0.21%)</title><rect x="744.4" y="1428" width="2.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="747.36" y="1438.5" ></text>
</g>
<g >
<title>ClassLoaderData::oops_do(OopClosure*, bool, bool) (2 samples, 0.21%)</title><rect x="826.0" y="100" width="2.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="828.96" y="110.5" ></text>
</g>
<g >
<title>DependencyInjectingInstantiator.newInstance (2 samples, 0.21%)</title><rect x="213.4" y="244" width="2.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="216.36" y="254.5" ></text>
</g>
<g >
<title>G1ParallelCleaningTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="101.6" y="100" width="2.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="104.64" y="110.5" ></text>
</g>
<g >
<title>Factories$1.create (2 samples, 0.21%)</title><rect x="744.4" y="996" width="2.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="747.36" y="1006.5" ></text>
</g>
<g >
<title>ResolveTaskExecutionModeExecuter.execute (2 samples, 0.21%)</title><rect x="788.3" y="3012" width="2.5" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="791.30" y="3022.5" ></text>
</g>
<g >
<title>StateTransitionController$$Lambda$.get (2 samples, 0.21%)</title><rect x="744.4" y="1412" width="2.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="747.36" y="1422.5" ></text>
</g>
<g >
<title>start_thread (5 samples, 0.53%)</title><rect x="910.1" y="180" width="6.2" height="15.0" fill="rgb(200,51,51)" rx="2" ry="2" />
<text  x="913.06" y="190.5" ></text>
</g>
<g >
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.21%)</title><rect x="862.4" y="116" width="2.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="865.36" y="126.5" ></text>
</g>
<g >
<title>DaemonCommandExecution.proceed (2 samples, 0.21%)</title><rect x="97.9" y="1700" width="2.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="100.87" y="1710.5" ></text>
</g>
<g >
<title>ConcurrentGCThread::run() (2 samples, 0.21%)</title><rect x="278.6" y="116" width="2.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="281.64" y="126.5" ></text>
</g>
<g >
<title>DefaultWorkerLeaseService.runAsWorkerThread (2 samples, 0.21%)</title><rect x="97.9" y="1300" width="2.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="100.87" y="1310.5" ></text>
</g>
<g >
<title>G1ConcurrentRefineThread::run_service() (5 samples, 0.53%)</title><rect x="699.2" y="132" width="6.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="702.17" y="142.5" ></text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (5 samples, 0.53%)</title><rect x="902.5" y="100" width="6.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="905.53" y="110.5" ></text>
</g>
<g >
<title>start_thread (19 samples, 2.02%)</title><rect x="518.4" y="212" width="23.9" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="521.40" y="222.5" >s..</text>
</g>
<g >
<title>DependencyInjectingInstantiator.doCreate (2 samples, 0.21%)</title><rect x="1100.9" y="100" width="2.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="1103.87" y="110.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="278.6" y="164" width="2.5" height="15.0" fill="rgb(217,74,74)" rx="2" ry="2" />
<text  x="281.64" y="174.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp$OfRef.evaluateSequential (2 samples, 0.21%)</title><rect x="788.3" y="340" width="2.5" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="791.30" y="350.5" ></text>
</g>
<g >
<title>RootBuildLifecycleBuildActionExecutor.lambda$execute$0 (2 samples, 0.21%)</title><rect x="744.4" y="2004" width="2.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="747.36" y="2014.5" ></text>
</g>
<g >
<title>DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long) (5 samples, 0.53%)</title><rect x="699.2" y="116" width="6.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="702.17" y="126.5" ></text>
</g>
<g >
<title>AbstractFileCollection.visitStructure (2 samples, 0.21%)</title><rect x="788.3" y="2148" width="2.5" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="791.30" y="2158.5" ></text>
</g>
<g >
<title>BitMap::par_at_put(unsigned long, bool) (13 samples, 1.38%)</title><rect x="52.7" y="52" width="16.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="55.68" y="62.5" ></text>
</g>
<g >
<title>itable stub (21 samples, 2.23%)</title><rect x="1148.6" y="52" width="26.3" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="1151.57" y="62.5" >i..</text>
</g>
<g >
<title>CatchExceptionTaskExecuter.execute (2 samples, 0.21%)</title><rect x="788.3" y="3060" width="2.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="791.30" y="3070.5" ></text>
</g>
<g >
<title>HashMap.putVal (2 samples, 0.21%)</title><rect x="692.9" y="52" width="2.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="695.89" y="62.5" ></text>
</g>
<g >
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (24 samples, 2.55%)</title><rect x="828.5" y="164" width="30.1" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="831.47" y="174.5" >G1..</text>
</g>
<g >
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.21%)</title><rect x="718.0" y="100" width="2.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="721.00" y="110.5" ></text>
</g>
<g >
<title>FileCollectionBackedFileTree.visitContentsAsFileTrees (2 samples, 0.21%)</title><rect x="788.3" y="2292" width="2.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="791.30" y="2302.5" ></text>
</g>
<g >
<title>ImmutableSet$Builder.add (2 samples, 0.21%)</title><rect x="749.4" y="68" width="2.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="752.38" y="78.5" ></text>
</g>
<g >
<title>AbstractPipeline.evaluate (2 samples, 0.21%)</title><rect x="788.3" y="548" width="2.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="791.30" y="558.5" ></text>
</g>
<g >
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (7 samples, 0.74%)</title><rect x="723.0" y="148" width="8.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="726.02" y="158.5" ></text>
</g>
<g >
<title>Thread*) (10 samples, 1.06%)</title><rect x="228.4" y="196" width="12.6" height="15.0" fill="rgb(239,106,106)" rx="2" ry="2" />
<text  x="231.43" y="206.5" ></text>
</g>
<g >
<title>Thread::call_run() (7 samples, 0.74%)</title><rect x="426.8" y="180" width="8.8" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="429.77" y="190.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="650.2" y="212" width="2.5" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="653.21" y="222.5" ></text>
</g>
<g >
<title>DaemonCommandExecution.proceed (2 samples, 0.21%)</title><rect x="97.9" y="1572" width="2.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="100.87" y="1582.5" ></text>
</g>
<g >
<title>Thread::call_run() (4 samples, 0.43%)</title><rect x="645.2" y="196" width="5.0" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="648.19" y="206.5" ></text>
</g>
<g >
<title>CompositeFileCollection.lambda$visitContents$0 (2 samples, 0.21%)</title><rect x="16.3" y="68" width="2.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="19.28" y="78.5" ></text>
</g>
<g >
<title>ProblemReportingBuildActionRunner.run (2 samples, 0.21%)</title><rect x="97.9" y="1028" width="2.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="100.87" y="1038.5" ></text>
</g>
<g >
<title>BuildProgressListenerAdapter.toTaskResult (2 samples, 0.21%)</title><rect x="69.0" y="52" width="2.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="72.00" y="62.5" ></text>
</g>
<g >
<title>DefaultMutationGuard.isMutationAllowed (2 samples, 0.21%)</title><rect x="177.0" y="68" width="2.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="179.96" y="78.5" ></text>
</g>
<g >
<title>CompositeFileCollection.lambda$visitContents$0 (2 samples, 0.21%)</title><rect x="788.3" y="2468" width="2.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="791.30" y="2478.5" ></text>
</g>
<g >
<title>G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (4 samples, 0.43%)</title><rect x="340.1" y="100" width="5.1" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="343.15" y="110.5" ></text>
</g>
<g >
<title>AssignWorkspaceStep.execute (2 samples, 0.21%)</title><rect x="1064.5" y="628" width="2.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="1067.47" y="638.5" ></text>
</g>
<g >
<title>OtherRegionsTable::add_reference(void*, unsigned int) (50 samples, 5.32%)</title><rect x="955.3" y="52" width="62.7" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="958.26" y="62.5" >OtherR..</text>
</g>
<g >
<title>ForEachOps$ForEachOp$OfRef.accept (2 samples, 0.21%)</title><rect x="788.3" y="1204" width="2.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="791.30" y="1214.5" ></text>
</g>
<g >
<title>DirectorySnapshot.lambda$accept$2 (2 samples, 0.21%)</title><rect x="788.3" y="404" width="2.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="791.30" y="414.5" ></text>
</g>
<g >
<title>StateTransitionController.lambda$transition$6 (2 samples, 0.21%)</title><rect x="744.4" y="1764" width="2.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="747.36" y="1774.5" ></text>
</g>
<g >
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (2 samples, 0.21%)</title><rect x="991.7" y="100" width="2.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="994.66" y="110.5" ></text>
</g>
<g >
<title>HashMap$HashIterator.&lt;init&gt; (2 samples, 0.21%)</title><rect x="682.9" y="52" width="2.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="685.85" y="62.5" ></text>
</g>
<g >
<title>GangWorker::loop() (7 samples, 0.74%)</title><rect x="705.4" y="180" width="8.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="708.45" y="190.5" ></text>
</g>
<g >
<title>Thread*) (15 samples, 1.60%)</title><rect x="874.9" y="164" width="18.8" height="15.0" fill="rgb(246,116,116)" rx="2" ry="2" />
<text  x="877.91" y="174.5" ></text>
</g>
<g >
<title>Thread::call_run() (3 samples, 0.32%)</title><rect x="916.3" y="148" width="3.8" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="919.34" y="158.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="818.4" y="132" width="2.5" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="821.43" y="142.5" ></text>
</g>
<g >
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.21%)</title><rect x="859.9" y="84" width="2.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="862.85" y="94.5" ></text>
</g>
<g >
<title>G1RebuildRemSetTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="1069.5" y="132" width="2.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="1072.49" y="142.5" ></text>
</g>
<g >
<title>FilteredFileTree.visitChildren (2 samples, 0.21%)</title><rect x="788.3" y="2308" width="2.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="791.30" y="2318.5" ></text>
</g>
<g >
<title>DefaultBuildWorkGraphController$DefaultBuildWorkGraph.populateWorkGraph (2 samples, 0.21%)</title><rect x="744.4" y="1508" width="2.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="747.36" y="1518.5" ></text>
</g>
<g >
<title>LocalCache$Segment.get (4 samples, 0.43%)</title><rect x="783.3" y="68" width="5.0" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="786.28" y="78.5" ></text>
</g>
<g >
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (7 samples, 0.74%)</title><rect x="705.4" y="132" width="8.8" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="708.45" y="142.5" ></text>
</g>
<g >
<title>CompositeFileCollection$$Lambda$.accept (2 samples, 0.21%)</title><rect x="788.3" y="2580" width="2.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="791.30" y="2590.5" ></text>
</g>
<g >
<title>ExecuteActionsTaskExecuter.execute (2 samples, 0.21%)</title><rect x="207.1" y="484" width="2.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="210.09" y="494.5" ></text>
</g>
<g >
<title>DefaultIncludedBuildTaskGraph$DefaultBuildTreeWorkGraphBuilder.withWorkGraph (2 samples, 0.21%)</title><rect x="744.4" y="1540" width="2.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="747.36" y="1550.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="765.7" y="132" width="2.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="768.70" y="142.5" ></text>
</g>
<g >
<title>AbstractNamedDomainObjectContainer.create (2 samples, 0.21%)</title><rect x="215.9" y="196" width="2.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="218.87" y="206.5" ></text>
</g>
<g >
<title>HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (6 samples, 0.64%)</title><rect x="946.5" y="68" width="7.5" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="949.47" y="78.5" ></text>
</g>
<g >
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.21%)</title><rect x="714.2" y="164" width="2.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="717.23" y="174.5" ></text>
</g>
<g >
<title>Executors$RunnableAdapter.call (2 samples, 0.21%)</title><rect x="69.0" y="116" width="2.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="72.00" y="126.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="332.6" y="116" width="2.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="335.62" y="126.5" ></text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceRefKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (8 samples, 0.85%)</title><rect x="900.0" y="52" width="10.1" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="903.02" y="62.5" ></text>
</g>
<g >
<title>CaptureStateBeforeExecutionStep.captureExecutionStateWithOutputs (2 samples, 0.21%)</title><rect x="207.1" y="132" width="2.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="210.09" y="142.5" ></text>
</g>
<g >
<title>ResetDeprecationLogger.execute (2 samples, 0.21%)</title><rect x="97.9" y="1556" width="2.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="100.87" y="1566.5" ></text>
</g>
<g >
<title>start_thread (20 samples, 2.13%)</title><rect x="568.6" y="180" width="25.1" height="15.0" fill="rgb(228,90,90)" rx="2" ry="2" />
<text  x="571.62" y="190.5" >s..</text>
</g>
<g >
<title>IdentifyStep.execute (2 samples, 0.21%)</title><rect x="207.1" y="436" width="2.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="210.09" y="446.5" ></text>
</g>
<g >
<title>AbstractPipeline.evaluate (2 samples, 0.21%)</title><rect x="788.3" y="356" width="2.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="791.30" y="366.5" ></text>
</g>
<g >
<title>SkipEmptyWorkStep$1.visitInputFileProperty (2 samples, 0.21%)</title><rect x="788.3" y="2676" width="2.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="791.30" y="2686.5" ></text>
</g>
<g >
<title>DefaultBuildSessionContext.execute (2 samples, 0.21%)</title><rect x="744.4" y="2276" width="2.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="747.36" y="2286.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="320.1" y="116" width="2.5" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="323.06" y="126.5" ></text>
</g>
<g >
<title>ContinuousBuildActionExecutor.execute (2 samples, 0.21%)</title><rect x="744.4" y="2244" width="2.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="747.36" y="2254.5" ></text>
</g>
<g >
<title>DefaultTaskContainer.registerTask (2 samples, 0.21%)</title><rect x="173.2" y="84" width="2.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="176.19" y="94.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="317.6" y="84" width="2.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="320.55" y="94.5" ></text>
</g>
<g >
<title>ThreadLocal.get (2 samples, 0.21%)</title><rect x="1097.1" y="100" width="2.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="1100.11" y="110.5" ></text>
</g>
<g >
<title>SubscribableBuildActionExecutor.execute (2 samples, 0.21%)</title><rect x="744.4" y="2260" width="2.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="747.36" y="2270.5" ></text>
</g>
<g >
<title>DefaultExecutionStateChangeDetector.collectChanges (2 samples, 0.21%)</title><rect x="1064.5" y="180" width="2.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="1067.47" y="190.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="859.9" y="180" width="2.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="862.85" y="190.5" ></text>
</g>
<g >
<title>TaskExecution.visitRegularInputs (2 samples, 0.21%)</title><rect x="788.3" y="2692" width="2.5" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="791.30" y="2702.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="308.8" y="180" width="2.5" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="311.77" y="190.5" ></text>
</g>
<g >
<title>start_thread (10 samples, 1.06%)</title><rect x="228.4" y="212" width="12.6" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="231.43" y="222.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (4 samples, 0.43%)</title><rect x="421.7" y="132" width="5.1" height="15.0" fill="rgb(197,197,58)" rx="2" ry="2" />
<text  x="424.74" y="142.5" ></text>
</g>
<g >
<title>DefaultConfiguration.lambda$resolveGraphForBuildDependenciesIfRequired$6 (2 samples, 0.21%)</title><rect x="744.4" y="596" width="2.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="747.36" y="606.5" ></text>
</g>
<g >
<title>HashMap$KeySet.iterator (2 samples, 0.21%)</title><rect x="682.9" y="84" width="2.5" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="685.85" y="94.5" ></text>
</g>
<g >
<title>DefaultBuildTreeLifecycleController$$Lambda$.apply (2 samples, 0.21%)</title><rect x="97.9" y="756" width="2.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="100.87" y="766.5" ></text>
</g>
<g >
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (7 samples, 0.74%)</title><rect x="507.1" y="100" width="8.8" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="510.11" y="110.5" ></text>
</g>
<g >
<title>AbstractFileCollection.visitStructure (2 samples, 0.21%)</title><rect x="788.3" y="2260" width="2.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="791.30" y="2270.5" ></text>
</g>
<g >
<title>CaptureStateBeforeExecutionStep.execute (2 samples, 0.21%)</title><rect x="207.1" y="260" width="2.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="210.09" y="270.5" ></text>
</g>
<g >
<title>ResolveChangesStep$$Lambda$.apply (2 samples, 0.21%)</title><rect x="1064.5" y="276" width="2.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="1067.47" y="286.5" ></text>
</g>
<g >
<title>AbstractPipeline.evaluate (2 samples, 0.21%)</title><rect x="788.3" y="932" width="2.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="791.30" y="942.5" ></text>
</g>
<g >
<title>AndSpec.isSatisfiedBy (2 samples, 0.21%)</title><rect x="788.3" y="132" width="2.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="791.30" y="142.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="862.4" y="212" width="2.5" height="15.0" fill="rgb(252,127,127)" rx="2" ry="2" />
<text  x="865.36" y="222.5" ></text>
</g>
<g >
<title>DefaultNamedDomainObjectCollection$UnfilteredIndex.get (2 samples, 0.21%)</title><rect x="1109.7" y="84" width="2.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="1112.66" y="94.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="435.6" y="148" width="2.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="438.55" y="158.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="650.2" y="228" width="2.5" height="15.0" fill="rgb(220,79,79)" rx="2" ry="2" />
<text  x="653.21" y="238.5" ></text>
</g>
<g >
<title>DefaultConfiguration.preventFromFurtherMutation (2 samples, 0.21%)</title><rect x="744.4" y="324" width="2.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="747.36" y="334.5" ></text>
</g>
<g >
<title>LocalCache$Segment.drainRecencyQueue (2 samples, 0.21%)</title><rect x="790.8" y="116" width="2.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="793.81" y="126.5" ></text>
</g>
<g >
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (2 samples, 0.21%)</title><rect x="278.6" y="68" width="2.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="281.64" y="78.5" ></text>
</g>
<g >
<title>Streams$StreamBuilderImpl.forEachRemaining (2 samples, 0.21%)</title><rect x="788.3" y="1620" width="2.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="791.30" y="1630.5" ></text>
</g>
<g >
<title>StateTransitionController$$Lambda$.create (2 samples, 0.21%)</title><rect x="744.4" y="1444" width="2.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="747.36" y="1454.5" ></text>
</g>
<g >
<title>GangWorker::loop() (5 samples, 0.53%)</title><rect x="910.1" y="132" width="6.2" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="913.06" y="142.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="336.4" y="148" width="2.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="339.38" y="158.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="461.9" y="148" width="2.5" height="15.0" fill="rgb(223,83,83)" rx="2" ry="2" />
<text  x="464.91" y="158.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="332.6" y="132" width="2.5" height="15.0" fill="rgb(250,124,124)" rx="2" ry="2" />
<text  x="335.62" y="142.5" ></text>
</g>
<g >
<title>FileTreeAdapter.visitContents (2 samples, 0.21%)</title><rect x="788.3" y="2052" width="2.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="791.30" y="2062.5" ></text>
</g>
<g >
<title>AbstractFileCollection.visitStructure (2 samples, 0.21%)</title><rect x="305.0" y="180" width="2.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="308.00" y="190.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="308.8" y="164" width="2.5" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="311.77" y="174.5" ></text>
</g>
<g >
<title>start_thread (5 samples, 0.53%)</title><rect x="893.7" y="196" width="6.3" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="896.74" y="206.5" ></text>
</g>
<g >
<title>SessionFailureReportingActionExecuter.execute (2 samples, 0.21%)</title><rect x="744.4" y="2356" width="2.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="747.36" y="2366.5" ></text>
</g>
<g >
<title>OutputFileChanges$$Lambda$.apply (2 samples, 0.21%)</title><rect x="1064.5" y="68" width="2.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="1067.47" y="78.5" ></text>
</g>
<g >
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (2 samples, 0.21%)</title><rect x="769.5" y="116" width="2.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="772.47" y="126.5" ></text>
</g>
<g >
<title>AbstractPipeline.copyInto (2 samples, 0.21%)</title><rect x="788.3" y="1060" width="2.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="791.30" y="1070.5" ></text>
</g>
<g >
<title>DefaultBuildLifecycleController$DefaultWorkGraphBuilder.addRequestedTasks (2 samples, 0.21%)</title><rect x="744.4" y="1268" width="2.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="747.36" y="1278.5" ></text>
</g>
<g >
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.21%)</title><rect x="769.5" y="148" width="2.5" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="772.47" y="158.5" ></text>
</g>
<g >
<title>DelegatingConstructorAccessorImpl.newInstance (2 samples, 0.21%)</title><rect x="213.4" y="164" width="2.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="216.36" y="174.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (15 samples, 1.60%)</title><rect x="874.9" y="100" width="18.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="877.91" y="110.5" ></text>
</g>
<g >
<title>ThreadLocal.setInitialValue (2 samples, 0.21%)</title><rect x="1097.1" y="84" width="2.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="1100.11" y="94.5" ></text>
</g>
<g >
<title>GangWorker::loop() (4 samples, 0.43%)</title><rect x="86.6" y="132" width="5.0" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="89.57" y="142.5" ></text>
</g>
<g >
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.21%)</title><rect x="859.9" y="68" width="2.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="862.85" y="78.5" ></text>
</g>
<g >
<title>StateTransitionController.doTransition (2 samples, 0.21%)</title><rect x="97.9" y="884" width="2.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="100.87" y="894.5" ></text>
</g>
<g >
<title>Thread*) (20 samples, 2.13%)</title><rect x="568.6" y="164" width="25.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="571.62" y="174.5" >T..</text>
</g>
<g >
<title>UnpackingVisitor.visitSingleFile (2 samples, 0.21%)</title><rect x="305.0" y="228" width="2.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="308.00" y="238.5" ></text>
</g>
<g >
<title>DefaultConfigurationFactory.create (2 samples, 0.21%)</title><rect x="213.4" y="260" width="2.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="216.36" y="270.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (4 samples, 0.43%)</title><rect x="421.7" y="116" width="5.1" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="424.74" y="126.5" ></text>
</g>
<g >
<title>ResolveTaskExecutionModeExecuter.execute (2 samples, 0.21%)</title><rect x="207.1" y="532" width="2.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="210.09" y="542.5" ></text>
</g>
<g >
<title>HashMap$TreeNode.getTreeNode (2 samples, 0.21%)</title><rect x="686.6" y="52" width="2.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="689.62" y="62.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (7 samples, 0.74%)</title><rect x="323.8" y="84" width="8.8" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="326.83" y="94.5" ></text>
</g>
<g >
<title>Thread.run (2 samples, 0.21%)</title><rect x="1064.5" y="1076" width="2.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1067.47" y="1086.5" ></text>
</g>
<g >
<title>G1CMTask::drain_local_queue(bool) [clone .part.158] (2 samples, 0.21%)</title><rect x="271.1" y="68" width="2.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="274.11" y="78.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="262.3" y="148" width="2.5" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="265.32" y="158.5" ></text>
</g>
<g >
<title>AssignWorkspaceStep.execute (2 samples, 0.21%)</title><rect x="788.3" y="2884" width="2.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="791.30" y="2894.5" ></text>
</g>
<g >
<title>DefaultIncludedBuildTaskGraph.withNewWorkGraph (2 samples, 0.21%)</title><rect x="97.9" y="772" width="2.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="100.87" y="782.5" ></text>
</g>
<g >
<title>dynamic invocation (7 samples, 0.74%)</title><rect x="1136.0" y="52" width="8.8" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="1139.02" y="62.5" ></text>
</g>
<g >
<title>Gradle infrastructure (2 samples, 0.21%)</title><rect x="97.9" y="148" width="2.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="100.87" y="158.5" ></text>
</g>
<g >
<title>HashMap.put (2 samples, 0.21%)</title><rect x="692.9" y="68" width="2.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="695.89" y="78.5" ></text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (4 samples, 0.43%)</title><rect x="421.7" y="100" width="5.1" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="424.74" y="110.5" ></text>
</g>
<g >
<title>DefaultProjectStateRegistry.lambda$withMutableStateOfAllProjects$0 (2 samples, 0.21%)</title><rect x="744.4" y="1028" width="2.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="747.36" y="1038.5" ></text>
</g>
<g >
<title>ExecutorPolicy$CatchAndRecordFailures.onExecute (2 samples, 0.21%)</title><rect x="69.0" y="148" width="2.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="72.00" y="158.5" ></text>
</g>
<g >
<title>AbstractFileCollection.visitStructure (2 samples, 0.21%)</title><rect x="788.3" y="2548" width="2.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="791.30" y="2558.5" ></text>
</g>
<g >
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (2 samples, 0.21%)</title><rect x="859.9" y="100" width="2.5" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="862.85" y="110.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="1015.5" y="132" width="2.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1018.51" y="142.5" ></text>
</g>
<g >
<title>DefaultConfigurableFileCollection.visitChildren (2 samples, 0.21%)</title><rect x="788.3" y="2228" width="2.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="791.30" y="2238.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="991.7" y="164" width="2.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="994.66" y="174.5" ></text>
</g>
<g >
<title>Thread*) (3 samples, 0.32%)</title><rect x="224.7" y="212" width="3.7" height="15.0" fill="rgb(219,77,77)" rx="2" ry="2" />
<text  x="227.66" y="222.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="262.3" y="180" width="2.5" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="265.32" y="190.5" ></text>
</g>
<g >
<title>StateTransitionController.lambda$transitionIfNotPreviously$10 (2 samples, 0.21%)</title><rect x="97.9" y="468" width="2.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="100.87" y="478.5" ></text>
</g>
<g >
<title>UnpackingVisitor$SingleFileResolvingFileCollection.getIntrinsicFiles (2 samples, 0.21%)</title><rect x="305.0" y="116" width="2.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="308.00" y="126.5" ></text>
</g>
<g >
<title>DefaultServiceRegistry$SingletonService.prepare (2 samples, 0.21%)</title><rect x="192.0" y="68" width="2.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="195.02" y="78.5" ></text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (6 samples, 0.64%)</title><rect x="946.5" y="52" width="7.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="949.47" y="62.5" ></text>
</g>
<g >
<title>G1RebuildRemSetTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="1015.5" y="116" width="2.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1018.51" y="126.5" ></text>
</g>
<g >
<title>ThreadLocal.set (4 samples, 0.43%)</title><rect x="1100.9" y="52" width="5.0" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="1103.87" y="62.5" ></text>
</g>
<g >
<title>DefaultArtifactDependencyResolver.resolve (2 samples, 0.21%)</title><rect x="744.4" y="532" width="2.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="747.36" y="542.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="593.7" y="180" width="2.5" height="15.0" fill="rgb(240,109,109)" rx="2" ry="2" />
<text  x="596.72" y="190.5" ></text>
</g>
<g >
<title>AssignWorkspaceStep$$Lambda$.executeInWorkspace (2 samples, 0.21%)</title><rect x="207.1" y="372" width="2.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="210.09" y="382.5" ></text>
</g>
<g >
<title>Thread*) (6 samples, 0.64%)</title><rect x="454.4" y="164" width="7.5" height="15.0" fill="rgb(253,128,128)" rx="2" ry="2" />
<text  x="457.38" y="174.5" ></text>
</g>
<g >
<title>GangWorker::loop() (6 samples, 0.64%)</title><rect x="946.5" y="196" width="7.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="949.47" y="206.5" ></text>
</g>
<g >
<title>ExecuteActionsTaskExecuter.execute (2 samples, 0.21%)</title><rect x="788.3" y="2964" width="2.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="791.30" y="2974.5" ></text>
</g>
<g >
<title>CachingPatternSpecFactory$CachingSpec.isSatisfiedBy (2 samples, 0.21%)</title><rect x="790.8" y="244" width="2.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="793.81" y="254.5" ></text>
</g>
<g >
<title>G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (14 samples, 1.49%)</title><rect x="652.7" y="52" width="17.6" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="655.72" y="62.5" ></text>
</g>
<g >
<title>G1CMObjArrayProcessor::process_slice(HeapWord*) (4 samples, 0.43%)</title><rect x="223.4" y="100" width="5.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="226.40" y="110.5" ></text>
</g>
<g >
<title>SATBMarkQueue::filter() (2 samples, 0.21%)</title><rect x="1053.2" y="52" width="2.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1056.17" y="62.5" ></text>
</g>
<g >
<title>LocalCache$Segment.expireEntries (2 samples, 0.21%)</title><rect x="790.8" y="132" width="2.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="793.81" y="142.5" ></text>
</g>
<g >
<title>CompiledMethod::do_unloading_parallel_postponed() (2 samples, 0.21%)</title><rect x="818.4" y="68" width="2.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="821.43" y="78.5" ></text>
</g>
<g >
<title>CaptureStateBeforeExecutionStep$$Lambda$.apply (2 samples, 0.21%)</title><rect x="207.1" y="164" width="2.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="210.09" y="174.5" ></text>
</g>
<g >
<title>DaemonCommandExecution.proceed (2 samples, 0.21%)</title><rect x="744.4" y="2708" width="2.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="747.36" y="2718.5" ></text>
</g>
<g >
<title>LocalCache$LocalManualCache.get (4 samples, 0.43%)</title><rect x="783.3" y="100" width="5.0" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="786.28" y="110.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="336.4" y="180" width="2.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="339.38" y="190.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="714.2" y="212" width="2.5" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="717.23" y="222.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="593.7" y="132" width="2.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="596.72" y="142.5" ></text>
</g>
<g >
<title>DependencyInjectingInstantiator.newInstance (6 samples, 0.64%)</title><rect x="213.4" y="100" width="7.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="216.36" y="110.5" ></text>
</g>
<g >
<title>DefaultBuildWorkPreparer.populateWorkGraph (2 samples, 0.21%)</title><rect x="744.4" y="1332" width="2.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="747.36" y="1342.5" ></text>
</g>
<g >
<title>FileSystemWatchingBuildActionRunner.run (2 samples, 0.21%)</title><rect x="744.4" y="1972" width="2.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="747.36" y="1982.5" ></text>
</g>
<g >
<title>Thread*) (31 samples, 3.30%)</title><rect x="468.2" y="212" width="38.9" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="471.19" y="222.5" >Thr..</text>
</g>
<g >
<title>DirectorySnapshot.accept (2 samples, 0.21%)</title><rect x="788.3" y="580" width="2.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="791.30" y="590.5" ></text>
</g>
<g >
<title>GangWorker::loop() (4 samples, 0.43%)</title><rect x="421.7" y="148" width="5.1" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="424.74" y="158.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="92.9" y="116" width="2.5" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="95.85" y="126.5" ></text>
</g>
<g >
<title>VintageBuildModelController.scheduleRequestedTasks (2 samples, 0.21%)</title><rect x="744.4" y="1252" width="2.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="747.36" y="1262.5" ></text>
</g>
<g >
<title>ThreadLocal.setInitialValue (2 samples, 0.21%)</title><rect x="1094.6" y="84" width="2.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="1097.60" y="94.5" ></text>
</g>
<g >
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (7 samples, 0.74%)</title><rect x="723.0" y="132" width="8.8" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="726.02" y="142.5" ></text>
</g>
<g >
<title>RunAsWorkerThreadBuildActionExecutor.execute (2 samples, 0.21%)</title><rect x="744.4" y="2228" width="2.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="747.36" y="2238.5" ></text>
</g>
<g >
<title>DefaultFileCollectionFactory$ResolvingFileCollection.visitChildren (2 samples, 0.21%)</title><rect x="16.3" y="116" width="2.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="19.28" y="126.5" ></text>
</g>
<g >
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (31 samples, 3.30%)</title><rect x="468.2" y="84" width="38.9" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="471.19" y="94.5" >G1R..</text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (2 samples, 0.21%)</title><rect x="320.1" y="68" width="2.5" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="323.06" y="78.5" ></text>
</g>
<g >
<title>CachingPatternSpecFactory$CachingSpec.isSatisfiedBy (2 samples, 0.21%)</title><rect x="788.3" y="116" width="2.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="791.30" y="126.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (4 samples, 0.43%)</title><rect x="86.6" y="116" width="5.0" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="89.57" y="126.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="991.7" y="196" width="2.5" height="15.0" fill="rgb(206,58,58)" rx="2" ry="2" />
<text  x="994.66" y="206.5" ></text>
</g>
<g >
<title>TreeMap.getEntry (2 samples, 0.21%)</title><rect x="1109.7" y="52" width="2.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="1112.66" y="62.5" ></text>
</g>
<g >
<title>G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (3 samples, 0.32%)</title><rect x="262.3" y="84" width="3.8" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="265.32" y="94.5" ></text>
</g>
<g >
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (3 samples, 0.32%)</title><rect x="731.8" y="100" width="3.8" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="734.81" y="110.5" ></text>
</g>
<g >
<title>Thread*) (11 samples, 1.17%)</title><rect x="399.1" y="196" width="13.9" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="402.15" y="206.5" ></text>
</g>
<g >
<title>CompositeFileCollection$$Lambda$.accept (2 samples, 0.21%)</title><rect x="16.3" y="84" width="2.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="19.28" y="94.5" ></text>
</g>
<g >
<title>DaemonStateCoordinator$1.run (2 samples, 0.21%)</title><rect x="744.4" y="2740" width="2.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="747.36" y="2750.5" ></text>
</g>
<g >
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.21%)</title><rect x="859.9" y="148" width="2.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="862.85" y="158.5" ></text>
</g>
<g >
<title>RemoveUntrackedExecutionStateStep.execute (2 samples, 0.21%)</title><rect x="788.3" y="2788" width="2.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="791.30" y="2798.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="320.1" y="164" width="2.5" height="15.0" fill="rgb(211,66,66)" rx="2" ry="2" />
<text  x="323.06" y="174.5" ></text>
</g>
<g >
<title>PropertyFileCollection.visitChildren (2 samples, 0.21%)</title><rect x="788.3" y="2596" width="2.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="791.30" y="2606.5" ></text>
</g>
<g >
<title>Thread::call_run() (20 samples, 2.13%)</title><rect x="568.6" y="148" width="25.1" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="571.62" y="158.5" >T..</text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (11 samples, 1.17%)</title><rect x="399.1" y="116" width="13.9" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="402.15" y="126.5" ></text>
</g>
<g >
<title>BuildTreeLifecycleBuildActionExecutor.execute (2 samples, 0.21%)</title><rect x="744.4" y="2132" width="2.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="747.36" y="2142.5" ></text>
</g>
<g >
<title>LocalCache$LocalManualCache.get (2 samples, 0.21%)</title><rect x="790.8" y="228" width="2.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="793.81" y="238.5" ></text>
</g>
<g >
<title>DefaultBuildTreeLifecycleController$$Lambda$.apply (2 samples, 0.21%)</title><rect x="744.4" y="1668" width="2.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="747.36" y="1678.5" ></text>
</g>
<g >
<title>G1ParTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="862.4" y="164" width="2.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="865.36" y="174.5" ></text>
</g>
<g >
<title>DefaultUserCodeApplicationContext$CurrentApplication$1.execute (2 samples, 0.21%)</title><rect x="1103.4" y="68" width="2.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="1106.38" y="78.5" ></text>
</g>
<g >
<title>FilteredFileTree.lambda$visitChildren$0 (2 samples, 0.21%)</title><rect x="788.3" y="1956" width="2.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="791.30" y="1966.5" ></text>
</g>
<g >
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (6 samples, 0.64%)</title><rect x="946.5" y="164" width="7.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="949.47" y="174.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp$OfRef.accept (2 samples, 0.21%)</title><rect x="788.3" y="1396" width="2.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="791.30" y="1406.5" ></text>
</g>
<g >
<title>MarkSnapshottingInputsStartedStep.execute (2 samples, 0.21%)</title><rect x="1064.5" y="548" width="2.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1067.47" y="558.5" ></text>
</g>
<g >
<title>start_thread (31 samples, 3.30%)</title><rect x="468.2" y="228" width="38.9" height="15.0" fill="rgb(217,75,75)" rx="2" ry="2" />
<text  x="471.19" y="238.5" >sta..</text>
</g>
<g >
<title>CompositeFileCollection.lambda$visitContents$0 (2 samples, 0.21%)</title><rect x="788.3" y="2564" width="2.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="791.30" y="2574.5" ></text>
</g>
<g >
<title>AbstractFileCollection$2.visitCollection (2 samples, 0.21%)</title><rect x="305.0" y="148" width="2.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="308.00" y="158.5" ></text>
</g>
<g >
<title>EventFiringTaskExecuter$1.call (2 samples, 0.21%)</title><rect x="788.3" y="3092" width="2.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="791.30" y="3102.5" ></text>
</g>
<g >
<title>start_thread (15 samples, 1.60%)</title><rect x="921.4" y="164" width="18.8" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="924.36" y="174.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="276.1" y="164" width="2.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="279.13" y="174.5" ></text>
</g>
<g >
<title>ResolveChangesStep.resolveExecutionStateChanges (2 samples, 0.21%)</title><rect x="1064.5" y="356" width="2.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1067.47" y="366.5" ></text>
</g>
<g >
<title>StateTransitionController.lambda$transition$6 (2 samples, 0.21%)</title><rect x="97.9" y="852" width="2.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="100.87" y="862.5" ></text>
</g>
<g >
<title>ThreadPoolExecutor.runWorker (2 samples, 0.21%)</title><rect x="1064.5" y="1044" width="2.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="1067.47" y="1054.5" ></text>
</g>
<g >
<title>OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (30 samples, 3.19%)</title><rect x="824.7" y="52" width="37.7" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="827.70" y="62.5" >Oop..</text>
</g>
<g >
<title>RootBuildLifecycleBuildActionExecutor.execute (2 samples, 0.21%)</title><rect x="97.9" y="1140" width="2.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="100.87" y="1150.5" ></text>
</g>
<g >
<title>Thread::call_run() (6 samples, 0.64%)</title><rect x="946.5" y="212" width="7.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="949.47" y="222.5" ></text>
</g>
<g >
<title>Iterator.forEachRemaining (2 samples, 0.21%)</title><rect x="744.4" y="180" width="2.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="747.36" y="190.5" ></text>
</g>
<g >
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (7 samples, 0.74%)</title><rect x="507.1" y="132" width="8.8" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="510.11" y="142.5" ></text>
</g>
<g >
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (6 samples, 0.64%)</title><rect x="946.5" y="84" width="7.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="949.47" y="94.5" ></text>
</g>
<g >
<title>GangWorker::loop() (7 samples, 0.74%)</title><rect x="723.0" y="180" width="8.8" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="726.02" y="190.5" ></text>
</g>
<g >
<title>RootBuildLifecycleBuildActionExecutor$$Lambda$.apply (2 samples, 0.21%)</title><rect x="97.9" y="1108" width="2.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="100.87" y="1118.5" ></text>
</g>
<g >
<title>DefaultBuildTreeContext.execute (2 samples, 0.21%)</title><rect x="97.9" y="1156" width="2.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="100.87" y="1166.5" ></text>
</g>
<g >
<title>G1ParTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="650.2" y="164" width="2.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="653.21" y="174.5" ></text>
</g>
<g >
<title>Thread*) (36 samples, 3.83%)</title><rect x="596.2" y="132" width="45.2" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="599.23" y="142.5" >Thre..</text>
</g>
<g >
<title>VintageBuildModelController.prepareToScheduleTasks (2 samples, 0.21%)</title><rect x="97.9" y="548" width="2.5" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="100.87" y="558.5" ></text>
</g>
<g >
<title>Gradle infrastructure (2 samples, 0.21%)</title><rect x="207.1" y="180" width="2.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="210.09" y="190.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="220.9" y="180" width="2.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="223.89" y="190.5" ></text>
</g>
<g >
<title>start_thread (7 samples, 0.74%)</title><rect x="507.1" y="212" width="8.8" height="15.0" fill="rgb(208,62,62)" rx="2" ry="2" />
<text  x="510.11" y="222.5" ></text>
</g>
<g >
<title>HeapRegionRemSetIterator::has_next(unsigned long&amp;) (3 samples, 0.32%)</title><rect x="731.8" y="52" width="3.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="734.81" y="62.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="92.9" y="132" width="2.5" height="15.0" fill="rgb(246,118,118)" rx="2" ry="2" />
<text  x="95.85" y="142.5" ></text>
</g>
<g >
<title>DefaultConfigurableFileCollection$UnresolvedItemsCollector.visitContents (2 samples, 0.21%)</title><rect x="788.3" y="2212" width="2.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="791.30" y="2222.5" ></text>
</g>
<g >
<title>HeapRegion::oops_on_card_seq_iterate_careful&lt;false, G1ConcurrentRefineOopClosure&gt;(MemRegion, G1ConcurrentRefineOopClosure*) (2 samples, 0.21%)</title><rect x="308.8" y="68" width="2.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="311.77" y="78.5" ></text>
</g>
<g >
<title>GangWorker::loop() (3 samples, 0.32%)</title><rect x="289.9" y="164" width="3.8" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="292.94" y="174.5" ></text>
</g>
<g >
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.21%)</title><rect x="864.9" y="164" width="2.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="867.87" y="174.5" ></text>
</g>
<g >
<title>FinalizePropertiesTaskExecuter.execute (2 samples, 0.21%)</title><rect x="1064.5" y="740" width="2.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1067.47" y="750.5" ></text>
</g>
<g >
<title>EventFiringTaskExecuter.execute (2 samples, 0.21%)</title><rect x="788.3" y="3124" width="2.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="791.30" y="3134.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="320.1" y="148" width="2.5" height="15.0" fill="rgb(224,86,86)" rx="2" ry="2" />
<text  x="323.06" y="158.5" ></text>
</g>
<g >
<title>ReferencePipeline$3$1.accept (2 samples, 0.21%)</title><rect x="788.3" y="644" width="2.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="791.30" y="654.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="1069.5" y="196" width="2.5" height="15.0" fill="rgb(252,125,125)" rx="2" ry="2" />
<text  x="1072.49" y="206.5" ></text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (7 samples, 0.74%)</title><rect x="323.8" y="68" width="8.8" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="326.83" y="78.5" ></text>
</g>
<g >
<title>DefaultBuildEventsListenerRegistry$AbstractListener$$Lambda$.run (2 samples, 0.21%)</title><rect x="69.0" y="100" width="2.5" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="72.00" y="110.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="276.1" y="148" width="2.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="279.13" y="158.5" ></text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (15 samples, 1.60%)</title><rect x="874.9" y="84" width="18.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="877.91" y="94.5" ></text>
</g>
<g >
<title>DaemonCommandExecution.proceed (2 samples, 0.21%)</title><rect x="97.9" y="1604" width="2.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="100.87" y="1614.5" ></text>
</g>
<g >
<title>AbstractPipeline.copyInto (2 samples, 0.21%)</title><rect x="788.3" y="292" width="2.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="791.30" y="302.5" ></text>
</g>
<g >
<title>DefaultFileCollectionFactory$ResolvingFileCollection.visitChildren (2 samples, 0.21%)</title><rect x="305.0" y="260" width="2.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="308.00" y="270.5" ></text>
</g>
<g >
<title>StateTransitionController.doTransition (2 samples, 0.21%)</title><rect x="744.4" y="1796" width="2.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="747.36" y="1806.5" ></text>
</g>
<g >
<title>G1ParTask::work(unsigned int) (4 samples, 0.43%)</title><rect x="543.5" y="132" width="5.0" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="546.51" y="142.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="287.4" y="180" width="2.5" height="15.0" fill="rgb(222,82,82)" rx="2" ry="2" />
<text  x="290.43" y="190.5" ></text>
</g>
<g >
<title>G1ParallelCleaningTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="818.4" y="84" width="2.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="821.43" y="94.5" ></text>
</g>
<g >
<title>EventFiringTaskExecuter$1.executeTask (2 samples, 0.21%)</title><rect x="207.1" y="596" width="2.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="210.09" y="606.5" ></text>
</g>
<g >
<title>DaemonCommandExecution.proceed (2 samples, 0.21%)</title><rect x="97.9" y="1508" width="2.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="100.87" y="1518.5" ></text>
</g>
<g >
<title>ManagedExecutorImpl$1.run (2 samples, 0.21%)</title><rect x="97.9" y="1860" width="2.5" height="15.0" fill="rgb(60,210,60)" rx="2" ry="2" />
<text  x="100.87" y="1870.5" ></text>
</g>
<g >
<title>DaemonStateCoordinator$1.run (2 samples, 0.21%)</title><rect x="97.9" y="1828" width="2.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="100.87" y="1838.5" ></text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (4 samples, 0.43%)</title><rect x="645.2" y="68" width="5.0" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="648.19" y="78.5" ></text>
</g>
<g >
<title>DefaultPlanExecutor$ExecutorWorker$$Lambda$.execute (2 samples, 0.21%)</title><rect x="1064.5" y="948" width="2.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="1067.47" y="958.5" ></text>
</g>
<g >
<title>DefaultConfiguration$$Lambda$.apply (2 samples, 0.21%)</title><rect x="744.4" y="612" width="2.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="747.36" y="622.5" ></text>
</g>
<g >
<title>DirectorySnapshot.lambda$accept$2 (2 samples, 0.21%)</title><rect x="788.3" y="212" width="2.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="791.30" y="222.5" ></text>
</g>
<g >
<title>CompositeFileCollection$$Lambda$.accept (2 samples, 0.21%)</title><rect x="788.3" y="2484" width="2.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="791.30" y="2494.5" ></text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (43 samples, 4.57%)</title><rect x="345.2" y="100" width="53.9" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="348.17" y="110.5" >G1CMB..</text>
</g>
<g >
<title>CachingDirectedGraphWalker.doSearch (2 samples, 0.21%)</title><rect x="744.4" y="740" width="2.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="747.36" y="750.5" ></text>
</g>
<g >
<title>ArrayList$ArrayListSpliterator.forEachRemaining (2 samples, 0.21%)</title><rect x="788.3" y="276" width="2.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="791.30" y="286.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (43 samples, 4.57%)</title><rect x="345.2" y="132" width="53.9" height="15.0" fill="rgb(177,177,51)" rx="2" ry="2" />
<text  x="348.17" y="142.5" >G1CMC..</text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="714.2" y="228" width="2.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="717.23" y="238.5" ></text>
</g>
<g >
<title>DefaultBuildConfigurationActionExecuter.select (2 samples, 0.21%)</title><rect x="744.4" y="1092" width="2.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="747.36" y="1102.5" ></text>
</g>
<g >
<title>CompositeFileCollection.visitContents (2 samples, 0.21%)</title><rect x="119.2" y="52" width="2.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="122.21" y="62.5" ></text>
</g>
<g >
<title>ThreadPoolExecutor.runWorker (2 samples, 0.21%)</title><rect x="69.0" y="180" width="2.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="72.00" y="190.5" ></text>
</g>
<g >
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (19 samples, 2.02%)</title><rect x="518.4" y="132" width="23.9" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="521.40" y="142.5" >G..</text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (4 samples, 0.43%)</title><rect x="340.1" y="164" width="5.1" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="343.15" y="174.5" ></text>
</g>
<g >
<title>G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (5 samples, 0.53%)</title><rect x="910.1" y="68" width="6.2" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="913.06" y="78.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="650.2" y="180" width="2.5" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="653.21" y="190.5" ></text>
</g>
<g >
<title>ReferencePipeline$3$1.accept (2 samples, 0.21%)</title><rect x="788.3" y="836" width="2.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="791.30" y="846.5" ></text>
</g>
<g >
<title>DefaultTasksBuildExecutionAction.configure (2 samples, 0.21%)</title><rect x="744.4" y="932" width="2.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="747.36" y="942.5" ></text>
</g>
<g >
<title>ResolveChangesStep.lambda$execute$0 (2 samples, 0.21%)</title><rect x="1064.5" y="372" width="2.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="1067.47" y="382.5" ></text>
</g>
<g >
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (2 samples, 0.21%)</title><rect x="864.9" y="116" width="2.5" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="867.87" y="126.5" ></text>
</g>
<g >
<title>ExecuteActionsTaskExecuter.executeIfValid (2 samples, 0.21%)</title><rect x="1064.5" y="692" width="2.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="1067.47" y="702.5" ></text>
</g>
<g >
<title>DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long) (3 samples, 0.32%)</title><rect x="916.3" y="100" width="3.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="919.34" y="110.5" ></text>
</g>
<g >
<title>Thread::call_run() (4 samples, 0.43%)</title><rect x="421.7" y="164" width="5.1" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="424.74" y="174.5" ></text>
</g>
<g >
<title>DefaultValueSnapshotter.snapshot (2 samples, 0.21%)</title><rect x="207.1" y="52" width="2.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="210.09" y="62.5" ></text>
</g>
<g >
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.21%)</title><rect x="650.2" y="148" width="2.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="653.21" y="158.5" ></text>
</g>
<g >
<title>G1CMObjArrayProcessor::process_slice(HeapWord*) (4 samples, 0.43%)</title><rect x="340.1" y="84" width="5.1" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="343.15" y="94.5" ></text>
</g>
<g >
<title>Gradle infrastructure (2 samples, 0.21%)</title><rect x="1064.5" y="916" width="2.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="1067.47" y="926.5" ></text>
</g>
<g >
<title>NotSpec.isSatisfiedBy (2 samples, 0.21%)</title><rect x="784.5" y="132" width="2.5" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="787.53" y="142.5" ></text>
</g>
<g >
<title>G1ParTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="769.5" y="180" width="2.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="772.47" y="190.5" ></text>
</g>
<g >
<title>Gradle infrastructure (2 samples, 0.21%)</title><rect x="744.4" y="1348" width="2.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="747.36" y="1358.5" ></text>
</g>
<g >
<title>StateTransitionController.lambda$inState$1 (2 samples, 0.21%)</title><rect x="744.4" y="1396" width="2.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="747.36" y="1406.5" ></text>
</g>
<g >
<title>DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long) (2 samples, 0.21%)</title><rect x="991.7" y="116" width="2.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="994.66" y="126.5" ></text>
</g>
<g >
<title>MarkSnapshottingInputsStartedStep.execute (2 samples, 0.21%)</title><rect x="788.3" y="2804" width="2.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="791.30" y="2814.5" ></text>
</g>
<g >
<title>ResolveChangesStep$$Lambda$.get (2 samples, 0.21%)</title><rect x="1064.5" y="228" width="2.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="1067.47" y="238.5" ></text>
</g>
<g >
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (31 samples, 3.30%)</title><rect x="468.2" y="132" width="38.9" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="471.19" y="142.5" >G1R..</text>
</g>
<g >
<title>Thread*) (4 samples, 0.43%)</title><rect x="543.5" y="180" width="5.0" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="546.51" y="190.5" ></text>
</g>
<g >
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.21%)</title><rect x="282.4" y="84" width="2.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="285.40" y="94.5" ></text>
</g>
<g >
<title>UnpackingVisitor.add (2 samples, 0.21%)</title><rect x="16.3" y="100" width="2.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="19.28" y="110.5" ></text>
</g>
<g >
<title>FileSystemWatchingBuildActionRunner.run (2 samples, 0.21%)</title><rect x="97.9" y="1060" width="2.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="100.87" y="1070.5" ></text>
</g>
<g >
<title>CompositeFileCollection.visitContents (2 samples, 0.21%)</title><rect x="788.3" y="2612" width="2.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="791.30" y="2622.5" ></text>
</g>
<g >
<title>Runtime1 stub (2 samples, 0.21%)</title><rect x="1050.7" y="52" width="2.5" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="1053.66" y="62.5" ></text>
</g>
<g >
<title>DefaultBuildTreeLifecycleController.runBuild (2 samples, 0.21%)</title><rect x="97.9" y="964" width="2.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="100.87" y="974.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="593.7" y="164" width="2.5" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="596.72" y="174.5" ></text>
</g>
<g >
<title>G1CMTask::drain_local_queue(bool) [clone .part.158] (16 samples, 1.70%)</title><rect x="399.1" y="100" width="20.1" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="402.15" y="110.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (10 samples, 1.06%)</title><rect x="228.4" y="132" width="12.6" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="231.43" y="142.5" ></text>
</g>
<g >
<title>LocalCache$Segment.getEntry (5 samples, 0.53%)</title><rect x="782.0" y="52" width="6.3" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="785.02" y="62.5" ></text>
</g>
<g >
<title>StartParamsValidatingActionExecuter.execute (2 samples, 0.21%)</title><rect x="97.9" y="1428" width="2.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="100.87" y="1438.5" ></text>
</g>
<g >
<title>IdentifyStep.execute (2 samples, 0.21%)</title><rect x="1064.5" y="660" width="2.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1067.47" y="670.5" ></text>
</g>
<g >
<title>DefaultProjectStateRegistry$ProjectStateImpl.applyToMutableState (2 samples, 0.21%)</title><rect x="97.9" y="276" width="2.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="100.87" y="286.5" ></text>
</g>
<g >
<title>HeapRegion::oops_on_card_seq_iterate_careful&lt;false, G1ConcurrentRefineOopClosure&gt;(MemRegion, G1ConcurrentRefineOopClosure*) (5 samples, 0.53%)</title><rect x="699.2" y="84" width="6.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="702.17" y="94.5" ></text>
</g>
<g >
<title>BuildTreeLifecycleBuildActionExecutor.lambda$execute$0 (2 samples, 0.21%)</title><rect x="97.9" y="1172" width="2.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="100.87" y="1182.5" ></text>
</g>
<g >
<title>G1ParTask::work(unsigned int) (9 samples, 0.96%)</title><rect x="652.7" y="180" width="11.3" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="655.72" y="190.5" ></text>
</g>
<g >
<title>start_thread (5 samples, 0.53%)</title><rect x="699.2" y="196" width="6.2" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="702.17" y="206.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (5 samples, 0.53%)</title><rect x="413.0" y="116" width="6.2" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="415.96" y="126.5" ></text>
</g>
<g >
<title>DefaultProjectStateRegistry$ProjectStateImpl.fromMutableState (2 samples, 0.21%)</title><rect x="97.9" y="260" width="2.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="100.87" y="270.5" ></text>
</g>
<g >
<title>DefaultConfiguration.resolveGraphForBuildDependenciesIfRequired (2 samples, 0.21%)</title><rect x="744.4" y="644" width="2.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="747.36" y="654.5" ></text>
</g>
<g >
<title>start_thread (5 samples, 0.53%)</title><rect x="241.0" y="228" width="6.3" height="15.0" fill="rgb(218,77,77)" rx="2" ry="2" />
<text  x="243.98" y="238.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp.evaluateSequential (2 samples, 0.21%)</title><rect x="788.3" y="708" width="2.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="791.30" y="718.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (3 samples, 0.32%)</title><rect x="224.7" y="148" width="3.7" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="227.66" y="158.5" ></text>
</g>
<g >
<title>DefaultBuildTreeLifecycleController.lambda$runBuild$4 (2 samples, 0.21%)</title><rect x="744.4" y="1732" width="2.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="747.36" y="1742.5" ></text>
</g>
<g >
<title>RootBuildLifecycleBuildActionExecutor$$Lambda$.apply (2 samples, 0.21%)</title><rect x="744.4" y="2020" width="2.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="747.36" y="2030.5" ></text>
</g>
<g >
<title>WatchForDisconnection.execute (2 samples, 0.21%)</title><rect x="97.9" y="1524" width="2.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="100.87" y="1534.5" ></text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (2 samples, 0.21%)</title><rect x="336.4" y="84" width="2.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="339.38" y="94.5" ></text>
</g>
<g >
<title>ForwardClientInput.execute (2 samples, 0.21%)</title><rect x="97.9" y="1652" width="2.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="100.87" y="1662.5" ></text>
</g>
<g >
<title>Optional.map (2 samples, 0.21%)</title><rect x="1064.5" y="292" width="2.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="1067.47" y="302.5" ></text>
</g>
<g >
<title>DefaultDomainObjectCollection$IteratorImpl.hasNext (2 samples, 0.21%)</title><rect x="151.9" y="52" width="2.5" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="154.85" y="62.5" ></text>
</g>
<g >
<title>ResolveChangesStep.lambda$resolveExecutionStateChanges$8 (2 samples, 0.21%)</title><rect x="1064.5" y="308" width="2.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="1067.47" y="318.5" ></text>
</g>
<g >
<title>CompiledMethod::do_unloading_parallel_postponed() (2 samples, 0.21%)</title><rect x="114.2" y="52" width="2.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="117.19" y="62.5" ></text>
</g>
<g >
<title>ResolveChangesStep.lambda$resolveExecutionStateChanges$6 (2 samples, 0.21%)</title><rect x="1064.5" y="260" width="2.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="1067.47" y="270.5" ></text>
</g>
<g >
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (2 samples, 0.21%)</title><rect x="714.2" y="132" width="2.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="717.23" y="142.5" ></text>
</g>
<g >
<title>DefaultBuildTreeLifecycleController.lambda$doScheduleAndRunTasks$2 (2 samples, 0.21%)</title><rect x="744.4" y="1652" width="2.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="747.36" y="1662.5" ></text>
</g>
<g >
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (7 samples, 0.74%)</title><rect x="507.1" y="116" width="8.8" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="510.11" y="126.5" ></text>
</g>
<g >
<title>AbstractFileResolver.resolve (3 samples, 0.32%)</title><rect x="303.7" y="100" width="3.8" height="15.0" fill="rgb(69,218,69)" rx="2" ry="2" />
<text  x="306.74" y="110.5" ></text>
</g>
<g >
<title>DefaultRootComponentMetadataBuilder$$Lambda$.apply (2 samples, 0.21%)</title><rect x="744.4" y="420" width="2.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="747.36" y="430.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="320.1" y="132" width="2.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="323.06" y="142.5" ></text>
</g>
<g >
<title>DaemonCommandExecution.proceed (2 samples, 0.21%)</title><rect x="744.4" y="2580" width="2.5" height="15.0" fill="rgb(93,240,93)" rx="2" ry="2" />
<text  x="747.36" y="2590.5" ></text>
</g>
<g >
<title>DefaultBuildTreeLifecycleController.scheduleAndRunTasks (2 samples, 0.21%)</title><rect x="744.4" y="1892" width="2.5" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="747.36" y="1902.5" ></text>
</g>
<g >
<title>LocalCache.get (2 samples, 0.21%)</title><rect x="788.3" y="84" width="2.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="791.30" y="94.5" ></text>
</g>
<g >
<title>CompositeFileCollection.lambda$visitContents$0 (2 samples, 0.21%)</title><rect x="788.3" y="2356" width="2.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="791.30" y="2366.5" ></text>
</g>
<g >
<title>G1ParScanThreadState::trim_queue_partially() (27 samples, 2.87%)</title><rect x="826.0" y="84" width="33.9" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="828.96" y="94.5" >G1..</text>
</g>
<g >
<title>Thread::call_run() (7 samples, 0.74%)</title><rect x="705.4" y="196" width="8.8" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="708.45" y="206.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="220.9" y="148" width="2.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="223.89" y="158.5" ></text>
</g>
<g >
<title>DefaultFileCollectionFactory$ResolvingFileCollection.visitChildren (2 samples, 0.21%)</title><rect x="788.3" y="2516" width="2.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="791.30" y="2526.5" ></text>
</g>
<g >
<title>Thread*) (6 samples, 0.64%)</title><rect x="946.5" y="228" width="7.5" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="949.47" y="238.5" ></text>
</g>
<g >
<title>DefaultImmutableAttributes.asMap (2 samples, 0.21%)</title><rect x="744.4" y="68" width="2.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="747.36" y="78.5" ></text>
</g>
<g >
<title>ReferencePipeline.forEach (2 samples, 0.21%)</title><rect x="788.3" y="1332" width="2.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="791.30" y="1342.5" ></text>
</g>
<g >
<title>Thread*) (5 samples, 0.53%)</title><rect x="893.7" y="180" width="6.3" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="896.74" y="190.5" ></text>
</g>
<g >
<title>Thread*) (3 samples, 0.32%)</title><rect x="289.9" y="196" width="3.8" height="15.0" fill="rgb(254,129,129)" rx="2" ry="2" />
<text  x="292.94" y="206.5" ></text>
</g>
<g >
<title>DefaultUserCodeApplicationContext.apply (2 samples, 0.21%)</title><rect x="97.9" y="84" width="2.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="100.87" y="94.5" ></text>
</g>
<g >
<title>start_thread (3 samples, 0.32%)</title><rect x="869.9" y="164" width="3.8" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="872.89" y="174.5" ></text>
</g>
<g >
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.21%)</title><rect x="862.4" y="148" width="2.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="865.36" y="158.5" ></text>
</g>
<g >
<title>DefaultPlanExecutor$ExecutorWorker.lambda$run$0 (2 samples, 0.21%)</title><rect x="207.1" y="708" width="2.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="210.09" y="718.5" ></text>
</g>
<g >
<title>RunAsWorkerThreadBuildActionExecutor.lambda$execute$0 (2 samples, 0.21%)</title><rect x="744.4" y="2164" width="2.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="747.36" y="2174.5" ></text>
</g>
<g >
<title>FilenameUtils.doNormalize (3 samples, 0.32%)</title><rect x="303.7" y="52" width="3.8" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="306.74" y="62.5" ></text>
</g>
<g >
<title>BuildOutcomeReportingBuildActionRunner.run (2 samples, 0.21%)</title><rect x="97.9" y="1044" width="2.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="100.87" y="1054.5" ></text>
</g>
<g >
<title>BuildCompletionNotifyingBuildActionRunner.run (2 samples, 0.21%)</title><rect x="744.4" y="1988" width="2.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="747.36" y="1998.5" ></text>
</g>
<g >
<title>G1ConcurrentRefineThread::run_service() (2 samples, 0.21%)</title><rect x="991.7" y="132" width="2.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="994.66" y="142.5" ></text>
</g>
<g >
<title>DirectorySnapshot.accept (2 samples, 0.21%)</title><rect x="788.3" y="388" width="2.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="791.30" y="398.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="714.2" y="260" width="2.5" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="717.23" y="270.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (2 samples, 0.21%)</title><rect x="220.9" y="132" width="2.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="223.89" y="142.5" ></text>
</g>
<g >
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (24 samples, 2.55%)</title><rect x="828.5" y="100" width="30.1" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="831.47" y="110.5" >G1..</text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (2 samples, 0.21%)</title><rect x="276.1" y="116" width="2.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="279.13" y="126.5" ></text>
</g>
<g >
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (5 samples, 0.53%)</title><rect x="664.0" y="180" width="6.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="667.02" y="190.5" ></text>
</g>
<g >
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.21%)</title><rect x="826.0" y="148" width="2.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="828.96" y="158.5" ></text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (6 samples, 0.64%)</title><rect x="454.4" y="84" width="7.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="457.38" y="94.5" ></text>
</g>
<g >
<title>FileSystemLeafSnapshot.accept (2 samples, 0.21%)</title><rect x="788.3" y="196" width="2.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="791.30" y="206.5" ></text>
</g>
<g >
<title>G1RebuildRemSetTask::work(unsigned int) (27 samples, 2.87%)</title><rect x="955.3" y="100" width="33.8" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="958.26" y="110.5" >G1..</text>
</g>
<g >
<title>CachingDirectedGraphWalker.findValues (2 samples, 0.21%)</title><rect x="744.4" y="756" width="2.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="747.36" y="766.5" ></text>
</g>
<g >
<title>DefaultBuildLifecycleController$$Lambda$.run (2 samples, 0.21%)</title><rect x="97.9" y="580" width="2.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="100.87" y="590.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="718.0" y="164" width="2.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="721.00" y="174.5" ></text>
</g>
<g >
<title>AbstractPipeline.evaluate (2 samples, 0.21%)</title><rect x="744.4" y="276" width="2.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="747.36" y="286.5" ></text>
</g>
<g >
<title>GangWorker::loop() (19 samples, 2.02%)</title><rect x="518.4" y="164" width="23.9" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="521.40" y="174.5" >G..</text>
</g>
<g >
<title>DefaultConfiguration$ConfigurationFileCollection.visitDependencies (2 samples, 0.21%)</title><rect x="744.4" y="692" width="2.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="747.36" y="702.5" ></text>
</g>
<g >
<title>DefaultProjectStateRegistry$CalculatedModelValueImpl.update (2 samples, 0.21%)</title><rect x="744.4" y="628" width="2.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="747.36" y="638.5" ></text>
</g>
<g >
<title>Thread*) (3 samples, 0.32%)</title><rect x="731.8" y="180" width="3.8" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="734.81" y="190.5" ></text>
</g>
<g >
<title>DefaultMutationGuard.removeThreadLocalStateIfMutationAllowed (2 samples, 0.21%)</title><rect x="177.0" y="52" width="2.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="179.96" y="62.5" ></text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (7 samples, 0.74%)</title><rect x="248.5" y="116" width="8.8" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="251.51" y="126.5" ></text>
</g>
<g >
<title>G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (3 samples, 0.32%)</title><rect x="765.7" y="68" width="3.8" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="768.70" y="78.5" ></text>
</g>
<g >
<title>GangWorker::loop() (5 samples, 0.53%)</title><rect x="413.0" y="148" width="6.2" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="415.96" y="158.5" ></text>
</g>
<g >
<title>SkipEmptyWorkStep.lambda$fingerprintPrimaryInputs$2 (2 samples, 0.21%)</title><rect x="788.3" y="2708" width="2.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="791.30" y="2718.5" ></text>
</g>
<g >
<title>DefaultSynchronizer.withLock (2 samples, 0.21%)</title><rect x="97.9" y="932" width="2.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="100.87" y="942.5" ></text>
</g>
<g >
<title>CompositeFileCollection.lambda$visitContents$0 (2 samples, 0.21%)</title><rect x="788.3" y="1924" width="2.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="791.30" y="1934.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="336.4" y="116" width="2.5" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="339.38" y="126.5" ></text>
</g>
<g >
<title>ExecuteBuild.doBuild (2 samples, 0.21%)</title><rect x="97.9" y="1476" width="2.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="100.87" y="1486.5" ></text>
</g>
<g >
<title>ForwardClientInput.execute (2 samples, 0.21%)</title><rect x="744.4" y="2564" width="2.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="747.36" y="2574.5" ></text>
</g>
<g >
<title>BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply (2 samples, 0.21%)</title><rect x="97.9" y="1380" width="2.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="100.87" y="1390.5" ></text>
</g>
<g >
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (24 samples, 2.55%)</title><rect x="828.5" y="148" width="30.1" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="831.47" y="158.5" >G1..</text>
</g>
<g >
<title>StateTransitionController$$Lambda$.get (2 samples, 0.21%)</title><rect x="744.4" y="1780" width="2.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="747.36" y="1790.5" ></text>
</g>
<g >
<title>Thread*) (15 samples, 1.60%)</title><rect x="549.8" y="148" width="18.8" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="552.79" y="158.5" ></text>
</g>
<g >
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.21%)</title><rect x="718.0" y="132" width="2.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="721.00" y="142.5" ></text>
</g>
<g >
<title>LocalCache$Segment.get (2 samples, 0.21%)</title><rect x="790.8" y="196" width="2.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="793.81" y="206.5" ></text>
</g>
<g >
<title>DefaultBuildLifecycleController.populateWorkGraph (2 samples, 0.21%)</title><rect x="744.4" y="1492" width="2.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="747.36" y="1502.5" ></text>
</g>
<g >
<title>RequestStopIfSingleUsedDaemon.execute (2 samples, 0.21%)</title><rect x="97.9" y="1588" width="2.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="100.87" y="1598.5" ></text>
</g>
<g >
<title>FileCollectionBackedFileTree$1.visitFileTree (2 samples, 0.21%)</title><rect x="788.3" y="1988" width="2.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="791.30" y="1998.5" ></text>
</g>
<g >
<title>AndSpec.isSatisfiedBy (2 samples, 0.21%)</title><rect x="784.5" y="148" width="2.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="787.53" y="158.5" ></text>
</g>
<g >
<title>G1ParTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="826.0" y="180" width="2.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="828.96" y="190.5" ></text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1ConcurrentRefineOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*) (2 samples, 0.21%)</title><rect x="991.7" y="68" width="2.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="994.66" y="78.5" ></text>
</g>
<g >
<title>Swapper.swap (2 samples, 0.21%)</title><rect x="744.4" y="2548" width="2.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="747.36" y="2558.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp$OfRef.accept (2 samples, 0.21%)</title><rect x="788.3" y="436" width="2.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="791.30" y="446.5" ></text>
</g>
<g >
<title>DefaultWorkerLeaseService.withLocks (2 samples, 0.21%)</title><rect x="744.4" y="2196" width="2.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="747.36" y="2206.5" ></text>
</g>
<g >
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.21%)</title><rect x="859.9" y="116" width="2.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="862.85" y="126.5" ></text>
</g>
<g >
<title>G1CMTask::drain_local_queue(bool) [clone .part.158] (2 samples, 0.21%)</title><rect x="257.3" y="116" width="2.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="260.30" y="126.5" ></text>
</g>
<g >
<title>SkipOnlyIfTaskExecuter.execute (2 samples, 0.21%)</title><rect x="1064.5" y="788" width="2.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="1067.47" y="798.5" ></text>
</g>
<g >
<title>ExecutorPolicy$CatchAndRecordFailures.onExecute (2 samples, 0.21%)</title><rect x="1064.5" y="1012" width="2.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="1067.47" y="1022.5" ></text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (5 samples, 0.53%)</title><rect x="241.0" y="132" width="6.3" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="243.98" y="142.5" ></text>
</g>
<g >
<title>Gradle infrastructure (2 samples, 0.21%)</title><rect x="1064.5" y="852" width="2.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="1067.47" y="862.5" ></text>
</g>
<g >
<title>StateTransitionController$$Lambda$.get (2 samples, 0.21%)</title><rect x="744.4" y="1172" width="2.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="747.36" y="1182.5" ></text>
</g>
<g >
<title>DefaultConfiguration.hasSameAttributesAs (2 samples, 0.21%)</title><rect x="744.4" y="100" width="2.5" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="747.36" y="110.5" ></text>
</g>
<g >
<title>StateTransitionController$$Lambda$.run (2 samples, 0.21%)</title><rect x="97.9" y="484" width="2.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="100.87" y="494.5" ></text>
</g>
<g >
<title>DefaultExecutionPlan.addEntryTasks (2 samples, 0.21%)</title><rect x="744.4" y="852" width="2.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="747.36" y="862.5" ></text>
</g>
<g >
<title>DefaultProjectStateRegistry$ProjectStateImpl.lambda$applyToMutableState$0 (2 samples, 0.21%)</title><rect x="97.9" y="164" width="2.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="100.87" y="174.5" ></text>
</g>
<g >
<title>AbstractNamedDomainObjectContainer.create (2 samples, 0.21%)</title><rect x="213.4" y="340" width="2.5" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="216.36" y="350.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (7 samples, 0.74%)</title><rect x="248.5" y="148" width="8.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="251.51" y="158.5" ></text>
</g>
<g >
<title>ManagedExecutorImpl$1.run (2 samples, 0.21%)</title><rect x="1064.5" y="1028" width="2.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="1067.47" y="1038.5" ></text>
</g>
<g >
<title>HashMap.putVal (2 samples, 0.21%)</title><rect x="695.4" y="68" width="2.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="698.40" y="78.5" ></text>
</g>
<g >
<title>BuildCommandOnly.execute (2 samples, 0.21%)</title><rect x="97.9" y="1780" width="2.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="100.87" y="1790.5" ></text>
</g>
<g >
<title>Gradle infrastructure (2 samples, 0.21%)</title><rect x="1166.1" y="212" width="2.6" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1169.15" y="222.5" ></text>
</g>
<g >
<title>DaemonCommandExecution.proceed (2 samples, 0.21%)</title><rect x="97.9" y="1748" width="2.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="100.87" y="1758.5" ></text>
</g>
<g >
<title>TaskExecution$4.withWorkspace (2 samples, 0.21%)</title><rect x="1064.5" y="612" width="2.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="1067.47" y="622.5" ></text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (24 samples, 2.55%)</title><rect x="869.9" y="52" width="30.1" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="872.89" y="62.5" >Oo..</text>
</g>
<g >
<title>DelegatingDomainObjectSet.add (2 samples, 0.21%)</title><rect x="1166.1" y="148" width="2.6" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="1169.15" y="158.5" ></text>
</g>
<g >
<title>ReferencePipeline$3$1.accept (2 samples, 0.21%)</title><rect x="788.3" y="452" width="2.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="791.30" y="462.5" ></text>
</g>
<g >
<title>CaptureStateBeforeExecutionStep.captureExecutionState (2 samples, 0.21%)</title><rect x="207.1" y="196" width="2.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="210.09" y="206.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="862.4" y="180" width="2.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="865.36" y="190.5" ></text>
</g>
<g >
<title>BuildTreeLifecycleBuildActionExecutor.execute (2 samples, 0.21%)</title><rect x="97.9" y="1220" width="2.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="100.87" y="1230.5" ></text>
</g>
<g >
<title>Thread*) (3 samples, 0.32%)</title><rect x="869.9" y="148" width="3.8" height="15.0" fill="rgb(206,60,60)" rx="2" ry="2" />
<text  x="872.89" y="158.5" ></text>
</g>
<g >
<title>BuildCommandOnly.execute (2 samples, 0.21%)</title><rect x="744.4" y="2644" width="2.5" height="15.0" fill="rgb(59,209,59)" rx="2" ry="2" />
<text  x="747.36" y="2654.5" ></text>
</g>
<g >
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.21%)</title><rect x="650.2" y="132" width="2.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="653.21" y="142.5" ></text>
</g>
<g >
<title>JavaPlugin.apply (2 samples, 0.21%)</title><rect x="1166.1" y="196" width="2.6" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1169.15" y="206.5" ></text>
</g>
<g >
<title>ExecuteBuild.doBuild (2 samples, 0.21%)</title><rect x="744.4" y="2388" width="2.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="747.36" y="2398.5" ></text>
</g>
<g >
<title>GangWorker::loop() (27 samples, 2.87%)</title><rect x="955.3" y="116" width="33.8" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="958.26" y="126.5" >Ga..</text>
</g>
<g >
<title>AbstractPipeline.copyInto (2 samples, 0.21%)</title><rect x="788.3" y="676" width="2.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="791.30" y="686.5" ></text>
</g>
<g >
<title>HeapRegion::oops_on_card_seq_iterate_careful&lt;false, G1ConcurrentRefineOopClosure&gt;(MemRegion, G1ConcurrentRefineOopClosure*) (3 samples, 0.32%)</title><rect x="916.3" y="68" width="3.8" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="919.34" y="78.5" ></text>
</g>
<g >
<title>ClassLoaderData::oops_do(OopClosure*, bool, bool) (5 samples, 0.53%)</title><rect x="86.6" y="52" width="6.3" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="89.57" y="62.5" ></text>
</g>
<g >
<title>PatternSetSnapshottingFilter$$Lambda$.test (2 samples, 0.21%)</title><rect x="784.5" y="180" width="2.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="787.53" y="190.5" ></text>
</g>
<g >
<title>FileCollectionBackedFileTree$2.visitFileTree (2 samples, 0.21%)</title><rect x="788.3" y="2004" width="2.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="791.30" y="2014.5" ></text>
</g>
<g >
<title>AbstractPipeline.wrapAndCopyInto (2 samples, 0.21%)</title><rect x="788.3" y="1652" width="2.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="791.30" y="1662.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (2 samples, 0.21%)</title><rect x="287.4" y="116" width="2.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="290.43" y="126.5" ></text>
</g>
<g >
<title>DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute (2 samples, 0.21%)</title><rect x="788.3" y="3156" width="2.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="791.30" y="3166.5" ></text>
</g>
<g >
<title>ThreadLocal$ThreadLocalMap.&lt;init&gt; (2 samples, 0.21%)</title><rect x="1094.6" y="52" width="2.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="1097.60" y="62.5" ></text>
</g>
<g >
<title>BuildCommandOnly.execute (2 samples, 0.21%)</title><rect x="97.9" y="1492" width="2.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="100.87" y="1502.5" ></text>
</g>
<g >
<title>ManagedExecutorImpl$1.run (2 samples, 0.21%)</title><rect x="69.0" y="164" width="2.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="72.00" y="174.5" ></text>
</g>
<g >
<title>ClientBuildEventGenerator$Enabled.accept (2 samples, 0.21%)</title><rect x="1029.3" y="68" width="2.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="1032.32" y="78.5" ></text>
</g>
<g >
<title>StartBuildOrRespondWithBusy$1.run (2 samples, 0.21%)</title><rect x="744.4" y="2724" width="2.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="747.36" y="2734.5" ></text>
</g>
<g >
<title>AbstractFileCollection.visitStructure (3 samples, 0.32%)</title><rect x="16.3" y="52" width="3.7" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="19.28" y="62.5" ></text>
</g>
<g >
<title>ThreadPoolExecutor.runWorker (2 samples, 0.21%)</title><rect x="744.4" y="2788" width="2.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="747.36" y="2798.5" ></text>
</g>
<g >
<title>HashSet.add (2 samples, 0.21%)</title><rect x="692.9" y="84" width="2.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="695.89" y="94.5" ></text>
</g>
<g >
<title>Thread::call_run() (5 samples, 0.53%)</title><rect x="413.0" y="164" width="6.2" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="415.96" y="174.5" ></text>
</g>
<g >
<title>Thread::call_run() (9 samples, 0.96%)</title><rect x="652.7" y="212" width="11.3" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="655.72" y="222.5" ></text>
</g>
<g >
<title>Thread::call_run() (36 samples, 3.83%)</title><rect x="596.2" y="116" width="45.2" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="599.23" y="126.5" >Thre..</text>
</g>
<g >
<title>start_thread (11 samples, 1.17%)</title><rect x="53.9" y="196" width="13.8" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="56.94" y="206.5" ></text>
</g>
<g >
<title>GangWorker::loop() (6 samples, 0.64%)</title><rect x="454.4" y="132" width="7.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="457.38" y="142.5" ></text>
</g>
<g >
<title>Thread*) (7 samples, 0.74%)</title><rect x="507.1" y="196" width="8.8" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="510.11" y="206.5" ></text>
</g>
<g >
<title>Gradle infrastructure (2 samples, 0.21%)</title><rect x="788.3" y="3108" width="2.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="791.30" y="3118.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="317.6" y="132" width="2.5" height="15.0" fill="rgb(245,116,116)" rx="2" ry="2" />
<text  x="320.55" y="142.5" ></text>
</g>
<g >
<title>AbstractPipeline.evaluate (2 samples, 0.21%)</title><rect x="788.3" y="740" width="2.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="791.30" y="750.5" ></text>
</g>
<g >
<title>ThreadLocal$ThreadLocalMap.set (3 samples, 0.32%)</title><rect x="1097.1" y="68" width="3.8" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="1100.11" y="78.5" ></text>
</g>
<g >
<title>TaskNameResolvingBuildConfigurationAction.configure (2 samples, 0.21%)</title><rect x="744.4" y="868" width="2.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="747.36" y="878.5" ></text>
</g>
<g >
<title>DirectorySnapshot.lambda$accept$2 (2 samples, 0.21%)</title><rect x="788.3" y="788" width="2.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="791.30" y="798.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="262.3" y="132" width="2.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="265.32" y="142.5" ></text>
</g>
<g >
<title>DefaultBuildTreeContext.execute (2 samples, 0.21%)</title><rect x="744.4" y="2068" width="2.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="747.36" y="2078.5" ></text>
</g>
<g >
<title>DefaultConfigurableFileCollection$UnresolvedItemsCollector.visitContents (2 samples, 0.21%)</title><rect x="788.3" y="2404" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="791.30" y="2414.5" ></text>
</g>
<g >
<title>RunAsWorkerThreadBuildActionExecutor.lambda$execute$0 (2 samples, 0.21%)</title><rect x="97.9" y="1252" width="2.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="100.87" y="1262.5" ></text>
</g>
<g >
<title>String.hashCode (2 samples, 0.21%)</title><rect x="1082.0" y="68" width="2.6" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1085.04" y="78.5" ></text>
</g>
<g >
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.21%)</title><rect x="769.5" y="84" width="2.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="772.47" y="94.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (6 samples, 0.64%)</title><rect x="454.4" y="116" width="7.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="457.38" y="126.5" ></text>
</g>
<g >
<title>GangWorker::loop() (5 samples, 0.53%)</title><rect x="664.0" y="212" width="6.3" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="667.02" y="222.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="818.4" y="100" width="2.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="821.43" y="110.5" ></text>
</g>
<g >
<title>DefaultInputFingerprinter$InputCollectingVisitor.visitInputFileProperty (2 samples, 0.21%)</title><rect x="788.3" y="2660" width="2.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="791.30" y="2670.5" ></text>
</g>
<g >
<title>start_thread (4 samples, 0.43%)</title><rect x="421.7" y="196" width="5.1" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="424.74" y="206.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="859.9" y="212" width="2.5" height="15.0" fill="rgb(248,121,121)" rx="2" ry="2" />
<text  x="862.85" y="222.5" ></text>
</g>
<g >
<title>DefaultConfiguration$SelectedArtifactsProvider.getTaskDependencyValue (2 samples, 0.21%)</title><rect x="744.4" y="676" width="2.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="747.36" y="686.5" ></text>
</g>
<g >
<title>DefaultBuildLifecycleController.lambda$populateWorkGraph$4 (2 samples, 0.21%)</title><rect x="744.4" y="1300" width="2.5" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="747.36" y="1310.5" ></text>
</g>
<g >
<title>DirectorySnapshot$$Lambda$.accept (2 samples, 0.21%)</title><rect x="788.3" y="1380" width="2.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="791.30" y="1390.5" ></text>
</g>
<g >
<title>ImmutableActionSet$SetWithManyActions.unpackInto (2 samples, 0.21%)</title><rect x="749.4" y="116" width="2.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="752.38" y="126.5" ></text>
</g>
<g >
<title>CaptureStateBeforeExecutionStep$$Lambda$.accept (2 samples, 0.21%)</title><rect x="207.1" y="100" width="2.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="210.09" y="110.5" ></text>
</g>
<g >
<title>UnpackingVisitor.add (2 samples, 0.21%)</title><rect x="305.0" y="244" width="2.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="308.00" y="254.5" ></text>
</g>
<g >
<title>G1CMTask::drain_local_queue(bool) [clone .part.158] (6 samples, 0.64%)</title><rect x="902.5" y="84" width="7.6" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="905.53" y="94.5" ></text>
</g>
<g >
<title>CaptureStateBeforeExecutionStep$$Lambda$.apply (2 samples, 0.21%)</title><rect x="207.1" y="228" width="2.5" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="210.09" y="238.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="826.0" y="228" width="2.5" height="15.0" fill="rgb(248,121,121)" rx="2" ry="2" />
<text  x="828.96" y="238.5" ></text>
</g>
<g >
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.32%)</title><rect x="864.9" y="68" width="3.7" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="867.87" y="78.5" ></text>
</g>
<g >
<title>DefaultConfigurationContainer.newConfiguration (2 samples, 0.21%)</title><rect x="215.9" y="132" width="2.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="218.87" y="142.5" ></text>
</g>
<g >
<title>StateTransitionController.lambda$doTransition$12 (2 samples, 0.21%)</title><rect x="97.9" y="596" width="2.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="100.87" y="606.5" ></text>
</g>
<g >
<title>ThreadLocal.get (2 samples, 0.21%)</title><rect x="1094.6" y="100" width="2.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="1097.60" y="110.5" ></text>
</g>
<g >
<title>G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (16 samples, 1.70%)</title><rect x="228.4" y="100" width="20.1" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="231.43" y="110.5" ></text>
</g>
<g >
<title>Gradle infrastructure (2 samples, 0.21%)</title><rect x="744.4" y="1604" width="2.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="747.36" y="1614.5" ></text>
</g>
<g >
<title>AbstractPipeline.copyInto (2 samples, 0.21%)</title><rect x="788.3" y="868" width="2.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="791.30" y="878.5" ></text>
</g>
<g >
<title>HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (2 samples, 0.21%)</title><rect x="650.2" y="84" width="2.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="653.21" y="94.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp.evaluateSequential (2 samples, 0.21%)</title><rect x="788.3" y="900" width="2.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="791.30" y="910.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="1015.5" y="180" width="2.5" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="1018.51" y="190.5" ></text>
</g>
<g >
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (7 samples, 0.74%)</title><rect x="705.4" y="148" width="8.8" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="708.45" y="158.5" ></text>
</g>
<g >
<title>Gradle infrastructure (2 samples, 0.21%)</title><rect x="1166.1" y="244" width="2.6" height="15.0" fill="rgb(84,232,84)" rx="2" ry="2" />
<text  x="1169.15" y="254.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp$OfRef.evaluateSequential (2 samples, 0.21%)</title><rect x="744.4" y="260" width="2.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="747.36" y="270.5" ></text>
</g>
<g >
<title>DefaultServiceRegistry.find (2 samples, 0.21%)</title><rect x="192.0" y="132" width="2.5" height="15.0" fill="rgb(95,242,95)" rx="2" ry="2" />
<text  x="195.02" y="142.5" ></text>
</g>
<g >
<title>Thread::call_run() (7 samples, 0.74%)</title><rect x="507.1" y="180" width="8.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="510.11" y="190.5" ></text>
</g>
<g >
<title>VintageBuildModelController.lambda$prepareProjects$3 (2 samples, 0.21%)</title><rect x="97.9" y="388" width="2.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="100.87" y="398.5" ></text>
</g>
<g >
<title>G1CMTask::drain_local_queue(bool) [clone .part.158] (2 samples, 0.21%)</title><rect x="276.1" y="84" width="2.5" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="279.13" y="94.5" ></text>
</g>
<g >
<title>DefaultPlanExecutor$ExecutorWorker.execute (2 samples, 0.21%)</title><rect x="788.3" y="3220" width="2.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="791.30" y="3230.5" ></text>
</g>
<g >
<title>G1ParTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="282.4" y="132" width="2.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="285.40" y="142.5" ></text>
</g>
<g >
<title>ReferencePipeline$3$1.accept (2 samples, 0.21%)</title><rect x="788.3" y="1220" width="2.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="791.30" y="1230.5" ></text>
</g>
<g >
<title>EventFiringTaskExecuter$1.call (2 samples, 0.21%)</title><rect x="207.1" y="612" width="2.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="210.09" y="622.5" ></text>
</g>
<g >
<title>AbstractOpaqueFileCollection.iterator (2 samples, 0.21%)</title><rect x="305.0" y="132" width="2.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="308.00" y="142.5" ></text>
</g>
<g >
<title>DefaultBuildTreeWorkPreparer$$Lambda$.accept (2 samples, 0.21%)</title><rect x="744.4" y="1572" width="2.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="747.36" y="1582.5" ></text>
</g>
<g >
<title>StateTransitionController$$Lambda$.create (2 samples, 0.21%)</title><rect x="744.4" y="1204" width="2.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="747.36" y="1214.5" ></text>
</g>
<g >
<title>HashMap.put (2 samples, 0.21%)</title><rect x="690.4" y="84" width="2.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="693.38" y="94.5" ></text>
</g>
<g >
<title>DefaultInputFingerprinter.fingerprintInputProperties (2 samples, 0.21%)</title><rect x="207.1" y="116" width="2.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="210.09" y="126.5" ></text>
</g>
<g >
<title>G1RebuildRemSetTask::work(unsigned int) (15 samples, 1.60%)</title><rect x="549.8" y="100" width="18.8" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="552.79" y="110.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp.evaluateSequential (2 samples, 0.21%)</title><rect x="788.3" y="324" width="2.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="791.30" y="334.5" ></text>
</g>
<g >
<title>G1ParTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="714.2" y="196" width="2.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="717.23" y="206.5" ></text>
</g>
<g >
<title>DefaultServiceRegistry$ParentServices.getService (2 samples, 0.21%)</title><rect x="194.5" y="52" width="2.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="197.53" y="62.5" ></text>
</g>
<g >
<title>LocalCache$Segment.runLockedCleanup (2 samples, 0.21%)</title><rect x="790.8" y="148" width="2.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="793.81" y="158.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="282.4" y="196" width="2.5" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="285.40" y="206.5" ></text>
</g>
<g >
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (7 samples, 0.74%)</title><rect x="723.0" y="84" width="8.8" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="726.02" y="94.5" ></text>
</g>
<g >
<title>StateTransitionController.lambda$transition$7 (2 samples, 0.21%)</title><rect x="744.4" y="1812" width="2.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="747.36" y="1822.5" ></text>
</g>
<g >
<title>DaemonCommandExecution.proceed (2 samples, 0.21%)</title><rect x="744.4" y="2420" width="2.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="747.36" y="2430.5" ></text>
</g>
<g >
<title>AbstractNamedDomainObjectContainer.create (2 samples, 0.21%)</title><rect x="213.4" y="308" width="2.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="216.36" y="318.5" ></text>
</g>
<g >
<title>DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute (2 samples, 0.21%)</title><rect x="1064.5" y="900" width="2.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="1067.47" y="910.5" ></text>
</g>
<g >
<title>Thread.run (2 samples, 0.21%)</title><rect x="97.9" y="1908" width="2.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="100.87" y="1918.5" ></text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (4 samples, 0.43%)</title><rect x="340.1" y="132" width="5.1" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="343.15" y="142.5" ></text>
</g>
<g >
<title>ExecuteActionsTaskExecuter.executeIfValid (2 samples, 0.21%)</title><rect x="788.3" y="2948" width="2.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="791.30" y="2958.5" ></text>
</g>
<g >
<title>VintageBuildModelController$$Lambda$.run (2 samples, 0.21%)</title><rect x="744.4" y="1140" width="2.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="747.36" y="1150.5" ></text>
</g>
<g >
<title>UnpackingVisitor.add (2 samples, 0.21%)</title><rect x="788.3" y="2388" width="2.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="791.30" y="2398.5" ></text>
</g>
<g >
<title>DefaultProjectStateRegistry$ProjectStateImpl$$Lambda$.create (2 samples, 0.21%)</title><rect x="97.9" y="212" width="2.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="100.87" y="222.5" ></text>
</g>
<g >
<title>ResolveCachingStateStep.execute (2 samples, 0.21%)</title><rect x="1064.5" y="452" width="2.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="1067.47" y="462.5" ></text>
</g>
<g >
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (19 samples, 2.02%)</title><rect x="518.4" y="100" width="23.9" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="521.40" y="110.5" >G..</text>
</g>
<g >
<title>DefaultProjectsPreparer.prepareProjects (2 samples, 0.21%)</title><rect x="97.9" y="340" width="2.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="100.87" y="350.5" ></text>
</g>
<g >
<title>ReferencePipeline.forEach (2 samples, 0.21%)</title><rect x="788.3" y="948" width="2.5" height="15.0" fill="rgb(53,203,53)" rx="2" ry="2" />
<text  x="791.30" y="958.5" ></text>
</g>
<g >
<title>Streams$StreamBuilderImpl.forEachRemaining (2 samples, 0.21%)</title><rect x="788.3" y="1428" width="2.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="791.30" y="1438.5" ></text>
</g>
<g >
<title>Thread*) (5 samples, 0.53%)</title><rect x="902.5" y="180" width="6.3" height="15.0" fill="rgb(209,63,63)" rx="2" ry="2" />
<text  x="905.53" y="190.5" ></text>
</g>
<g >
<title>RunAsWorkerThreadBuildActionExecutor$$Lambda$.create (2 samples, 0.21%)</title><rect x="97.9" y="1268" width="2.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="100.87" y="1278.5" ></text>
</g>
<g >
<title>CFGEdge**, CFGEdge**) (2 samples, 0.21%)</title><rect x="72.8" y="52" width="2.5" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="75.77" y="62.5" ></text>
</g>
<g >
<title>ProblemReportingBuildActionRunner.run (2 samples, 0.21%)</title><rect x="744.4" y="1940" width="2.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="747.36" y="1950.5" ></text>
</g>
<g >
<title>BuildTreeState.run (2 samples, 0.21%)</title><rect x="97.9" y="1204" width="2.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="100.87" y="1214.5" ></text>
</g>
<g >
<title>ResolveChangesStep$$Lambda$.apply (2 samples, 0.21%)</title><rect x="1064.5" y="388" width="2.5" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="1067.47" y="398.5" ></text>
</g>
<g >
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (4 samples, 0.43%)</title><rect x="645.2" y="116" width="5.0" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="648.19" y="126.5" ></text>
</g>
<g >
<title>ChildMap$Entry.handleAncestorDescendantOrExactMatch (2 samples, 0.21%)</title><rect x="1123.5" y="68" width="2.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1126.47" y="78.5" ></text>
</g>
<g >
<title>BuildCommandOnly.execute (2 samples, 0.21%)</title><rect x="744.4" y="2692" width="2.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="747.36" y="2702.5" ></text>
</g>
<g >
<title>DefaultLocalComponentMetadataBuilder.addConfiguration (2 samples, 0.21%)</title><rect x="744.4" y="356" width="2.5" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="747.36" y="366.5" ></text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (2 samples, 0.21%)</title><rect x="650.2" y="68" width="2.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="653.21" y="78.5" ></text>
</g>
<g >
<title>DefaultBuildLifecycleController$$Lambda$.run (2 samples, 0.21%)</title><rect x="744.4" y="1380" width="2.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="747.36" y="1390.5" ></text>
</g>
<g >
<title>DefaultUserCodeApplicationContext.apply (2 samples, 0.21%)</title><rect x="1166.1" y="292" width="2.6" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="1169.15" y="302.5" ></text>
</g>
<g >
<title>CompositeFileCollection.visitContents (2 samples, 0.21%)</title><rect x="788.3" y="2324" width="2.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="791.30" y="2334.5" ></text>
</g>
<g >
<title>ImmutableSet$RegularSetBuilderImpl.add (2 samples, 0.21%)</title><rect x="753.1" y="84" width="2.6" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="756.15" y="94.5" ></text>
</g>
<g >
<title>ConcurrentHashMap.putVal (2 samples, 0.21%)</title><rect x="126.7" y="52" width="2.6" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="129.74" y="62.5" ></text>
</g>
<g >
<title>SkipOnlyIfTaskExecuter.execute (2 samples, 0.21%)</title><rect x="207.1" y="564" width="2.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="210.09" y="574.5" ></text>
</g>
<g >
<title>DefaultConfigurableFileCollection.visitChildren (2 samples, 0.21%)</title><rect x="788.3" y="2420" width="2.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="791.30" y="2430.5" ></text>
</g>
<g >
<title>ImmutableCollection$Builder.addAll (2 samples, 0.21%)</title><rect x="749.4" y="84" width="2.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="752.38" y="94.5" ></text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (59 samples, 6.28%)</title><rect x="345.2" y="68" width="74.0" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="348.17" y="78.5" >OopOopIt..</text>
</g>
<g >
<title>ResolveChangesStep.execute (2 samples, 0.21%)</title><rect x="1064.5" y="420" width="2.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="1067.47" y="430.5" ></text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (5 samples, 0.53%)</title><rect x="910.1" y="84" width="6.2" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="913.06" y="94.5" ></text>
</g>
<g >
<title>start_thread (36 samples, 3.83%)</title><rect x="596.2" y="148" width="45.2" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="599.23" y="158.5" >star..</text>
</g>
<g >
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (4 samples, 0.43%)</title><rect x="645.2" y="100" width="5.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="648.19" y="110.5" ></text>
</g>
<g >
<title>BuildSessionState.run (2 samples, 0.21%)</title><rect x="744.4" y="2308" width="2.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="747.36" y="2318.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (5 samples, 0.53%)</title><rect x="902.5" y="116" width="6.3" height="15.0" fill="rgb(183,183,52)" rx="2" ry="2" />
<text  x="905.53" y="126.5" ></text>
</g>
<g >
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (11 samples, 1.17%)</title><rect x="53.9" y="100" width="13.8" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="56.94" y="110.5" ></text>
</g>
<g >
<title>StateTransitionController.doTransition (2 samples, 0.21%)</title><rect x="97.9" y="628" width="2.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="100.87" y="638.5" ></text>
</g>
<g >
<title>G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (21 samples, 2.23%)</title><rect x="438.1" y="52" width="26.3" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="441.06" y="62.5" >G..</text>
</g>
<g >
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (2 samples, 0.21%)</title><rect x="650.2" y="100" width="2.5" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="653.21" y="110.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="765.7" y="164" width="2.5" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="768.70" y="174.5" ></text>
</g>
<g >
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (2 samples, 0.21%)</title><rect x="308.8" y="52" width="2.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="311.77" y="62.5" ></text>
</g>
<g >
<title>ForwardClientInput$2.create (2 samples, 0.21%)</title><rect x="744.4" y="2532" width="2.5" height="15.0" fill="rgb(71,219,71)" rx="2" ry="2" />
<text  x="747.36" y="2542.5" ></text>
</g>
<g >
<title>DaemonCommandExecution.proceed (2 samples, 0.21%)</title><rect x="97.9" y="1796" width="2.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="100.87" y="1806.5" ></text>
</g>
<g >
<title>LogAndCheckHealth.execute (2 samples, 0.21%)</title><rect x="744.4" y="2596" width="2.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="747.36" y="2606.5" ></text>
</g>
<g >
<title>StateTransitionController.lambda$inState$2 (2 samples, 0.21%)</title><rect x="744.4" y="1188" width="2.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="747.36" y="1198.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (2 samples, 0.21%)</title><rect x="435.6" y="116" width="2.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="438.55" y="126.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (4 samples, 0.43%)</title><rect x="340.1" y="148" width="5.1" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="343.15" y="158.5" ></text>
</g>
<g >
<title>AbstractNestedRuntimeBeanNode$BeanPropertyValue$1.get (2 samples, 0.21%)</title><rect x="1136.0" y="100" width="2.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="1139.02" y="110.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="1069.5" y="164" width="2.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="1072.49" y="174.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="332.6" y="148" width="2.5" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="335.62" y="158.5" ></text>
</g>
<g >
<title>DefaultConfigurationContainer.doCreate (2 samples, 0.21%)</title><rect x="213.4" y="292" width="2.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="216.36" y="302.5" ></text>
</g>
<g >
<title>ErrorHandlingConfigurationResolver.resolveBuildDependencies (2 samples, 0.21%)</title><rect x="744.4" y="580" width="2.5" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="747.36" y="590.5" ></text>
</g>
<g >
<title>StateTransitionController$$Lambda$.get (2 samples, 0.21%)</title><rect x="97.9" y="868" width="2.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="100.87" y="878.5" ></text>
</g>
<g >
<title>Thread*) (15 samples, 1.60%)</title><rect x="921.4" y="148" width="18.8" height="15.0" fill="rgb(249,121,121)" rx="2" ry="2" />
<text  x="924.36" y="158.5" ></text>
</g>
<g >
<title>ValidateStep.execute (2 samples, 0.21%)</title><rect x="1064.5" y="468" width="2.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="1067.47" y="478.5" ></text>
</g>
<g >
<title>start_thread (27 samples, 2.87%)</title><rect x="955.3" y="164" width="33.8" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="958.26" y="174.5" >st..</text>
</g>
<g >
<title>AssignWorkspaceStep.lambda$execute$0 (2 samples, 0.21%)</title><rect x="1064.5" y="580" width="2.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="1067.47" y="590.5" ></text>
</g>
<g >
<title>DefaultConfiguration$$Lambda$.accept (2 samples, 0.21%)</title><rect x="744.4" y="132" width="2.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="747.36" y="142.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="287.4" y="196" width="2.5" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="290.43" y="206.5" ></text>
</g>
<g >
<title>DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long) (2 samples, 0.21%)</title><rect x="308.8" y="100" width="2.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="311.77" y="110.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="276.1" y="180" width="2.5" height="15.0" fill="rgb(214,71,71)" rx="2" ry="2" />
<text  x="279.13" y="190.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp.evaluateSequential (2 samples, 0.21%)</title><rect x="744.4" y="244" width="2.5" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="747.36" y="254.5" ></text>
</g>
<g >
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (6 samples, 0.64%)</title><rect x="946.5" y="100" width="7.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="949.47" y="110.5" ></text>
</g>
<g >
<title>ResolveTaskExecutionModeExecuter.execute (2 samples, 0.21%)</title><rect x="1064.5" y="756" width="2.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1067.47" y="766.5" ></text>
</g>
<g >
<title>DefaultServiceRegistry$OwnServices.getService (2 samples, 0.21%)</title><rect x="192.0" y="100" width="2.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="195.02" y="110.5" ></text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceRefKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (2 samples, 0.21%)</title><rect x="419.2" y="68" width="2.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="422.23" y="78.5" ></text>
</g>
<g >
<title>Thread::call_run() (7 samples, 0.74%)</title><rect x="248.5" y="180" width="8.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="251.51" y="190.5" ></text>
</g>
<g >
<title>StateTransitionController.lambda$maybeTransition$9 (2 samples, 0.21%)</title><rect x="97.9" y="644" width="2.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="100.87" y="654.5" ></text>
</g>
<g >
<title>Desc::size() (37 samples, 3.94%)</title><rect x="220.9" y="52" width="46.4" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="223.89" y="62.5" >Desc..</text>
</g>
<g >
<title>DaemonCommandExecution.proceed (2 samples, 0.21%)</title><rect x="97.9" y="1540" width="2.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="100.87" y="1550.5" ></text>
</g>
<g >
<title>Swapper.swap (2 samples, 0.21%)</title><rect x="97.9" y="1636" width="2.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="100.87" y="1646.5" ></text>
</g>
<g >
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (9 samples, 0.96%)</title><rect x="652.7" y="148" width="11.3" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="655.72" y="158.5" ></text>
</g>
<g >
<title>Gradle infrastructure (3 samples, 0.32%)</title><rect x="1166.1" y="68" width="3.8" height="15.0" fill="rgb(102,248,102)" rx="2" ry="2" />
<text  x="1169.15" y="78.5" ></text>
</g>
<g >
<title>start_thread (15 samples, 1.60%)</title><rect x="549.8" y="164" width="18.8" height="15.0" fill="rgb(202,53,53)" rx="2" ry="2" />
<text  x="552.79" y="174.5" ></text>
</g>
<g >
<title>LocalCache$StrongAccessEntry.setNextInAccessQueue (2 samples, 0.21%)</title><rect x="790.8" y="52" width="2.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="793.81" y="62.5" ></text>
</g>
<g >
<title>Thread::call_run() (15 samples, 1.60%)</title><rect x="995.4" y="148" width="18.9" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="998.43" y="158.5" ></text>
</g>
<g >
<title>LogAndCheckHealth.execute (2 samples, 0.21%)</title><rect x="97.9" y="1684" width="2.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="100.87" y="1694.5" ></text>
</g>
<g >
<title>G1ParTask::work(unsigned int) (7 samples, 0.74%)</title><rect x="723.0" y="164" width="8.8" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="726.02" y="174.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp$OfRef.accept (2 samples, 0.21%)</title><rect x="788.3" y="820" width="2.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="791.30" y="830.5" ></text>
</g>
<g >
<title>CleanupStaleOutputsExecuter.execute (2 samples, 0.21%)</title><rect x="207.1" y="500" width="2.5" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="210.09" y="510.5" ></text>
</g>
<g >
<title>CompositeFileCollection$$Lambda$.accept (2 samples, 0.21%)</title><rect x="788.3" y="2100" width="2.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="791.30" y="2110.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="451.9" y="100" width="2.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="454.87" y="110.5" ></text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (20 samples, 2.13%)</title><rect x="568.6" y="68" width="25.1" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="571.62" y="78.5" >O..</text>
</g>
<g >
<title>G1ParScanThreadState::trim_queue_partially() (38 samples, 4.04%)</title><rect x="468.2" y="68" width="47.7" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="471.19" y="78.5" >G1Pa..</text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (5 samples, 0.53%)</title><rect x="413.0" y="132" width="6.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="415.96" y="142.5" ></text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (5 samples, 0.53%)</title><rect x="893.7" y="100" width="6.3" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="896.74" y="110.5" ></text>
</g>
<g >
<title>start_thread (4 samples, 0.43%)</title><rect x="645.2" y="228" width="5.0" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="648.19" y="238.5" ></text>
</g>
<g >
<title>DefaultBuildConfigurationActionExecuter.access$000 (2 samples, 0.21%)</title><rect x="744.4" y="900" width="2.5" height="15.0" fill="rgb(76,223,76)" rx="2" ry="2" />
<text  x="747.36" y="910.5" ></text>
</g>
<g >
<title>ShortCircuitEmptyConfigurationResolver.resolveBuildDependencies (2 samples, 0.21%)</title><rect x="744.4" y="564" width="2.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="747.36" y="574.5" ></text>
</g>
<g >
<title>CachingTaskDependencyResolveContext$TaskGraphImpl.getNodeValues (2 samples, 0.21%)</title><rect x="744.4" y="708" width="2.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="747.36" y="718.5" ></text>
</g>
<g >
<title>Reference.&lt;init&gt; (2 samples, 0.21%)</title><rect x="1038.1" y="52" width="2.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="1041.11" y="62.5" ></text>
</g>
<g >
<title>ThreadLocal.createMap (2 samples, 0.21%)</title><rect x="1094.6" y="68" width="2.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1097.60" y="78.5" ></text>
</g>
<g >
<title>SkipEmptyWorkStep.executeWithNoEmptySources (2 samples, 0.21%)</title><rect x="1064.5" y="500" width="2.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1067.47" y="510.5" ></text>
</g>
<g >
<title>G1CMSATBBufferClosure::do_buffer(void**, unsigned long) (2 samples, 0.21%)</title><rect x="220.9" y="84" width="2.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="223.89" y="94.5" ></text>
</g>
<g >
<title>HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (2 samples, 0.21%)</title><rect x="714.2" y="84" width="2.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="717.23" y="94.5" ></text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (2 samples, 0.21%)</title><rect x="593.7" y="68" width="2.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="596.72" y="78.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp.evaluateSequential (2 samples, 0.21%)</title><rect x="788.3" y="1476" width="2.5" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="791.30" y="1486.5" ></text>
</g>
<g >
<title>DefaultBuildTreeWorkPreparer.lambda$scheduleRequestedTasks$0 (2 samples, 0.21%)</title><rect x="744.4" y="1556" width="2.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="747.36" y="1566.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp$OfRef.evaluateSequential (2 samples, 0.21%)</title><rect x="788.3" y="724" width="2.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="791.30" y="734.5" ></text>
</g>
<g >
<title>PatternSetSnapshottingFilter$$Lambda$.test (2 samples, 0.21%)</title><rect x="788.3" y="164" width="2.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="791.30" y="174.5" ></text>
</g>
<g >
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (39 samples, 4.15%)</title><rect x="468.2" y="52" width="48.9" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="471.19" y="62.5" >G1Pa..</text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="276.1" y="196" width="2.5" height="15.0" fill="rgb(204,57,57)" rx="2" ry="2" />
<text  x="279.13" y="206.5" ></text>
</g>
<g >
<title>DirectorySnapshot.lambda$accept$2 (2 samples, 0.21%)</title><rect x="788.3" y="1172" width="2.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="791.30" y="1182.5" ></text>
</g>
<g >
<title>StateTransitionController.maybeTransition (2 samples, 0.21%)</title><rect x="97.9" y="692" width="2.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="100.87" y="702.5" ></text>
</g>
<g >
<title>CompositeFileCollection.lambda$visitContents$0 (2 samples, 0.21%)</title><rect x="788.3" y="2164" width="2.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="791.30" y="2174.5" ></text>
</g>
<g >
<title>JavaLibraryPlugin.apply (2 samples, 0.21%)</title><rect x="1166.1" y="260" width="2.6" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="1169.15" y="270.5" ></text>
</g>
<g >
<title>CompiledIC&gt;(CompiledIC*, unsigned char*, CompiledMethod*, bool, bool) (3 samples, 0.32%)</title><rect x="100.4" y="68" width="3.7" height="15.0" fill="rgb(253,127,127)" rx="2" ry="2" />
<text  x="103.38" y="78.5" ></text>
</g>
<g >
<title>LogToClient.doBuild (2 samples, 0.21%)</title><rect x="744.4" y="2628" width="2.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="747.36" y="2638.5" ></text>
</g>
<g >
<title>Streams$StreamBuilderImpl.forEachRemaining (2 samples, 0.21%)</title><rect x="788.3" y="1044" width="2.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="791.30" y="1054.5" ></text>
</g>
<g >
<title>GangWorker::loop() (31 samples, 3.30%)</title><rect x="468.2" y="180" width="38.9" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="471.19" y="190.5" >Gan..</text>
</g>
<g >
<title>AbstractPipeline.copyInto (2 samples, 0.21%)</title><rect x="788.3" y="1444" width="2.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="791.30" y="1454.5" ></text>
</g>
<g >
<title>AssignWorkspaceStep$$Lambda$.executeInWorkspace (2 samples, 0.21%)</title><rect x="788.3" y="2852" width="2.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="791.30" y="2862.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (7 samples, 0.74%)</title><rect x="248.5" y="132" width="8.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="251.51" y="142.5" ></text>
</g>
<g >
<title>DirectoryFileTree.visitStructure (2 samples, 0.21%)</title><rect x="788.3" y="1876" width="2.5" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="791.30" y="1886.5" ></text>
</g>
<g >
<title>DirectorySnapshot$$Lambda$.accept (2 samples, 0.21%)</title><rect x="788.3" y="420" width="2.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="791.30" y="430.5" ></text>
</g>
<g >
<title>FileCollectionBackedFileTree.visitContents (2 samples, 0.21%)</title><rect x="788.3" y="2276" width="2.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="791.30" y="2286.5" ></text>
</g>
<g >
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (3 samples, 0.32%)</title><rect x="731.8" y="84" width="3.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="734.81" y="94.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="336.4" y="164" width="2.5" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="339.38" y="174.5" ></text>
</g>
<g >
<title>AssignWorkspaceStep$$Lambda$.executeInWorkspace (2 samples, 0.21%)</title><rect x="1064.5" y="596" width="2.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="1067.47" y="606.5" ></text>
</g>
<g >
<title>DefaultProjectStateRegistry$ProjectStateImpl.ensureConfigured (2 samples, 0.21%)</title><rect x="97.9" y="308" width="2.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="100.87" y="318.5" ></text>
</g>
<g >
<title>StartBuildOrRespondWithBusy$1.run (2 samples, 0.21%)</title><rect x="97.9" y="1812" width="2.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="100.87" y="1822.5" ></text>
</g>
<g >
<title>start_thread (9 samples, 0.96%)</title><rect x="652.7" y="244" width="11.3" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="655.72" y="254.5" ></text>
</g>
<g >
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (5 samples, 0.53%)</title><rect x="664.0" y="116" width="6.3" height="15.0" fill="rgb(180,180,52)" rx="2" ry="2" />
<text  x="667.02" y="126.5" ></text>
</g>
<g >
<title>DefaultConfiguration.ensureUniqueAttributes (2 samples, 0.21%)</title><rect x="744.4" y="308" width="2.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="747.36" y="318.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="1069.5" y="148" width="2.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="1072.49" y="158.5" ></text>
</g>
<g >
<title>G1CMTask::drain_satb_buffers() [clone .part.95] (2 samples, 0.21%)</title><rect x="220.9" y="116" width="2.5" height="15.0" fill="rgb(196,196,57)" rx="2" ry="2" />
<text  x="223.89" y="126.5" ></text>
</g>
<g >
<title>start_thread (3 samples, 0.32%)</title><rect x="731.8" y="196" width="3.8" height="15.0" fill="rgb(221,81,81)" rx="2" ry="2" />
<text  x="734.81" y="206.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (5 samples, 0.53%)</title><rect x="910.1" y="116" width="6.2" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="913.06" y="126.5" ></text>
</g>
<g >
<title>TaskDependencyResolver.resolveDependenciesFor (2 samples, 0.21%)</title><rect x="744.4" y="788" width="2.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="747.36" y="798.5" ></text>
</g>
<g >
<title>HashSet.iterator (2 samples, 0.21%)</title><rect x="682.9" y="100" width="2.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="685.85" y="110.5" ></text>
</g>
<g >
<title>G1ParTask::work(unsigned int) (7 samples, 0.74%)</title><rect x="507.1" y="148" width="8.8" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="510.11" y="158.5" ></text>
</g>
<g >
<title>DefaultBuildLifecycleController.lambda$prepareToScheduleTasks$2 (2 samples, 0.21%)</title><rect x="97.9" y="564" width="2.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="100.87" y="574.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="268.6" y="116" width="2.5" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="271.60" y="126.5" ></text>
</g>
<g >
<title>UnpackingVisitor.add (2 samples, 0.21%)</title><rect x="788.3" y="2500" width="2.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="791.30" y="2510.5" ></text>
</g>
<g >
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.21%)</title><rect x="769.5" y="164" width="2.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="772.47" y="174.5" ></text>
</g>
<g >
<title>ReferencePipeline.forEach (2 samples, 0.21%)</title><rect x="788.3" y="756" width="2.5" height="15.0" fill="rgb(100,246,100)" rx="2" ry="2" />
<text  x="791.30" y="766.5" ></text>
</g>
<g >
<title>RunAsWorkerThreadBuildActionExecutor.execute (2 samples, 0.21%)</title><rect x="97.9" y="1316" width="2.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="100.87" y="1326.5" ></text>
</g>
<g >
<title>G1CollectedHeap::heap() (2 samples, 0.21%)</title><rect x="465.7" y="52" width="2.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="468.68" y="62.5" ></text>
</g>
<g >
<title>ImmutableSet$RegularSetBuilderImpl.add (2 samples, 0.21%)</title><rect x="749.4" y="52" width="2.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="752.38" y="62.5" ></text>
</g>
<g >
<title>DependencyGraphBuilder.resolve (2 samples, 0.21%)</title><rect x="744.4" y="516" width="2.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="747.36" y="526.5" ></text>
</g>
<g >
<title>ImmutableActionSet$SingletonSet.execute (2 samples, 0.21%)</title><rect x="1166.1" y="100" width="2.6" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1169.15" y="110.5" ></text>
</g>
<g >
<title>CaptureStateBeforeExecutionStep.execute (2 samples, 0.21%)</title><rect x="1064.5" y="484" width="2.5" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="1067.47" y="494.5" ></text>
</g>
<g >
<title>DefaultServiceRegistry$SingletonService.getService (2 samples, 0.21%)</title><rect x="192.0" y="84" width="2.5" height="15.0" fill="rgb(57,207,57)" rx="2" ry="2" />
<text  x="195.02" y="94.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp$OfRef.evaluateSequential (2 samples, 0.21%)</title><rect x="788.3" y="1108" width="2.5" height="15.0" fill="rgb(81,228,81)" rx="2" ry="2" />
<text  x="791.30" y="1118.5" ></text>
</g>
<g >
<title>DefaultWorkerLeaseService.withoutLocks (2 samples, 0.21%)</title><rect x="744.4" y="1012" width="2.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="747.36" y="1022.5" ></text>
</g>
<g >
<title>DefaultWorkerLeaseService.withLocks (2 samples, 0.21%)</title><rect x="744.4" y="1060" width="2.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="747.36" y="1070.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="435.6" y="132" width="2.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="438.55" y="142.5" ></text>
</g>
<g >
<title>AbstractNamedDomainObjectContainer.create (2 samples, 0.21%)</title><rect x="215.9" y="164" width="2.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="218.87" y="174.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="451.9" y="148" width="2.5" height="15.0" fill="rgb(222,83,83)" rx="2" ry="2" />
<text  x="454.87" y="158.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="114.2" y="132" width="2.5" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="117.19" y="142.5" ></text>
</g>
<g >
<title>Thread*) (4 samples, 0.43%)</title><rect x="340.1" y="212" width="5.1" height="15.0" fill="rgb(250,124,124)" rx="2" ry="2" />
<text  x="343.15" y="222.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="311.3" y="100" width="2.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="314.28" y="110.5" ></text>
</g>
<g >
<title>dynamic invocation (2 samples, 0.21%)</title><rect x="1187.5" y="68" width="2.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1190.49" y="78.5" ></text>
</g>
<g >
<title>OtherRegionsTable::add_reference(void*, unsigned int) (12 samples, 1.28%)</title><rect x="53.9" y="68" width="15.1" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="56.94" y="78.5" ></text>
</g>
<g >
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.21%)</title><rect x="864.9" y="132" width="2.5" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="867.87" y="142.5" ></text>
</g>
<g >
<title>StateTransitionController$$Lambda$.create (2 samples, 0.21%)</title><rect x="97.9" y="916" width="2.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="100.87" y="926.5" ></text>
</g>
<g >
<title>MarkSnapshottingInputsStartedStep.execute (2 samples, 0.21%)</title><rect x="207.1" y="324" width="2.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="210.09" y="334.5" ></text>
</g>
<g >
<title>SkipEmptyWorkStep$$Lambda$.accept (2 samples, 0.21%)</title><rect x="788.3" y="2724" width="2.5" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="791.30" y="2734.5" ></text>
</g>
<g >
<title>AbstractPipeline.wrapAndCopyInto (2 samples, 0.21%)</title><rect x="788.3" y="1076" width="2.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="791.30" y="1086.5" ></text>
</g>
<g >
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (5 samples, 0.53%)</title><rect x="664.0" y="100" width="6.3" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="667.02" y="110.5" ></text>
</g>
<g >
<title>DefaultPlanExecutor$ExecutorWorker.run (2 samples, 0.21%)</title><rect x="788.3" y="3252" width="2.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="791.30" y="3262.5" ></text>
</g>
<g >
<title>G1RebuildRemSetClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) [clone .isra.234] (37 samples, 3.94%)</title><rect x="549.8" y="52" width="46.4" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="552.79" y="62.5" >G1Re..</text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="278.6" y="132" width="2.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="281.64" y="142.5" ></text>
</g>
<g >
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (24 samples, 2.55%)</title><rect x="828.5" y="116" width="30.1" height="15.0" fill="rgb(183,183,53)" rx="2" ry="2" />
<text  x="831.47" y="126.5" >Di..</text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (11 samples, 1.17%)</title><rect x="438.1" y="84" width="13.8" height="15.0" fill="rgb(188,188,55)" rx="2" ry="2" />
<text  x="441.06" y="94.5" ></text>
</g>
<g >
<title>G1ParTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="859.9" y="164" width="2.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="862.85" y="174.5" ></text>
</g>
<g >
<title>CatchExceptionTaskExecuter.execute (2 samples, 0.21%)</title><rect x="207.1" y="580" width="2.5" height="15.0" fill="rgb(57,206,57)" rx="2" ry="2" />
<text  x="210.09" y="590.5" ></text>
</g>
<g >
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (2 samples, 0.21%)</title><rect x="714.2" y="100" width="2.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="717.23" y="110.5" ></text>
</g>
<g >
<title>BuildSessionLifecycleBuildActionExecuter$ActionImpl.apply (2 samples, 0.21%)</title><rect x="744.4" y="2292" width="2.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="747.36" y="2302.5" ></text>
</g>
<g >
<title>DefaultPlanExecutor$ExecutorWorker.run (2 samples, 0.21%)</title><rect x="207.1" y="772" width="2.5" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="210.09" y="782.5" ></text>
</g>
<g >
<title>G1CMTask::drain_local_queue(bool) [clone .part.158] (4 samples, 0.43%)</title><rect x="223.4" y="132" width="5.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="226.40" y="142.5" ></text>
</g>
<g >
<title>DefaultWorkerLeaseService.runAsWorkerThread (2 samples, 0.21%)</title><rect x="744.4" y="2212" width="2.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="747.36" y="2222.5" ></text>
</g>
<g >
<title>ImmutableSet.rebuildHashTable (2 samples, 0.21%)</title><rect x="753.1" y="52" width="2.6" height="15.0" fill="rgb(93,239,93)" rx="2" ry="2" />
<text  x="756.15" y="62.5" ></text>
</g>
<g >
<title>DefaultConfiguration_Decorated.&lt;init&gt; (2 samples, 0.21%)</title><rect x="213.4" y="132" width="2.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="216.36" y="142.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="220.9" y="164" width="2.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="223.89" y="174.5" ></text>
</g>
<g >
<title>ManagedExecutorImpl$1.run (2 samples, 0.21%)</title><rect x="744.4" y="2772" width="2.5" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="747.36" y="2782.5" ></text>
</g>
<g >
<title>G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (5 samples, 0.53%)</title><rect x="287.4" y="84" width="6.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="290.43" y="94.5" ></text>
</g>
<g >
<title>Thread*) (7 samples, 0.74%)</title><rect x="705.4" y="212" width="8.8" height="15.0" fill="rgb(238,106,106)" rx="2" ry="2" />
<text  x="708.45" y="222.5" ></text>
</g>
<g >
<title>DefaultSynchronizer.withLock (2 samples, 0.21%)</title><rect x="744.4" y="1220" width="2.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="747.36" y="1230.5" ></text>
</g>
<g >
<title>G1CMTask::make_reference_grey(oopDesc*) (82 samples, 8.72%)</title><rect x="335.1" y="52" width="103.0" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="338.13" y="62.5" >G1CMTask::ma..</text>
</g>
<g >
<title>SATBMarkQueueSet::apply_closure_to_completed_buffer(SATBBufferClosure*) (2 samples, 0.21%)</title><rect x="220.9" y="100" width="2.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="223.89" y="110.5" ></text>
</g>
<g >
<title>GangWorker::loop() (20 samples, 2.13%)</title><rect x="568.6" y="132" width="25.1" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="571.62" y="142.5" >G..</text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="461.9" y="116" width="2.5" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="464.91" y="126.5" ></text>
</g>
<g >
<title>CompositeFileCollection.visitContents (2 samples, 0.21%)</title><rect x="788.3" y="2436" width="2.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="791.30" y="2446.5" ></text>
</g>
<g >
<title>DirectorySnapshot.accept (2 samples, 0.21%)</title><rect x="788.3" y="1540" width="2.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="791.30" y="1550.5" ></text>
</g>
<g >
<title>DefaultExecutionEngine$1.execute (2 samples, 0.21%)</title><rect x="788.3" y="2932" width="2.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="791.30" y="2942.5" ></text>
</g>
<g >
<title>Gradle infrastructure (2 samples, 0.21%)</title><rect x="744.4" y="2148" width="2.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="747.36" y="2158.5" ></text>
</g>
<g >
<title>Gradle infrastructure (2 samples, 0.21%)</title><rect x="97.9" y="324" width="2.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="100.87" y="334.5" ></text>
</g>
<g >
<title>G1ParTask::work(unsigned int) (5 samples, 0.53%)</title><rect x="664.0" y="196" width="6.3" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="667.02" y="206.5" ></text>
</g>
<g >
<title>G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (4 samples, 0.43%)</title><rect x="86.6" y="68" width="5.0" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="89.57" y="78.5" ></text>
</g>
<g >
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.124] (9 samples, 0.96%)</title><rect x="652.7" y="84" width="11.3" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="655.72" y="94.5" ></text>
</g>
<g >
<title>DefaultConfiguration.toRootComponentMetaData (2 samples, 0.21%)</title><rect x="744.4" y="484" width="2.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="747.36" y="494.5" ></text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1ConcurrentRefineOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*) (3 samples, 0.32%)</title><rect x="916.3" y="52" width="3.8" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="919.34" y="62.5" ></text>
</g>
<g >
<title>Optional.flatMap (2 samples, 0.21%)</title><rect x="207.1" y="244" width="2.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="210.09" y="254.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (5 samples, 0.53%)</title><rect x="910.1" y="100" width="6.2" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="913.06" y="110.5" ></text>
</g>
<g >
<title>start_thread (3 samples, 0.32%)</title><rect x="224.7" y="228" width="3.7" height="15.0" fill="rgb(237,103,103)" rx="2" ry="2" />
<text  x="227.66" y="238.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (43 samples, 4.57%)</title><rect x="345.2" y="116" width="53.9" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="348.17" y="126.5" >G1CMT..</text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="311.3" y="148" width="2.5" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="314.28" y="158.5" ></text>
</g>
<g >
<title>Thread::call_run() (3 samples, 0.32%)</title><rect x="289.9" y="180" width="3.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="292.94" y="190.5" ></text>
</g>
<g >
<title>Thread*) (5 samples, 0.53%)</title><rect x="664.0" y="244" width="6.3" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="667.02" y="254.5" ></text>
</g>
<g >
<title>DefaultProjectStateRegistry$ProjectStateImpl.lambda$withProjectLock$2 (2 samples, 0.21%)</title><rect x="97.9" y="196" width="2.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="100.87" y="206.5" ></text>
</g>
<g >
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (20 samples, 2.13%)</title><rect x="568.6" y="100" width="25.1" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="571.62" y="110.5" >H..</text>
</g>
<g >
<title>GangWorker::loop() (24 samples, 2.55%)</title><rect x="828.5" y="196" width="30.1" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="831.47" y="206.5" >Ga..</text>
</g>
<g >
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (27 samples, 2.87%)</title><rect x="955.3" y="68" width="33.8" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="958.26" y="78.5" >G1..</text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="268.6" y="148" width="2.5" height="15.0" fill="rgb(219,78,78)" rx="2" ry="2" />
<text  x="271.60" y="158.5" ></text>
</g>
<g >
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.21%)</title><rect x="859.9" y="132" width="2.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="862.85" y="142.5" ></text>
</g>
<g >
<title>Suppliers$NonSerializableMemoizingSupplier.get (2 samples, 0.21%)</title><rect x="1136.0" y="116" width="2.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="1139.02" y="126.5" ></text>
</g>
<g >
<title>CompositeFileCollection$$Lambda$.accept (2 samples, 0.21%)</title><rect x="788.3" y="2372" width="2.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="791.30" y="2382.5" ></text>
</g>
<g >
<title>CleanupStaleOutputsExecuter.execute (2 samples, 0.21%)</title><rect x="788.3" y="2980" width="2.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="791.30" y="2990.5" ></text>
</g>
<g >
<title>ImmutableSet$RegularSetBuilderImpl.ensureTableCapacity (2 samples, 0.21%)</title><rect x="753.1" y="68" width="2.6" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="756.15" y="78.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (7 samples, 0.74%)</title><rect x="323.8" y="100" width="8.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="326.83" y="110.5" ></text>
</g>
<g >
<title>FileUtils.normalize (3 samples, 0.32%)</title><rect x="303.7" y="84" width="3.8" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="306.74" y="94.5" ></text>
</g>
<g >
<title>ImmutableSet$Builder.add (2 samples, 0.21%)</title><rect x="753.1" y="100" width="2.6" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="756.15" y="110.5" ></text>
</g>
<g >
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.43%)</title><rect x="543.5" y="116" width="5.0" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="546.51" y="126.5" ></text>
</g>
<g >
<title>Thread.run (2 samples, 0.21%)</title><rect x="69.0" y="212" width="2.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="72.00" y="222.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="714.2" y="244" width="2.5" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="717.23" y="254.5" ></text>
</g>
<g >
<title>ReferencePipeline.forEach (2 samples, 0.21%)</title><rect x="788.3" y="372" width="2.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="791.30" y="382.5" ></text>
</g>
<g >
<title>JavaPlugin.addJar (2 samples, 0.21%)</title><rect x="1166.1" y="164" width="2.6" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="1169.15" y="174.5" ></text>
</g>
<g >
<title>MarkSnapshottingInputsFinishedStep.execute (2 samples, 0.21%)</title><rect x="1064.5" y="436" width="2.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="1067.47" y="446.5" ></text>
</g>
<g >
<title>Optional.map (2 samples, 0.21%)</title><rect x="788.3" y="1796" width="2.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="791.30" y="1806.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (11 samples, 1.17%)</title><rect x="438.1" y="100" width="13.8" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="441.06" y="110.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (2 samples, 0.21%)</title><rect x="311.3" y="68" width="2.5" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="314.28" y="78.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (2 samples, 0.21%)</title><rect x="765.7" y="100" width="2.5" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="768.70" y="110.5" ></text>
</g>
<g >
<title>AbstractPipeline.evaluate (2 samples, 0.21%)</title><rect x="788.3" y="1316" width="2.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="791.30" y="1326.5" ></text>
</g>
<g >
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (7 samples, 0.74%)</title><rect x="705.4" y="116" width="8.8" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="708.45" y="126.5" ></text>
</g>
<g >
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (5 samples, 0.53%)</title><rect x="699.2" y="100" width="6.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="702.17" y="110.5" ></text>
</g>
<g >
<title>CompositeFileCollection.lambda$visitContents$0 (2 samples, 0.21%)</title><rect x="305.0" y="196" width="2.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="308.00" y="206.5" ></text>
</g>
<g >
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (6 samples, 0.64%)</title><rect x="946.5" y="132" width="7.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="949.47" y="142.5" ></text>
</g>
<g >
<title>CompositeFileCollection$$Lambda$.accept (2 samples, 0.21%)</title><rect x="788.3" y="2180" width="2.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="791.30" y="2190.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="1069.5" y="180" width="2.5" height="15.0" fill="rgb(238,105,105)" rx="2" ry="2" />
<text  x="1072.49" y="190.5" ></text>
</g>
<g >
<title>Streams$StreamBuilderImpl.forEachRemaining (2 samples, 0.21%)</title><rect x="788.3" y="852" width="2.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="791.30" y="862.5" ></text>
</g>
<g >
<title>start_thread (6 samples, 0.64%)</title><rect x="454.4" y="180" width="7.5" height="15.0" fill="rgb(201,51,51)" rx="2" ry="2" />
<text  x="457.38" y="190.5" ></text>
</g>
<g >
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (5 samples, 0.53%)</title><rect x="664.0" y="148" width="6.3" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="667.02" y="158.5" ></text>
</g>
<g >
<title>FinalizePropertiesTaskExecuter.execute (2 samples, 0.21%)</title><rect x="207.1" y="516" width="2.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="210.09" y="526.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (4 samples, 0.43%)</title><rect x="86.6" y="100" width="5.0" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="89.57" y="110.5" ></text>
</g>
<g >
<title>DirectorySnapshot.accept (2 samples, 0.21%)</title><rect x="788.3" y="964" width="2.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="791.30" y="974.5" ></text>
</g>
<g >
<title>LocalCache$Segment.get (2 samples, 0.21%)</title><rect x="788.3" y="68" width="2.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="791.30" y="78.5" ></text>
</g>
<g >
<title>CaptureStateBeforeExecutionStep.lambda$captureExecutionState$1 (2 samples, 0.21%)</title><rect x="207.1" y="148" width="2.5" height="15.0" fill="rgb(66,215,66)" rx="2" ry="2" />
<text  x="210.09" y="158.5" ></text>
</g>
<g >
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.21%)</title><rect x="282.4" y="116" width="2.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="285.40" y="126.5" ></text>
</g>
<g >
<title>ThreadPoolExecutor$Worker.run (2 samples, 0.21%)</title><rect x="744.4" y="2804" width="2.5" height="15.0" fill="rgb(59,208,59)" rx="2" ry="2" />
<text  x="747.36" y="2814.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="114.2" y="84" width="2.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="117.19" y="94.5" ></text>
</g>
<g >
<title>start_thread (4 samples, 0.43%)</title><rect x="543.5" y="196" width="5.0" height="15.0" fill="rgb(234,99,99)" rx="2" ry="2" />
<text  x="546.51" y="206.5" ></text>
</g>
<g >
<title>DefaultProjectStateRegistry$ProjectStateImpl$$Lambda$.apply (2 samples, 0.21%)</title><rect x="97.9" y="180" width="2.5" height="15.0" fill="rgb(107,253,107)" rx="2" ry="2" />
<text  x="100.87" y="190.5" ></text>
</g>
<g >
<title>OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;ObjArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (3 samples, 0.32%)</title><rect x="864.9" y="52" width="3.7" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="867.87" y="62.5" ></text>
</g>
<g >
<title>ImmutableSet$Builder.addAll (2 samples, 0.21%)</title><rect x="749.4" y="100" width="2.5" height="15.0" fill="rgb(68,217,68)" rx="2" ry="2" />
<text  x="752.38" y="110.5" ></text>
</g>
<g >
<title>DefaultProjectStateRegistry$$Lambda$.create (2 samples, 0.21%)</title><rect x="744.4" y="1044" width="2.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="747.36" y="1054.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="1015.5" y="148" width="2.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="1018.51" y="158.5" ></text>
</g>
<g >
<title>CatchExceptionTaskExecuter.execute (2 samples, 0.21%)</title><rect x="1064.5" y="804" width="2.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="1067.47" y="814.5" ></text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (3 samples, 0.32%)</title><rect x="289.9" y="116" width="3.8" height="15.0" fill="rgb(180,180,51)" rx="2" ry="2" />
<text  x="292.94" y="126.5" ></text>
</g>
<g >
<title>BuildOutcomeReportingBuildActionRunner.run (2 samples, 0.21%)</title><rect x="744.4" y="1956" width="2.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="747.36" y="1966.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="942.7" y="132" width="2.5" height="15.0" fill="rgb(249,122,122)" rx="2" ry="2" />
<text  x="945.70" y="142.5" ></text>
</g>
<g >
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (24 samples, 2.55%)</title><rect x="828.5" y="132" width="30.1" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="831.47" y="142.5" >G1..</text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (2 samples, 0.21%)</title><rect x="336.4" y="100" width="2.5" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="339.38" y="110.5" ></text>
</g>
<g >
<title>ConcurrentHashMap.get (2 samples, 0.21%)</title><rect x="124.2" y="52" width="2.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="127.23" y="62.5" ></text>
</g>
<g >
<title>ReferencePipeline$3$1.accept (2 samples, 0.21%)</title><rect x="788.3" y="1604" width="2.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="791.30" y="1614.5" ></text>
</g>
<g >
<title>ImmutableAttributeContainerWithErrorMessage.asMap (2 samples, 0.21%)</title><rect x="744.4" y="84" width="2.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="747.36" y="94.5" ></text>
</g>
<g >
<title>GangWorker::loop() (11 samples, 1.17%)</title><rect x="438.1" y="116" width="13.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="441.06" y="126.5" ></text>
</g>
<g >
<title>AbstractValidatingNamedDomainObjectContainer.create (2 samples, 0.21%)</title><rect x="213.4" y="324" width="2.5" height="15.0" fill="rgb(109,254,109)" rx="2" ry="2" />
<text  x="216.36" y="334.5" ></text>
</g>
<g >
<title>DefaultRootComponentMetadataBuilder.buildRootComponentMetadata (2 samples, 0.21%)</title><rect x="744.4" y="452" width="2.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="747.36" y="462.5" ></text>
</g>
<g >
<title>DefaultFileSystemAccess$$Lambda$.apply (2 samples, 0.21%)</title><rect x="788.3" y="1780" width="2.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="791.30" y="1790.5" ></text>
</g>
<g >
<title>Thread::call_run() (15 samples, 1.60%)</title><rect x="549.8" y="132" width="18.8" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="552.79" y="142.5" ></text>
</g>
<g >
<title>CompositeFileCollection$$Lambda$.accept (2 samples, 0.21%)</title><rect x="305.0" y="212" width="2.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="308.00" y="222.5" ></text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (2 samples, 0.21%)</title><rect x="1069.5" y="84" width="2.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="1072.49" y="94.5" ></text>
</g>
<g >
<title>DefaultPlanExecutor$ExecutorWorker.execute (2 samples, 0.21%)</title><rect x="1064.5" y="964" width="2.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="1067.47" y="974.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="101.6" y="116" width="2.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="104.64" y="126.5" ></text>
</g>
<g >
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (7 samples, 0.74%)</title><rect x="507.1" y="84" width="8.8" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="510.11" y="94.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp$OfRef.evaluateSequential (2 samples, 0.21%)</title><rect x="788.3" y="532" width="2.5" height="15.0" fill="rgb(54,203,54)" rx="2" ry="2" />
<text  x="791.30" y="542.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="593.7" y="148" width="2.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="596.72" y="158.5" ></text>
</g>
<g >
<title>ConcurrentGCThread::run() (3 samples, 0.32%)</title><rect x="916.3" y="132" width="3.8" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="919.34" y="142.5" ></text>
</g>
<g >
<title>Thread::call_run() (4 samples, 0.43%)</title><rect x="340.1" y="196" width="5.1" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="343.15" y="206.5" ></text>
</g>
<g >
<title>Gradle infrastructure (2 samples, 0.21%)</title><rect x="1103.4" y="84" width="2.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="1106.38" y="94.5" ></text>
</g>
<g >
<title>TaskExecution.visitRegularInputs (2 samples, 0.21%)</title><rect x="207.1" y="84" width="2.5" height="15.0" fill="rgb(83,231,83)" rx="2" ry="2" />
<text  x="210.09" y="94.5" ></text>
</g>
<g >
<title>DefaultModelRegistry.state (2 samples, 0.21%)</title><rect x="173.2" y="52" width="2.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="176.19" y="62.5" ></text>
</g>
<g >
<title>DirectorySnapshot$$Lambda$.accept (2 samples, 0.21%)</title><rect x="788.3" y="1188" width="2.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="791.30" y="1198.5" ></text>
</g>
<g >
<title>AbstractPipeline.evaluate (2 samples, 0.21%)</title><rect x="788.3" y="1700" width="2.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="791.30" y="1710.5" ></text>
</g>
<g >
<title>EstablishBuildEnvironment.doBuild (2 samples, 0.21%)</title><rect x="97.9" y="1764" width="2.5" height="15.0" fill="rgb(97,243,97)" rx="2" ry="2" />
<text  x="100.87" y="1774.5" ></text>
</g>
<g >
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (2 samples, 0.21%)</title><rect x="1015.5" y="100" width="2.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1018.51" y="110.5" ></text>
</g>
<g >
<title>Gradle infrastructure (2 samples, 0.21%)</title><rect x="1166.1" y="276" width="2.6" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="1169.15" y="286.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="311.3" y="116" width="2.5" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="314.28" y="126.5" ></text>
</g>
<g >
<title>AbstractNamedDomainObjectContainer.maybeCreate (2 samples, 0.21%)</title><rect x="215.9" y="212" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="218.87" y="222.5" ></text>
</g>
<g >
<title>HeapRegion::oops_on_card_seq_iterate_careful&lt;false, G1ConcurrentRefineOopClosure&gt;(MemRegion, G1ConcurrentRefineOopClosure*) (2 samples, 0.21%)</title><rect x="991.7" y="84" width="2.5" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="994.66" y="94.5" ></text>
</g>
<g >
<title>Streams$StreamBuilderImpl.forEachRemaining (2 samples, 0.21%)</title><rect x="788.3" y="660" width="2.5" height="15.0" fill="rgb(96,242,96)" rx="2" ry="2" />
<text  x="791.30" y="670.5" ></text>
</g>
<g >
<title>SubscribableBuildActionExecutor.execute (2 samples, 0.21%)</title><rect x="97.9" y="1348" width="2.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="100.87" y="1358.5" ></text>
</g>
<g >
<title>start_thread (15 samples, 1.60%)</title><rect x="874.9" y="180" width="18.8" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="877.91" y="190.5" ></text>
</g>
<g >
<title>DefaultPlanExecutor$ExecutorWorker$$Lambda$.execute (2 samples, 0.21%)</title><rect x="788.3" y="3204" width="2.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="791.30" y="3214.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="435.6" y="180" width="2.5" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="438.55" y="190.5" ></text>
</g>
<g >
<title>Thread*) (24 samples, 2.55%)</title><rect x="828.5" y="228" width="30.1" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="831.47" y="238.5" >Th..</text>
</g>
<g >
<title>start_thread (5 samples, 0.53%)</title><rect x="902.5" y="196" width="6.3" height="15.0" fill="rgb(217,74,74)" rx="2" ry="2" />
<text  x="905.53" y="206.5" ></text>
</g>
<g >
<title>AbstractQueue.add (2 samples, 0.21%)</title><rect x="790.8" y="100" width="2.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="793.81" y="110.5" ></text>
</g>
<g >
<title>G1ParTask::work(unsigned int) (7 samples, 0.74%)</title><rect x="705.4" y="164" width="8.8" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="708.45" y="174.5" ></text>
</g>
<g >
<title>SessionFailureReportingActionExecuter.execute (2 samples, 0.21%)</title><rect x="97.9" y="1444" width="2.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="100.87" y="1454.5" ></text>
</g>
<g >
<title>DefaultBuildEventsListenerRegistry$ForwardingBuildEventConsumer.handle (2 samples, 0.21%)</title><rect x="69.0" y="68" width="2.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="72.00" y="78.5" ></text>
</g>
<g >
<title>SnapshotUtil.getRootHashes (2 samples, 0.21%)</title><rect x="1064.5" y="52" width="2.5" height="15.0" fill="rgb(88,234,88)" rx="2" ry="2" />
<text  x="1067.47" y="62.5" ></text>
</g>
<g >
<title>G1ParallelCleaningTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="92.9" y="68" width="2.5" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="95.85" y="78.5" ></text>
</g>
<g >
<title>DefaultPlanExecutor$ExecutorWorker.executeNextNode (2 samples, 0.21%)</title><rect x="1064.5" y="980" width="2.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="1067.47" y="990.5" ></text>
</g>
<g >
<title>DefaultPlanExecutor$ExecutorWorker$$Lambda$.execute (2 samples, 0.21%)</title><rect x="207.1" y="724" width="2.5" height="15.0" fill="rgb(68,216,68)" rx="2" ry="2" />
<text  x="210.09" y="734.5" ></text>
</g>
<g >
<title>NaturalOrdering.compare (2 samples, 0.21%)</title><rect x="32.6" y="68" width="2.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="35.60" y="78.5" ></text>
</g>
<g >
<title>DefaultBuildTreeLifecycleController$$Lambda$.get (2 samples, 0.21%)</title><rect x="744.4" y="1716" width="2.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="747.36" y="1726.5" ></text>
</g>
<g >
<title>FileSystemSnapshotFilter.filterSnapshot (2 samples, 0.21%)</title><rect x="788.3" y="1748" width="2.5" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="791.30" y="1758.5" ></text>
</g>
<g >
<title>EventFiringTaskExecuter.execute (2 samples, 0.21%)</title><rect x="1064.5" y="868" width="2.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="1067.47" y="878.5" ></text>
</g>
<g >
<title>DefaultBuildTreeLifecycleController$$Lambda$.get (2 samples, 0.21%)</title><rect x="97.9" y="836" width="2.5" height="15.0" fill="rgb(65,213,65)" rx="2" ry="2" />
<text  x="100.87" y="846.5" ></text>
</g>
<g >
<title>G1CMTask::drain_local_queue(bool) [clone .part.158] (6 samples, 0.64%)</title><rect x="241.0" y="116" width="7.5" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="243.98" y="126.5" ></text>
</g>
<g >
<title>StateTransitionController.transition (2 samples, 0.21%)</title><rect x="744.4" y="1860" width="2.5" height="15.0" fill="rgb(94,240,94)" rx="2" ry="2" />
<text  x="747.36" y="1870.5" ></text>
</g>
<g >
<title>LocalCache$Segment.postReadCleanup (2 samples, 0.21%)</title><rect x="790.8" y="180" width="2.5" height="15.0" fill="rgb(81,229,81)" rx="2" ry="2" />
<text  x="793.81" y="190.5" ></text>
</g>
<g >
<title>AbstractPipeline.copyInto (2 samples, 0.21%)</title><rect x="788.3" y="1252" width="2.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="791.30" y="1262.5" ></text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (2 samples, 0.21%)</title><rect x="311.3" y="52" width="2.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="314.28" y="62.5" ></text>
</g>
<g >
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (4 samples, 0.43%)</title><rect x="645.2" y="132" width="5.0" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="648.19" y="142.5" ></text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (11 samples, 1.17%)</title><rect x="53.9" y="84" width="13.8" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="56.94" y="94.5" ></text>
</g>
<g >
<title>PtrQueue::enqueue_known_active(void*) (2 samples, 0.21%)</title><rect x="1053.2" y="84" width="2.5" height="15.0" fill="rgb(228,228,69)" rx="2" ry="2" />
<text  x="1056.17" y="94.5" ></text>
</g>
<g >
<title>msort_with_tmp.part.0 (2 samples, 0.21%)</title><rect x="72.8" y="68" width="2.5" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="75.77" y="78.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="308.8" y="148" width="2.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="311.77" y="158.5" ></text>
</g>
<g >
<title>DefaultDomainObjectCollection.assertMutable (2 samples, 0.21%)</title><rect x="1097.1" y="148" width="2.5" height="15.0" fill="rgb(108,254,108)" rx="2" ry="2" />
<text  x="1100.11" y="158.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="864.9" y="244" width="2.5" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="867.87" y="254.5" ></text>
</g>
<g >
<title>Hashing$MessageDigestHasher.update (2 samples, 0.21%)</title><rect x="808.4" y="68" width="2.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="811.38" y="78.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="864.9" y="228" width="2.5" height="15.0" fill="rgb(250,123,123)" rx="2" ry="2" />
<text  x="867.87" y="238.5" ></text>
</g>
<g >
<title>GangWorker::loop() (7 samples, 0.74%)</title><rect x="323.8" y="116" width="8.8" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="326.83" y="126.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="268.6" y="100" width="2.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="271.60" y="110.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (5 samples, 0.53%)</title><rect x="902.5" y="132" width="6.3" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="905.53" y="142.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp$OfRef.accept (2 samples, 0.21%)</title><rect x="744.4" y="148" width="2.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="747.36" y="158.5" ></text>
</g>
<g >
<title>DefaultBuildTreeLifecycleController$$Lambda$.get (2 samples, 0.21%)</title><rect x="744.4" y="1748" width="2.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="747.36" y="1758.5" ></text>
</g>
<g >
<title>HashMap.getNode (2 samples, 0.21%)</title><rect x="686.6" y="68" width="2.5" height="15.0" fill="rgb(56,205,56)" rx="2" ry="2" />
<text  x="689.62" y="78.5" ></text>
</g>
<g >
<title>DaemonCommandExecution.proceed (2 samples, 0.21%)</title><rect x="97.9" y="1668" width="2.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="100.87" y="1678.5" ></text>
</g>
<g >
<title>start_thread (43 samples, 4.57%)</title><rect x="345.2" y="196" width="53.9" height="15.0" fill="rgb(204,56,56)" rx="2" ry="2" />
<text  x="348.17" y="206.5" >start..</text>
</g>
<g >
<title>DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute (2 samples, 0.21%)</title><rect x="207.1" y="676" width="2.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="210.09" y="686.5" ></text>
</g>
<g >
<title>DefaultTaskContainer.register (2 samples, 0.21%)</title><rect x="173.2" y="100" width="2.5" height="15.0" fill="rgb(101,246,101)" rx="2" ry="2" />
<text  x="176.19" y="110.5" ></text>
</g>
<g >
<title>OutputFileChanges$3.updated (2 samples, 0.21%)</title><rect x="1064.5" y="100" width="2.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="1067.47" y="110.5" ></text>
</g>
<g >
<title>DependencyInjectingInstantiator.doCreate (2 samples, 0.21%)</title><rect x="213.4" y="228" width="2.5" height="15.0" fill="rgb(103,249,103)" rx="2" ry="2" />
<text  x="216.36" y="238.5" ></text>
</g>
<g >
<title>DefaultFileCollectionSnapshotter.snapshot (2 samples, 0.21%)</title><rect x="788.3" y="2644" width="2.5" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="791.30" y="2654.5" ></text>
</g>
<g >
<title>CompositeFileCollection.visitContents (2 samples, 0.21%)</title><rect x="788.3" y="2244" width="2.5" height="15.0" fill="rgb(92,239,92)" rx="2" ry="2" />
<text  x="791.30" y="2254.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="859.9" y="228" width="2.5" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="862.85" y="238.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp$OfRef.evaluateSequential (2 samples, 0.21%)</title><rect x="788.3" y="1300" width="2.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="791.30" y="1310.5" ></text>
</g>
<g >
<title>Thread::call_run() (24 samples, 2.55%)</title><rect x="828.5" y="212" width="30.1" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="831.47" y="222.5" >Th..</text>
</g>
<g >
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.21%)</title><rect x="714.2" y="116" width="2.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="717.23" y="126.5" ></text>
</g>
<g >
<title>Class::oop_size(oopDesc*) (2 samples, 0.21%)</title><rect x="82.8" y="52" width="2.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="85.81" y="62.5" ></text>
</g>
<g >
<title>DefaultBuildTreeLifecycleController.scheduleAndRunTasks (2 samples, 0.21%)</title><rect x="97.9" y="980" width="2.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="100.87" y="990.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="311.3" y="84" width="2.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="314.28" y="94.5" ></text>
</g>
<g >
<title>G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (3 samples, 0.32%)</title><rect x="274.9" y="68" width="3.7" height="15.0" fill="rgb(199,199,59)" rx="2" ry="2" />
<text  x="277.87" y="78.5" ></text>
</g>
<g >
<title>G1ParTask::work(unsigned int) (6 samples, 0.64%)</title><rect x="946.5" y="180" width="7.5" height="15.0" fill="rgb(194,194,56)" rx="2" ry="2" />
<text  x="949.47" y="190.5" ></text>
</g>
<g >
<title>StateTransitionController.inState (2 samples, 0.21%)</title><rect x="744.4" y="1236" width="2.5" height="15.0" fill="rgb(77,224,77)" rx="2" ry="2" />
<text  x="747.36" y="1246.5" ></text>
</g>
<g >
<title>DefaultExecutionStateChangeDetector.detectChanges (2 samples, 0.21%)</title><rect x="1064.5" y="196" width="2.5" height="15.0" fill="rgb(106,252,106)" rx="2" ry="2" />
<text  x="1067.47" y="206.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp$OfRef.accept (2 samples, 0.21%)</title><rect x="788.3" y="244" width="2.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="791.30" y="254.5" ></text>
</g>
<g >
<title>RootBuildLifecycleBuildActionExecutor.execute (2 samples, 0.21%)</title><rect x="744.4" y="2052" width="2.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="747.36" y="2062.5" ></text>
</g>
<g >
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.21%)</title><rect x="593.7" y="84" width="2.5" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="596.72" y="94.5" ></text>
</g>
<g >
<title>CleanupStaleOutputsExecuter.execute (2 samples, 0.21%)</title><rect x="1064.5" y="724" width="2.5" height="15.0" fill="rgb(88,235,88)" rx="2" ry="2" />
<text  x="1067.47" y="734.5" ></text>
</g>
<g >
<title>ErrorHandlingChangeContainer.accept (2 samples, 0.21%)</title><rect x="1064.5" y="164" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="1067.47" y="174.5" ></text>
</g>
<g >
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.21%)</title><rect x="650.2" y="116" width="2.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="653.21" y="126.5" ></text>
</g>
<g >
<title>DefaultBuildTreeLifecycleController.doScheduleAndRunTasks (2 samples, 0.21%)</title><rect x="744.4" y="1700" width="2.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="747.36" y="1710.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="451.9" y="116" width="2.5" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="454.87" y="126.5" ></text>
</g>
<g >
<title>StateTransitionController.transitionIfNotPreviously (2 samples, 0.21%)</title><rect x="97.9" y="516" width="2.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="100.87" y="526.5" ></text>
</g>
<g >
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (7 samples, 0.74%)</title><rect x="723.0" y="116" width="8.8" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="726.02" y="126.5" ></text>
</g>
<g >
<title>HashMap$KeyIterator.&lt;init&gt; (2 samples, 0.21%)</title><rect x="682.9" y="68" width="2.5" height="15.0" fill="rgb(70,218,70)" rx="2" ry="2" />
<text  x="685.85" y="78.5" ></text>
</g>
<g >
<title>DirectorySnapshot$$Lambda$.accept (2 samples, 0.21%)</title><rect x="788.3" y="228" width="2.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="791.30" y="238.5" ></text>
</g>
<g >
<title>AbstractPipeline.wrapAndCopyInto (2 samples, 0.21%)</title><rect x="788.3" y="500" width="2.5" height="15.0" fill="rgb(62,211,62)" rx="2" ry="2" />
<text  x="791.30" y="510.5" ></text>
</g>
<g >
<title>AbstractPipeline.wrapAndCopyInto (2 samples, 0.21%)</title><rect x="788.3" y="308" width="2.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="791.30" y="318.5" ></text>
</g>
<g >
<title>BuildCompletionNotifyingBuildActionRunner.run (2 samples, 0.21%)</title><rect x="97.9" y="1076" width="2.5" height="15.0" fill="rgb(75,223,75)" rx="2" ry="2" />
<text  x="100.87" y="1086.5" ></text>
</g>
<g >
<title>G1CMTask::drain_local_queue(bool) [clone .part.158] (5 samples, 0.53%)</title><rect x="893.7" y="84" width="6.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="896.74" y="94.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="718.0" y="196" width="2.5" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="721.00" y="206.5" ></text>
</g>
<g >
<title>G1CMTask::drain_local_queue(bool) [clone .part.158] (9 samples, 0.96%)</title><rect x="323.8" y="52" width="11.3" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="326.83" y="62.5" ></text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (16 samples, 1.70%)</title><rect x="228.4" y="84" width="20.1" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="231.43" y="94.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="114.2" y="100" width="2.5" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="117.19" y="110.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="826.0" y="244" width="2.5" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="828.96" y="254.5" ></text>
</g>
<g >
<title>UnpackingVisitor.add (2 samples, 0.21%)</title><rect x="788.3" y="2196" width="2.5" height="15.0" fill="rgb(52,202,52)" rx="2" ry="2" />
<text  x="791.30" y="2206.5" ></text>
</g>
<g >
<title>DefaultDomainObjectCollection.configureEach (2 samples, 0.21%)</title><rect x="151.9" y="68" width="2.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="154.85" y="78.5" ></text>
</g>
<g >
<title>SkipEmptyWorkStep.execute (2 samples, 0.21%)</title><rect x="788.3" y="2772" width="2.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="791.30" y="2782.5" ></text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (2 samples, 0.21%)</title><rect x="276.1" y="100" width="2.5" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="279.13" y="110.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="765.7" y="180" width="2.5" height="15.0" fill="rgb(200,50,50)" rx="2" ry="2" />
<text  x="768.70" y="190.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="278.6" y="148" width="2.5" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="281.64" y="158.5" ></text>
</g>
<g >
<title>ReferencePipeline.forEach (2 samples, 0.21%)</title><rect x="788.3" y="1716" width="2.5" height="15.0" fill="rgb(78,225,78)" rx="2" ry="2" />
<text  x="791.30" y="1726.5" ></text>
</g>
<g >
<title>Thread*) (4 samples, 0.43%)</title><rect x="645.2" y="212" width="5.0" height="15.0" fill="rgb(215,72,72)" rx="2" ry="2" />
<text  x="648.19" y="222.5" ></text>
</g>
<g >
<title>FileTreeAdapter$1.visitFileTree (2 samples, 0.21%)</title><rect x="788.3" y="1860" width="2.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="791.30" y="1870.5" ></text>
</g>
<g >
<title>DefaultSourceDirectorySet.visitChildren (2 samples, 0.21%)</title><rect x="788.3" y="2116" width="2.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="791.30" y="2126.5" ></text>
</g>
<g >
<title>AbstractPipeline.evaluate (2 samples, 0.21%)</title><rect x="788.3" y="1124" width="2.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="791.30" y="1134.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="942.7" y="84" width="2.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="945.70" y="94.5" ></text>
</g>
<g >
<title>G1ParTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="718.0" y="148" width="2.5" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="721.00" y="158.5" ></text>
</g>
<g >
<title>Thread::call_run() (43 samples, 4.57%)</title><rect x="345.2" y="164" width="53.9" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="348.17" y="174.5" >Threa..</text>
</g>
<g >
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (2 samples, 0.21%)</title><rect x="718.0" y="84" width="2.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="721.00" y="94.5" ></text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (4 samples, 0.43%)</title><rect x="86.6" y="84" width="5.0" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="89.57" y="94.5" ></text>
</g>
<g >
<title>DefaultBuildTreeLifecycleController.lambda$doScheduleAndRunTasks$2 (2 samples, 0.21%)</title><rect x="97.9" y="740" width="2.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="100.87" y="750.5" ></text>
</g>
<g >
<title>start_thread (4 samples, 0.43%)</title><rect x="340.1" y="228" width="5.1" height="15.0" fill="rgb(221,80,80)" rx="2" ry="2" />
<text  x="343.15" y="238.5" ></text>
</g>
<g >
<title>StateTransitionController$$Lambda$.get (2 samples, 0.21%)</title><rect x="97.9" y="436" width="2.5" height="15.0" fill="rgb(63,211,63)" rx="2" ry="2" />
<text  x="100.87" y="446.5" ></text>
</g>
<g >
<title>G1CMTask::drain_global_stack(bool) [clone .constprop.412] (3 samples, 0.32%)</title><rect x="320.1" y="52" width="3.7" height="15.0" fill="rgb(179,179,51)" rx="2" ry="2" />
<text  x="323.06" y="62.5" ></text>
</g>
<g >
<title>AbstractPipeline.copyInto (2 samples, 0.21%)</title><rect x="744.4" y="212" width="2.5" height="15.0" fill="rgb(105,250,105)" rx="2" ry="2" />
<text  x="747.36" y="222.5" ></text>
</g>
<g >
<title>G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (7 samples, 0.74%)</title><rect x="901.3" y="68" width="8.8" height="15.0" fill="rgb(177,177,50)" rx="2" ry="2" />
<text  x="904.28" y="78.5" ></text>
</g>
<g >
<title>EventFiringTaskExecuter$1.call (2 samples, 0.21%)</title><rect x="1064.5" y="836" width="2.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1067.47" y="846.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp.evaluateSequential (2 samples, 0.21%)</title><rect x="788.3" y="1284" width="2.5" height="15.0" fill="rgb(65,214,65)" rx="2" ry="2" />
<text  x="791.30" y="1294.5" ></text>
</g>
<g >
<title>DefaultConfiguration.lambda$ensureUniqueAttributes$7 (2 samples, 0.21%)</title><rect x="744.4" y="116" width="2.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="747.36" y="126.5" ></text>
</g>
<g >
<title>G1CLDScanClosure::do_cld(ClassLoaderData*) (2 samples, 0.21%)</title><rect x="826.0" y="116" width="2.5" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="828.96" y="126.5" ></text>
</g>
<g >
<title>HashMap.resize (2 samples, 0.21%)</title><rect x="695.4" y="52" width="2.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="698.40" y="62.5" ></text>
</g>
<g >
<title>G1ParTask::work(unsigned int) (3 samples, 0.32%)</title><rect x="731.8" y="132" width="3.8" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="734.81" y="142.5" ></text>
</g>
<g >
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.21%)</title><rect x="1069.5" y="100" width="2.5" height="15.0" fill="rgb(189,189,55)" rx="2" ry="2" />
<text  x="1072.49" y="110.5" ></text>
</g>
<g >
<title>Thread*) (27 samples, 2.87%)</title><rect x="955.3" y="148" width="33.8" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="958.26" y="158.5" >Th..</text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="282.4" y="148" width="2.5" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="285.40" y="158.5" ></text>
</g>
<g >
<title>ForwardClientInput$2.create (2 samples, 0.21%)</title><rect x="97.9" y="1620" width="2.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="100.87" y="1630.5" ></text>
</g>
<g >
<title>PluginsProjectConfigureActions.execute (2 samples, 0.21%)</title><rect x="97.9" y="132" width="2.5" height="15.0" fill="rgb(91,238,91)" rx="2" ry="2" />
<text  x="100.87" y="142.5" ></text>
</g>
<g >
<title>StateTransitionController.lambda$doTransition$12 (2 samples, 0.21%)</title><rect x="97.9" y="420" width="2.5" height="15.0" fill="rgb(76,224,76)" rx="2" ry="2" />
<text  x="100.87" y="430.5" ></text>
</g>
<g >
<title>G1ScanObjsDuringScanRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (7 samples, 0.74%)</title><rect x="643.9" y="52" width="8.8" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="646.94" y="62.5" ></text>
</g>
<g >
<title>Gradle infrastructure (2 samples, 0.21%)</title><rect x="1166.1" y="308" width="2.6" height="15.0" fill="rgb(60,209,60)" rx="2" ry="2" />
<text  x="1169.15" y="318.5" ></text>
</g>
<g >
<title>LocalCache.connectAccessOrder (2 samples, 0.21%)</title><rect x="790.8" y="68" width="2.5" height="15.0" fill="rgb(82,229,82)" rx="2" ry="2" />
<text  x="793.81" y="78.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="864.9" y="212" width="2.5" height="15.0" fill="rgb(191,191,56)" rx="2" ry="2" />
<text  x="867.87" y="222.5" ></text>
</g>
<g >
<title>SkipOnlyIfTaskExecuter.execute (2 samples, 0.21%)</title><rect x="788.3" y="3044" width="2.5" height="15.0" fill="rgb(54,204,54)" rx="2" ry="2" />
<text  x="791.30" y="3054.5" ></text>
</g>
<g >
<title>DefaultBuildTreeWorkPreparer.scheduleRequestedTasks (2 samples, 0.21%)</title><rect x="744.4" y="1636" width="2.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="747.36" y="1646.5" ></text>
</g>
<g >
<title>ReferencePipeline.forEach (2 samples, 0.21%)</title><rect x="788.3" y="564" width="2.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="791.30" y="574.5" ></text>
</g>
<g >
<title>FileSystemSnapshotFilter$FilteringVisitor.visitEntry (2 samples, 0.21%)</title><rect x="784.5" y="196" width="2.5" height="15.0" fill="rgb(51,201,51)" rx="2" ry="2" />
<text  x="787.53" y="206.5" ></text>
</g>
<g >
<title>Thread::call_run() (4 samples, 0.43%)</title><rect x="543.5" y="164" width="5.0" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="546.51" y="174.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (3 samples, 0.32%)</title><rect x="289.9" y="132" width="3.8" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="292.94" y="142.5" ></text>
</g>
<g >
<title>OopOopIterateBoundedDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*, MemRegion) (4 samples, 0.43%)</title><rect x="223.4" y="84" width="5.0" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="226.40" y="94.5" ></text>
</g>
<g >
<title>G1CMBitMapClosure::do_addr(HeapWord*) (2 samples, 0.21%)</title><rect x="765.7" y="84" width="2.5" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="768.70" y="94.5" ></text>
</g>
<g >
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.43%)</title><rect x="100.4" y="52" width="5.0" height="15.0" fill="rgb(187,187,54)" rx="2" ry="2" />
<text  x="103.38" y="62.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (3 samples, 0.32%)</title><rect x="289.9" y="148" width="3.8" height="15.0" fill="rgb(221,221,67)" rx="2" ry="2" />
<text  x="292.94" y="158.5" ></text>
</g>
<g >
<title>HashMap.put (2 samples, 0.21%)</title><rect x="695.4" y="84" width="2.5" height="15.0" fill="rgb(56,206,56)" rx="2" ry="2" />
<text  x="698.40" y="94.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (2 samples, 0.21%)</title><rect x="320.1" y="84" width="2.5" height="15.0" fill="rgb(185,185,53)" rx="2" ry="2" />
<text  x="323.06" y="94.5" ></text>
</g>
<g >
<title>ConcurrentGCThread::run() (5 samples, 0.53%)</title><rect x="699.2" y="148" width="6.2" height="15.0" fill="rgb(181,181,52)" rx="2" ry="2" />
<text  x="702.17" y="158.5" ></text>
</g>
<g >
<title>DefaultTaskCollection.hasWithName (2 samples, 0.21%)</title><rect x="173.2" y="68" width="2.5" height="15.0" fill="rgb(55,204,55)" rx="2" ry="2" />
<text  x="176.19" y="78.5" ></text>
</g>
<g >
<title>BuildTreePreparingProjectsPreparer.prepareProjects (2 samples, 0.21%)</title><rect x="97.9" y="356" width="2.5" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="100.87" y="366.5" ></text>
</g>
<g >
<title>start_thread (5 samples, 0.53%)</title><rect x="664.0" y="260" width="6.3" height="15.0" fill="rgb(203,55,55)" rx="2" ry="2" />
<text  x="667.02" y="270.5" ></text>
</g>
<g >
<title>ImmutableMap$Builder.build (2 samples, 0.21%)</title><rect x="744.4" y="52" width="2.5" height="15.0" fill="rgb(50,200,50)" rx="2" ry="2" />
<text  x="747.36" y="62.5" ></text>
</g>
<g >
<title>GangWorker::loop() (15 samples, 1.60%)</title><rect x="874.9" y="132" width="18.8" height="15.0" fill="rgb(191,191,55)" rx="2" ry="2" />
<text  x="877.91" y="142.5" ></text>
</g>
<g >
<title>DefaultInputFingerprinter$InputCollectingVisitor.visitInputProperty (2 samples, 0.21%)</title><rect x="207.1" y="68" width="2.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="210.09" y="78.5" ></text>
</g>
<g >
<title>G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (59 samples, 6.28%)</title><rect x="345.2" y="84" width="74.0" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="348.17" y="94.5" >G1CMTask..</text>
</g>
<g >
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (3 samples, 0.32%)</title><rect x="916.3" y="84" width="3.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="919.34" y="94.5" ></text>
</g>
<g >
<title>FutureTask.run (2 samples, 0.21%)</title><rect x="69.0" y="132" width="2.5" height="15.0" fill="rgb(90,236,90)" rx="2" ry="2" />
<text  x="72.00" y="142.5" ></text>
</g>
<g >
<title>SkipTaskWithNoActionsExecuter.execute (2 samples, 0.21%)</title><rect x="1064.5" y="772" width="2.5" height="15.0" fill="rgb(86,233,86)" rx="2" ry="2" />
<text  x="1067.47" y="782.5" ></text>
</g>
<g >
<title>DefaultBuildTreeLifecycleController.runBuild (2 samples, 0.21%)</title><rect x="744.4" y="1876" width="2.5" height="15.0" fill="rgb(52,201,52)" rx="2" ry="2" />
<text  x="747.36" y="1886.5" ></text>
</g>
<g >
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (9 samples, 0.96%)</title><rect x="652.7" y="100" width="11.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="655.72" y="110.5" ></text>
</g>
<g >
<title>LocalTaskNode.resolveDependencies (2 samples, 0.21%)</title><rect x="744.4" y="820" width="2.5" height="15.0" fill="rgb(100,245,100)" rx="2" ry="2" />
<text  x="747.36" y="830.5" ></text>
</g>
<g >
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.21%)</title><rect x="769.5" y="132" width="2.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="772.47" y="142.5" ></text>
</g>
<g >
<title>G1RebuildRemSetTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="593.7" y="116" width="2.5" height="15.0" fill="rgb(227,227,68)" rx="2" ry="2" />
<text  x="596.72" y="126.5" ></text>
</g>
<g >
<title>Desc::size_given_klass(Klass*) (21 samples, 2.23%)</title><rect x="267.3" y="52" width="26.4" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="270.34" y="62.5" >D..</text>
</g>
<g >
<title>FileTreeAdapter.visitContents (2 samples, 0.21%)</title><rect x="788.3" y="1892" width="2.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="791.30" y="1902.5" ></text>
</g>
<g >
<title>AbstractFileCollection.visitStructure (2 samples, 0.21%)</title><rect x="788.3" y="1908" width="2.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="791.30" y="1918.5" ></text>
</g>
<g >
<title>ForEachOps$ForEachOp.evaluateSequential (2 samples, 0.21%)</title><rect x="788.3" y="1668" width="2.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="791.30" y="1678.5" ></text>
</g>
<g >
<title>AbstractFileCollection.visitStructure (2 samples, 0.21%)</title><rect x="788.3" y="2340" width="2.5" height="15.0" fill="rgb(77,225,77)" rx="2" ry="2" />
<text  x="791.30" y="2350.5" ></text>
</g>
<g >
<title>DefaultProjectStateRegistry$ProjectStateImpl.withProjectLock (2 samples, 0.21%)</title><rect x="97.9" y="244" width="2.5" height="15.0" fill="rgb(90,237,90)" rx="2" ry="2" />
<text  x="100.87" y="254.5" ></text>
</g>
<g >
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.21%)</title><rect x="862.4" y="68" width="2.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="865.36" y="78.5" ></text>
</g>
<g >
<title>start_thread (7 samples, 0.74%)</title><rect x="705.4" y="228" width="8.8" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="708.45" y="238.5" ></text>
</g>
<g >
<title>LocalCache.get (2 samples, 0.21%)</title><rect x="790.8" y="212" width="2.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="793.81" y="222.5" ></text>
</g>
<g >
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.21%)</title><rect x="862.4" y="132" width="2.5" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="865.36" y="142.5" ></text>
</g>
<g >
<title>ReferencePipeline.forEach (2 samples, 0.21%)</title><rect x="788.3" y="1140" width="2.5" height="15.0" fill="rgb(89,236,89)" rx="2" ry="2" />
<text  x="791.30" y="1150.5" ></text>
</g>
<g >
<title>G1ParTask::work(unsigned int) (24 samples, 2.55%)</title><rect x="828.5" y="180" width="30.1" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="831.47" y="190.5" >G1..</text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="311.3" y="132" width="2.5" height="15.0" fill="rgb(209,64,64)" rx="2" ry="2" />
<text  x="314.28" y="142.5" ></text>
</g>
<g >
<title>StateTransitionController$$Lambda$.get (2 samples, 0.21%)</title><rect x="97.9" y="612" width="2.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="100.87" y="622.5" ></text>
</g>
<g >
<title>DirectorySnapshot.accept (2 samples, 0.21%)</title><rect x="788.3" y="1156" width="2.5" height="15.0" fill="rgb(106,251,106)" rx="2" ry="2" />
<text  x="791.30" y="1166.5" ></text>
</g>
<g >
<title>DirectorySnapshot$$Lambda$.accept (2 samples, 0.21%)</title><rect x="788.3" y="1572" width="2.5" height="15.0" fill="rgb(80,228,80)" rx="2" ry="2" />
<text  x="791.30" y="1582.5" ></text>
</g>
<g >
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (15 samples, 1.60%)</title><rect x="549.8" y="68" width="18.8" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="552.79" y="78.5" ></text>
</g>
<g >
<title>DefaultConfiguration.access$1800 (2 samples, 0.21%)</title><rect x="744.4" y="660" width="2.5" height="15.0" fill="rgb(58,207,58)" rx="2" ry="2" />
<text  x="747.36" y="670.5" ></text>
</g>
<g >
<title>AbstractMutationGuard.assertMutationAllowed (2 samples, 0.21%)</title><rect x="177.0" y="84" width="2.5" height="15.0" fill="rgb(58,208,58)" rx="2" ry="2" />
<text  x="179.96" y="94.5" ></text>
</g>
<g >
<title>BuildModelActionRunner.run (2 samples, 0.21%)</title><rect x="97.9" y="996" width="2.5" height="15.0" fill="rgb(103,248,103)" rx="2" ry="2" />
<text  x="100.87" y="1006.5" ></text>
</g>
<g >
<title>StateTransitionController.doTransition (2 samples, 0.21%)</title><rect x="97.9" y="452" width="2.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="100.87" y="462.5" ></text>
</g>
<g >
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (15 samples, 1.60%)</title><rect x="921.4" y="68" width="18.8" height="15.0" fill="rgb(186,186,54)" rx="2" ry="2" />
<text  x="924.36" y="78.5" ></text>
</g>
<g >
<title>DependencyInjectingInstantiator.verifyParameters (6 samples, 0.64%)</title><rect x="213.4" y="52" width="7.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="216.36" y="62.5" ></text>
</g>
<g >
<title>DefaultBuildConfigurationActionExecuter.configure (2 samples, 0.21%)</title><rect x="744.4" y="884" width="2.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="747.36" y="894.5" ></text>
</g>
<g >
<title>Thread::call_run() (4 samples, 0.43%)</title><rect x="86.6" y="148" width="5.0" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="89.57" y="158.5" ></text>
</g>
<g >
<title>ReferencePipeline$3$1.accept (2 samples, 0.21%)</title><rect x="788.3" y="260" width="2.5" height="15.0" fill="rgb(85,232,85)" rx="2" ry="2" />
<text  x="791.30" y="270.5" ></text>
</g>
<g >
<title>DefaultBuildTreeLifecycleController.lambda$runBuild$4 (2 samples, 0.21%)</title><rect x="97.9" y="820" width="2.5" height="15.0" fill="rgb(53,202,53)" rx="2" ry="2" />
<text  x="100.87" y="830.5" ></text>
</g>
<g >
<title>G1RebuildRemSetTask::work(unsigned int) (15 samples, 1.60%)</title><rect x="921.4" y="100" width="18.8" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="924.36" y="110.5" ></text>
</g>
<g >
<title>start_thread (7 samples, 0.74%)</title><rect x="723.0" y="228" width="8.8" height="15.0" fill="rgb(212,68,68)" rx="2" ry="2" />
<text  x="726.02" y="238.5" ></text>
</g>
<g >
<title>CompareStrategy.visitChangesSince (2 samples, 0.21%)</title><rect x="1064.5" y="84" width="2.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1067.47" y="94.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (5 samples, 0.53%)</title><rect x="893.7" y="116" width="6.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="896.74" y="126.5" ></text>
</g>
<g >
<title>AbstractPropertySpec.compareTo (2 samples, 0.21%)</title><rect x="32.6" y="52" width="2.5" height="15.0" fill="rgb(99,245,99)" rx="2" ry="2" />
<text  x="35.60" y="62.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="336.4" y="132" width="2.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="339.38" y="142.5" ></text>
</g>
<g >
<title>Thread::call_run() (5 samples, 0.53%)</title><rect x="910.1" y="148" width="6.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="913.06" y="158.5" ></text>
</g>
<g >
<title>ReferencePipeline.forEach (2 samples, 0.21%)</title><rect x="788.3" y="1524" width="2.5" height="15.0" fill="rgb(64,212,64)" rx="2" ry="2" />
<text  x="791.30" y="1534.5" ></text>
</g>
<g >
<title>GangWorker::loop() (11 samples, 1.17%)</title><rect x="399.1" y="164" width="13.9" height="15.0" fill="rgb(190,190,55)" rx="2" ry="2" />
<text  x="402.15" y="174.5" ></text>
</g>
<g >
<title>G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) (9 samples, 0.96%)</title><rect x="248.5" y="100" width="11.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="251.51" y="110.5" ></text>
</g>
<g >
<title>CompositeFileCollection.lambda$visitContents$0 (2 samples, 0.21%)</title><rect x="788.3" y="2084" width="2.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="791.30" y="2094.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="864.9" y="196" width="2.5" height="15.0" fill="rgb(224,224,68)" rx="2" ry="2" />
<text  x="867.87" y="206.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (2 samples, 0.21%)</title><rect x="262.3" y="116" width="2.5" height="15.0" fill="rgb(182,182,52)" rx="2" ry="2" />
<text  x="265.32" y="126.5" ></text>
</g>
<g >
<title>Gradle infrastructure (3 samples, 0.32%)</title><rect x="675.3" y="52" width="3.8" height="15.0" fill="rgb(69,217,69)" rx="2" ry="2" />
<text  x="678.32" y="62.5" ></text>
</g>
<g >
<title>DefaultFileSystemAccess.readSnapshotFromLocation (2 samples, 0.21%)</title><rect x="788.3" y="1812" width="2.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="791.30" y="1822.5" ></text>
</g>
<g >
<title>LoadPreviousExecutionStateStep.execute (2 samples, 0.21%)</title><rect x="207.1" y="340" width="2.5" height="15.0" fill="rgb(98,244,98)" rx="2" ry="2" />
<text  x="210.09" y="350.5" ></text>
</g>
<g >
<title>SummarizingChangeContainer.accept (2 samples, 0.21%)</title><rect x="1064.5" y="148" width="2.5" height="15.0" fill="rgb(95,241,95)" rx="2" ry="2" />
<text  x="1067.47" y="158.5" ></text>
</g>
<g >
<title>RequestStopIfSingleUsedDaemon.execute (2 samples, 0.21%)</title><rect x="744.4" y="2500" width="2.5" height="15.0" fill="rgb(104,250,104)" rx="2" ry="2" />
<text  x="747.36" y="2510.5" ></text>
</g>
<g >
<title>GangWorker::loop() (4 samples, 0.43%)</title><rect x="543.5" y="148" width="5.0" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="546.51" y="158.5" ></text>
</g>
<g >
<title>G1CMTask::drain_local_queue(bool) [clone .part.158] (3 samples, 0.32%)</title><rect x="289.9" y="100" width="3.8" height="15.0" fill="rgb(178,178,51)" rx="2" ry="2" />
<text  x="292.94" y="110.5" ></text>
</g>
<g >
<title>GangWorker::loop() (2 samples, 0.21%)</title><rect x="826.0" y="196" width="2.5" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="828.96" y="206.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="818.4" y="116" width="2.5" height="15.0" fill="rgb(226,226,68)" rx="2" ry="2" />
<text  x="821.43" y="126.5" ></text>
</g>
<g >
<title>BuildCommandOnly.execute (2 samples, 0.21%)</title><rect x="97.9" y="1732" width="2.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="100.87" y="1742.5" ></text>
</g>
<g >
<title>start_thread (2 samples, 0.21%)</title><rect x="818.4" y="148" width="2.5" height="15.0" fill="rgb(216,74,74)" rx="2" ry="2" />
<text  x="821.43" y="158.5" ></text>
</g>
<g >
<title>HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringScanRSClosure&gt;(MemRegion, G1ScanObjsDuringScanRSClosure*) (7 samples, 0.74%)</title><rect x="705.4" y="84" width="8.8" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="708.45" y="94.5" ></text>
</g>
<g >
<title>FilenameUtils.normalizeNoEndSeparator (3 samples, 0.32%)</title><rect x="303.7" y="68" width="3.8" height="15.0" fill="rgb(102,247,102)" rx="2" ry="2" />
<text  x="306.74" y="78.5" ></text>
</g>
<g >
<title>DefaultConfigurationFactory.create (2 samples, 0.21%)</title><rect x="215.9" y="116" width="2.5" height="15.0" fill="rgb(63,212,63)" rx="2" ry="2" />
<text  x="218.87" y="126.5" ></text>
</g>
<g >
<title>StringLatin1.hashCode (2 samples, 0.21%)</title><rect x="1082.0" y="52" width="2.6" height="15.0" fill="rgb(101,247,101)" rx="2" ry="2" />
<text  x="1085.04" y="62.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="282.4" y="180" width="2.5" height="15.0" fill="rgb(207,61,61)" rx="2" ry="2" />
<text  x="285.40" y="190.5" ></text>
</g>
<g >
<title>Thread*) (19 samples, 2.02%)</title><rect x="518.4" y="196" width="23.9" height="15.0" fill="rgb(201,52,52)" rx="2" ry="2" />
<text  x="521.40" y="206.5" >T..</text>
</g>
<g >
<title>LocalTaskNodeExecutor.execute (2 samples, 0.21%)</title><rect x="788.3" y="3140" width="2.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="791.30" y="3150.5" ></text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (13 samples, 1.38%)</title><rect x="421.7" y="68" width="16.4" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="424.74" y="78.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="451.9" y="84" width="2.5" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="454.87" y="94.5" ></text>
</g>
<g >
<title>EventFiringTaskExecuter.execute (2 samples, 0.21%)</title><rect x="207.1" y="644" width="2.5" height="15.0" fill="rgb(55,205,55)" rx="2" ry="2" />
<text  x="210.09" y="654.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="942.7" y="100" width="2.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="945.70" y="110.5" ></text>
</g>
<g >
<title>AbstractFileCollection.visitStructure (2 samples, 0.21%)</title><rect x="788.3" y="2068" width="2.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="791.30" y="2078.5" ></text>
</g>
<g >
<title>CompositeFileCollection.visitContents (2 samples, 0.21%)</title><rect x="305.0" y="276" width="2.5" height="15.0" fill="rgb(108,253,108)" rx="2" ry="2" />
<text  x="308.00" y="286.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="765.7" y="148" width="2.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="768.70" y="158.5" ></text>
</g>
<g >
<title>Thread*) (11 samples, 1.17%)</title><rect x="438.1" y="148" width="13.8" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="441.06" y="158.5" ></text>
</g>
<g >
<title>GangWorker::loop() (36 samples, 3.83%)</title><rect x="596.2" y="100" width="45.2" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="599.23" y="110.5" >Gang..</text>
</g>
<g >
<title>LocalCache.get (4 samples, 0.43%)</title><rect x="783.3" y="84" width="5.0" height="15.0" fill="rgb(67,216,67)" rx="2" ry="2" />
<text  x="786.28" y="94.5" ></text>
</g>
<g >
<title>Constructor.newInstance (2 samples, 0.21%)</title><rect x="213.4" y="180" width="2.5" height="15.0" fill="rgb(72,220,72)" rx="2" ry="2" />
<text  x="216.36" y="190.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (2 samples, 0.21%)</title><rect x="317.6" y="68" width="2.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="320.55" y="78.5" ></text>
</g>
<g >
<title>G1CMTask::do_marking_step(double, bool, bool) (5 samples, 0.53%)</title><rect x="241.0" y="148" width="6.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="243.98" y="158.5" ></text>
</g>
<g >
<title>ReferencePipeline.forEach (2 samples, 0.21%)</title><rect x="744.4" y="292" width="2.5" height="15.0" fill="rgb(71,220,71)" rx="2" ry="2" />
<text  x="747.36" y="302.5" ></text>
</g>
<g >
<title>DefaultConfigurationContainer.doCreate (2 samples, 0.21%)</title><rect x="215.9" y="148" width="2.5" height="15.0" fill="rgb(78,226,78)" rx="2" ry="2" />
<text  x="218.87" y="158.5" ></text>
</g>
<g >
<title>Thread::call_run() (3 samples, 0.32%)</title><rect x="869.9" y="132" width="3.8" height="15.0" fill="rgb(195,195,57)" rx="2" ry="2" />
<text  x="872.89" y="142.5" ></text>
</g>
<g >
<title>SkipTaskWithNoActionsExecuter.execute (2 samples, 0.21%)</title><rect x="788.3" y="3028" width="2.5" height="15.0" fill="rgb(67,215,67)" rx="2" ry="2" />
<text  x="791.30" y="3038.5" ></text>
</g>
<g >
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (15 samples, 1.60%)</title><rect x="995.4" y="100" width="18.9" height="15.0" fill="rgb(188,188,54)" rx="2" ry="2" />
<text  x="998.43" y="110.5" ></text>
</g>
<g >
<title>ExecuteActionsTaskExecuter.execute (2 samples, 0.21%)</title><rect x="1064.5" y="708" width="2.5" height="15.0" fill="rgb(74,222,74)" rx="2" ry="2" />
<text  x="1067.47" y="718.5" ></text>
</g>
<g >
<title>GangWorker::loop() (10 samples, 1.06%)</title><rect x="228.4" y="164" width="12.6" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="231.43" y="174.5" ></text>
</g>
<g >
<title>DefaultBuildLifecycleController.lambda$populateWorkGraph$5 (2 samples, 0.21%)</title><rect x="744.4" y="1364" width="2.5" height="15.0" fill="rgb(66,214,66)" rx="2" ry="2" />
<text  x="747.36" y="1374.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 0.21%)</title><rect x="282.4" y="164" width="2.5" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="285.40" y="174.5" ></text>
</g>
<g >
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (5 samples, 0.53%)</title><rect x="664.0" y="164" width="6.3" height="15.0" fill="rgb(175,175,50)" rx="2" ry="2" />
<text  x="667.02" y="174.5" ></text>
</g>
<g >
<title>Thread*) (2 samples, 0.21%)</title><rect x="114.2" y="116" width="2.5" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="117.19" y="126.5" ></text>
</g>
<g >
<title>Thread*) (7 samples, 0.74%)</title><rect x="248.5" y="196" width="8.8" height="15.0" fill="rgb(219,77,77)" rx="2" ry="2" />
<text  x="251.51" y="206.5" ></text>
</g>
<g >
<title>DefaultServiceRegistry$OwnServices.getService (2 samples, 0.21%)</title><rect x="1159.9" y="68" width="2.5" height="15.0" fill="rgb(107,252,107)" rx="2" ry="2" />
<text  x="1162.87" y="78.5" ></text>
</g>
<g >
<title>DefaultRootComponentMetadataBuilder.addConfiguration (2 samples, 0.21%)</title><rect x="744.4" y="372" width="2.5" height="15.0" fill="rgb(89,235,89)" rx="2" ry="2" />
<text  x="747.36" y="382.5" ></text>
</g>
<g >
<title>SetupLoggingActionExecuter.execute (2 samples, 0.21%)</title><rect x="744.4" y="2372" width="2.5" height="15.0" fill="rgb(61,210,61)" rx="2" ry="2" />
<text  x="747.36" y="2382.5" ></text>
</g>
<g >
<title>DefaultPlanExecutor$ExecutorWorker.lambda$run$0 (2 samples, 0.21%)</title><rect x="788.3" y="3188" width="2.5" height="15.0" fill="rgb(80,227,80)" rx="2" ry="2" />
<text  x="791.30" y="3198.5" ></text>
</g>
<g >
<title>Gradle infrastructure (2 samples, 0.21%)</title><rect x="788.3" y="3172" width="2.5" height="15.0" fill="rgb(64,213,64)" rx="2" ry="2" />
<text  x="791.30" y="3182.5" ></text>
</g>
<g >
<title>Thread::call_run() (3 samples, 0.32%)</title><rect x="224.7" y="196" width="3.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="227.66" y="206.5" ></text>
</g>
<g >
<title>OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;ObjArrayKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (9 samples, 0.96%)</title><rect x="248.5" y="84" width="11.3" height="15.0" fill="rgb(194,194,57)" rx="2" ry="2" />
<text  x="251.51" y="94.5" ></text>
</g>
<g >
<title>Thread*) (5 samples, 0.53%)</title><rect x="413.0" y="180" width="6.2" height="15.0" fill="rgb(206,59,59)" rx="2" ry="2" />
<text  x="415.96" y="190.5" ></text>
</g>
<g >
<title>SkipEmptyWorkStep.executeWithNoEmptySources (2 samples, 0.21%)</title><rect x="207.1" y="276" width="2.5" height="15.0" fill="rgb(92,238,92)" rx="2" ry="2" />
<text  x="210.09" y="286.5" ></text>
</g>
<g >
<title>ContinuousBuildActionExecutor.execute (2 samples, 0.21%)</title><rect x="97.9" y="1332" width="2.5" height="15.0" fill="rgb(79,227,79)" rx="2" ry="2" />
<text  x="100.87" y="1342.5" ></text>
</g>
<g >
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.32%)</title><rect x="731.8" y="116" width="3.8" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="734.81" y="126.5" ></text>
</g>
<g >
<title>DefaultBuildLifecycleController$$Lambda$.accept (2 samples, 0.21%)</title><rect x="744.4" y="1316" width="2.5" height="15.0" fill="rgb(73,221,73)" rx="2" ry="2" />
<text  x="747.36" y="1326.5" ></text>
</g>
<g >
<title>GangWorker::loop() (7 samples, 0.74%)</title><rect x="426.8" y="164" width="8.8" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="429.77" y="174.5" ></text>
</g>
<g >
<title>Thread::call_run() (15 samples, 1.60%)</title><rect x="921.4" y="132" width="18.8" height="15.0" fill="rgb(192,192,56)" rx="2" ry="2" />
<text  x="924.36" y="142.5" ></text>
</g>
<g >
<title>RunAsWorkerThreadBuildActionExecutor$$Lambda$.create (2 samples, 0.21%)</title><rect x="744.4" y="2180" width="2.5" height="15.0" fill="rgb(79,226,79)" rx="2" ry="2" />
<text  x="747.36" y="2190.5" ></text>
</g>
<g >
<title>G1ConcurrentRefineThread::run_service() (3 samples, 0.32%)</title><rect x="916.3" y="116" width="3.8" height="15.0" fill="rgb(229,229,69)" rx="2" ry="2" />
<text  x="919.34" y="126.5" ></text>
</g>
<g >
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (6 samples, 0.64%)</title><rect x="946.5" y="148" width="7.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="949.47" y="158.5" ></text>
</g>
<g >
<title>g1_post_barrier_slow (3 samples, 0.32%)</title><rect x="1144.8" y="52" width="3.8" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="1147.81" y="62.5" ></text>
</g>
<g >
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (20 samples, 2.13%)</title><rect x="568.6" y="84" width="25.1" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="571.62" y="94.5" >G..</text>
</g>
<g >
<title>Thread*) (7 samples, 0.74%)</title><rect x="323.8" y="148" width="8.8" height="15.0" fill="rgb(235,102,102)" rx="2" ry="2" />
<text  x="326.83" y="158.5" ></text>
</g>
<g >
<title>LocalCache$LocalManualCache.get (2 samples, 0.21%)</title><rect x="788.3" y="100" width="2.5" height="15.0" fill="rgb(105,251,105)" rx="2" ry="2" />
<text  x="791.30" y="110.5" ></text>
</g>
<g >
<title>G1CMConcurrentMarkingTask::work(unsigned int) (5 samples, 0.53%)</title><rect x="241.0" y="164" width="6.3" height="15.0" fill="rgb(184,184,53)" rx="2" ry="2" />
<text  x="243.98" y="174.5" ></text>
</g>
<g >
<title>GangWorker::loop() (43 samples, 4.57%)</title><rect x="345.2" y="148" width="53.9" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="348.17" y="158.5" >GangW..</text>
</g>
<g >
<title>DependencyInjectingInstantiator.doCreate (6 samples, 0.64%)</title><rect x="213.4" y="84" width="7.5" height="15.0" fill="rgb(104,249,104)" rx="2" ry="2" />
<text  x="216.36" y="94.5" ></text>
</g>
<g >
<title>DefaultProjectStateRegistry.withMutableStateOfAllProjects (2 samples, 0.21%)</title><rect x="744.4" y="1076" width="2.5" height="15.0" fill="rgb(82,230,82)" rx="2" ry="2" />
<text  x="747.36" y="1086.5" ></text>
</g>
<g >
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (4 samples, 0.43%)</title><rect x="543.5" y="100" width="5.0" height="15.0" fill="rgb(176,176,50)" rx="2" ry="2" />
<text  x="546.51" y="110.5" ></text>
</g>
</g>
</svg>
